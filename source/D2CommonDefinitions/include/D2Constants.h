#pragma once

enum D2GameTypeMode
{
	//	MODE_SINGLE = 0,
	MODE_CLOSED = 1,
	MODE_TCP,
	MODE_OPEN,
};

enum D2GameResolutionMode {
	D2GAMERES_640x480,
	D2GAMERES_800x600,
	NUM_GAME_RESOLUTIONS
};

enum D2C_SaveMagicHeaders
{
	D2SMAGIC_HEADER = 0xAA55AA55,
	D2SMAGIC_QUESTINFO = 0x576F6F21,
	D2SMAGIC_WPINFO = 0x5753,
	D2SMAGIC_NPCINFO = 0x7701,
	D2SMAGIC_MAINSTATINFO = 0x6766,
	D2SMAGIC_SKILLINFO = 0x6866,
	D2SMAGIC_ITEMLIST = 0x4A4D,
	D2SMAGIC_MERCINFO = 0x6A66,
	D2SMAGIC_IRONGOLEM = 0x6B66
};

enum D2InteractStates
{
	INTERACT_NONE = 0,
	INTERACT_TALKING = 1,   //the menu is open
	INTERACT_TRADE = 2,   //your trading
};

enum D2WeaponClasses
{
	WEAPONCLASS_NONE,
	WEAPONCLASS_BOW,
	WEAPONCLASS_1HS,
	WEAPONCLASS_1HT,
	WEAPONCLASS_STF,
	WEAPONCLASS_2HS,
	WEAPONCLASS_2HT,
	WEAPONCLASS_XBW,
	WEAPONCLASS_1JS,
	WEAPONCLASS_1JT,
	WEAPONCLASS_1SS,
	WEAPONCLASS_1ST,
	WEAPONCLASS_HT1,
	WEAPONCLASS_HT2
};

enum D2Composits
{
	COMPOSIT_HEAD,
	COMPOSIT_TORSO,
	COMPOSIT_LEGS,
	COMPOSIT_RIGHTARM,
	COMPOSIT_LEFTARM,
	COMPOSIT_RIGHTHAND,
	COMPOSIT_LEFTHAND,
	COMPOSIT_SHIELD,
	COMPOSIT_SPECIAL1,
	COMPOSIT_SPECIAL2,
	COMPOSIT_SPECIAL3,
	COMPOSIT_SPECIAL4,
	COMPOSIT_SPECIAL5,
	COMPOSIT_SPECIAL6,
	COMPOSIT_SPECIAL7,
	COMPOSIT_SPECIAL8,
	NUM_COMPONENTS,
};

enum D2C_InventoryRecords
{
	INVENTORYRECORD_AMAZON,
	INVENTORYRECORD_SORCERESS,
	INVENTORYRECORD_NECROMANCER,
	INVENTORYRECORD_PALADIN,
	INVENTORYRECORD_BARBARIAN,
	INVENTORYRECORD_MONSTER,
	INVENTORYRECORD_TRADE_PAGE_1,
	INVENTORYRECORD_TRADE_PAGE_2,
	INVENTORYRECORD_BANK_PAGE_1,
	INVENTORYRECORD_TRANSMOGRIFY_BOX_PAGE_1,
	INVENTORYRECORD_GUILD_VAULT_PAGE_1,
	INVENTORYRECORD_TROPHY_CASE_PAGE_1,
	INVENTORYRECORD_BIG_BANK_PAGE_1,
	INVENTORYRECORD_HIRELING,
	INVENTORYRECORD_DRUID,
	INVENTORYRECORD_ASSASSIN,
	INVENTORYRECORD_AMAZON2,
	INVENTORYRECORD_SORCERESS2,
	INVENTORYRECORD_NECROMANCER2,
	INVENTORYRECORD_PALADIN2,
	INVENTORYRECORD_BARBARIAN2,
	INVENTORYRECORD_MONSTER2,
	INVENTORYRECORD_TRADE_PAGE_1_2,
	INVENTORYRECORD_TRADE_PAGE_2_2,
	INVENTORYRECORD_BANK_PAGE2,
	INVENTORYRECORD_TRANSMOGRIFY_BOX2,
	INVENTORYRECORD_GUILD_VAULT_PAGE2,
	INVENTORYRECORD_TROPHY_CASE_PAGE2,
	INVENTORYRECORD_BIG_BANK_PAGE2,
	INVENTORYRECORD_HIRELING2,
	INVENTORYRECORD_DRUID2,
	INVENTORYRECORD_ASSASSIN2
};

#ifndef CONSTANTS_ITEMS //Pseudo-Macro to group all constants
enum D2C_ItemQualities
{
	ITEMQUAL_INFERIOR = 0x01, 	//0x01 Inferior
	ITEMQUAL_NORMAL = 0x02, 	//0x02 Normal
	ITEMQUAL_SUPERIOR = 0x03, 	//0x03 Superior
	ITEMQUAL_MAGIC = 0x04, 		//0x04 Magic
	ITEMQUAL_SET = 0x05, 		//0x05 Set
	ITEMQUAL_RARE = 0x06, 		//0x06 Rare
	ITEMQUAL_UNIQUE = 0x07, 	//0x07 Unique
	ITEMQUAL_CRAFT = 0x08, 		//0x08 Crafted
	ITEMQUAL_TEMPERED = 0x09	//0x09 Tempered
};

enum D2C_ItemTypes
{
	ITEMTYPE_NONE_1 = 0,
	ITEMTYPE_NONE_2,
	ITEMTYPE_SHIELD,
	ITEMTYPE_ARMOR,
	ITEMTYPE_GOLD,
	ITEMTYPE_BOW_QUIVER,
	ITEMTYPE_CROSSBOW_QUIVER,
	ITEMTYPE_PLAYER_BODY_PART,
	ITEMTYPE_HERB,
	ITEMTYPE_POTION,
	ITEMTYPE_RING,
	ITEMTYPE_ELIXIR,
	ITEMTYPE_AMULET,
	ITEMTYPE_CHARM,
	ITEMTYPE_NONE_3,
	ITEMTYPE_BOOTS,
	ITEMTYPE_GLOVES,
	ITEMTYPE_NONE_4,
	ITEMTYPE_BOOK,
	ITEMTYPE_BELT,
	ITEMTYPE_GEM,
	ITEMTYPE_TORCH,
	ITEMTYPE_SCROLL,
	ITEMTYPE_NONE_5,
	ITEMTYPE_SCEPTER,
	ITEMTYPE_WAND,
	ITEMTYPE_STAFF,
	ITEMTYPE_BOW,
	ITEMTYPE_AXE,
	ITEMTYPE_CLUB,
	ITEMTYPE_SWORD,
	ITEMTYPE_HAMMER,
	ITEMTYPE_KNIFE,
	ITEMTYPE_SPEAR,
	ITEMTYPE_POLEARM,
	ITEMTYPE_CROSSBOW,
	ITEMTYPE_MACE,
	ITEMTYPE_HELM,
	ITEMTYPE_MISSILE_POTION,
	ITEMTYPE_QUEST,
	ITEMTYPE_BODY_PART,
	ITEMTYPE_KEY,
	ITEMTYPE_THROWING_KNIFE,
	ITEMTYPE_THROWING_AXE,
	ITEMTYPE_JAVELIN,
	ITEMTYPE_WEAPON,
	ITEMTYPE_MELEE_WEAPON,
	ITEMTYPE_MISSILE_WEAPON,
	ITEMTYPE_THROWN_WEAPON,
	ITEMTYPE_COMBO_WEAPON,
	ITEMTYPE_ANY_ARMOR,
	ITEMTYPE_ANY_SHIELD,
	ITEMTYPE_MISCELLANEOUS,
	ITEMTYPE_SOCKET_FILLER,
	ITEMTYPE_SECOND_HAND,
	ITEMTYPE_STAVES_AND_RODS,
	ITEMTYPE_MISSILE,
	ITEMTYPE_BLUNT,
	ITEMTYPE_JEWEL,
	ITEMTYPE_CLASS_SPECIFIC,
	ITEMTYPE_AMAZON_ITEM,
	ITEMTYPE_BARBARIAN_ITEM,
	ITEMTYPE_NECROMANCER_ITEM,
	ITEMTYPE_PALADIN_ITEM,
	ITEMTYPE_SORCERESS_ITEM,
	ITEMTYPE_ASSASSIN_ITEM,
	ITEMTYPE_DRUID_ITEM,
	ITEMTYPE_HAND_TO_HAND,
	ITEMTYPE_ORB,
	ITEMTYPE_VOODOO_HEADS,
	ITEMTYPE_AURIC_SHIELDS,
	ITEMTYPE_PRIMAL_HELM,
	ITEMTYPE_PELT,
	ITEMTYPE_CLOAK,
	ITEMTYPE_RUNE,
	ITEMTYPE_CIRCLET,
	ITEMTYPE_HEALING_POTION,
	ITEMTYPE_MANA_POTION,
	ITEMTYPE_REJUV_POTION,
	ITEMTYPE_STAMINA_POTION,
	ITEMTYPE_ANTIDOTE_POTION,
	ITEMTYPE_THAWING_POTION,
	ITEMTYPE_SMALL_CHARM,
	ITEMTYPE_MEDIUM_CHARM,
	ITEMTYPE_LARGE_CHARM,
	ITEMTYPE_AMAZON_BOW,
	ITEMTYPE_AMAZON_SPEAR,
	ITEMTYPE_AMAZON_JAVELIN,
	ITEMTYPE_HAND_TO_HAND_2,
	ITEMTYPE_MAGIC_BOW_QUIV,
	ITEMTYPE_UNK,
	ITEMTYPE_CHIPPED_GEM,
	ITEMTYPE_FLAWED_GEM,
	ITEMTYPE_STANDARD_GEM,
	ITEMTYPE_FLAWLESS_GEM,
	ITEMTYPE_PERFECT_GEM,
	ITEMTYPE_AMETHYST,
	ITEMTYPE_DIAMOND,
	ITEMTYPE_EMERALD,
	ITEMTYPE_RUBY,
	ITEMTYPE_SAPPHIRE,
	ITEMTYPE_TOPAZ,
	ITEMTYPE_SKULL,
	// Own ItemTypes
	ITEMTYPE_TOME,
	ITEMTYPE_CLUESCROLL
};

enum D2C_ItemModes
{
	IMODE_STORED, 		//Item is in Storage (inventory, cube, Stash?)
	IMODE_EQUIP, 		//Item is Equippped
	IMODE_INBELT, 		//Item is in Belt Rows
	IMODE_ONGROUND, 	//Item is on Ground
	IMODE_ONCURSOR, 	//Item is on Cursor
	IMODE_DROPPING, 	//Item is Being Dropped
	IMODE_SOCKETED		//Item is Socketed in another Item
};

enum D2C_ItemFlags
{
	IFLAG_NEWITEM = 0x00000001,
	IFLAG_TARGET = 0x00000002,
	IFLAG_TARGETING = 0x00000004,
	IFLAG_DELETED = 0x00000008,
	IFLAG_IDENTIFIED = 0x00000010,
	IFLAG_QUANTITY = 0x00000020,
	IFLAG_SWITCHIN = 0x00000040,
	IFLAG_SWITCHOUT = 0x00000080,
	IFLAG_BROKEN = 0x00000100,
	IFLAG_REPAIRED = 0x00000200,
	IFLAG_UNK1 = 0x00000400,
	IFLAG_SOCKETED = 0x00000800,
	IFLAG_NOSELL = 0x00001000,
	IFLAG_INSTORE = 0x00002000,
	IFLAG_NOEQUIP = 0x00004000,
	IFLAG_NAMED = 0x00008000,
	IFLAG_ISEAR = 0x00010000,
	IFLAG_STARTITEM = 0x00020000,
	IFLAG_UNK2 = 0x00040000,
	IFLAG_INIT = 0x00080000,
	IFLAG_UNK3 = 0x00100000,
	IFLAG_COMPACTSAVE = 0x00200000,
	IFLAG_ETHEREAL = 0x00400000,
	IFLAG_JUSTSAVED = 0x00800000,
	IFLAG_PERSONALIZED = 0x01000000,
	IFLAG_LOWQUALITY = 0x02000000,
	IFLAG_RUNEWORD = 0x04000000,
	IFLAG_ITEM = 0x08000000
};

enum D2C_UniqueItemFlags
{
	UNIQUEITEM_ENABLED = 0x00000001,
	UNIQUEITEM_NOLIMIT = 0x00000002,
	UNIQUEITEM_CARRY1 = 0x00000004,
	UNIQUEITEM_LADDER = 0x00000008,
};

enum D2C_ItemDropFlags
{
	ITEMDROPFLAG_ALWAYSETH = 0x00000004,
};

enum D2C_ItemCmdFlags
{
	ITEMCMDFLAG_DELETE = 0x00000020,
};

#define D2C_InventoryHeader 0x1020304

enum D2C_ItemInvPage
{
	INVPAGE_INVENTORY = 0,
	INVPAGE_EQUIP = 1,
	INVPAGE_TRADE = 2,
	INVPAGE_CUBE = 3,
	INVPAGE_STASH = 4,
	INVPAGE_BELT = 5,
	INVPAGE_NULL = 255
};

enum D2C_PlayerBodyLocs
{
	BODYLOC_NONE,		//Not Equipped
	BODYLOC_HEAD,		//Helm
	BODYLOC_NECK,		//Amulet
	BODYLOC_TORSO,		//Body Armor
	BODYLOC_RARM,		//Right-Hand
	BODYLOC_LARM,		//Left-Hand
	BODYLOC_RRIN,		//Right Ring
	BODYLOC_LRIN,		//Left Ring
	BODYLOC_BELT,		//Belt
	BODYLOC_FEET,		//Boots
	BODYLOC_GLOVES,		//Gloves
	BODYLOC_SWRARM,		//Right-Hand on Switch
	BODYLOC_SWLARM		//Left-Hand on Switch
};

enum D2C_NodePages
{
	NODEPAGE_STORAGE = 1,
	NODEPAGE_BELTSLOTS = 2,
	NODEPAGE_EQUIP = 3
};

enum D2C_InventoryGrids
{
	INVGRID_BODYLOC,
	INVGRID_BELT,
	INVGRID_INVENTORY,
	INVGRID_MAX_NUM
};

enum D2C_CubeOps
{
	CUBEOP_COWPORTAL = 1,
	CUBEOP_UBERDUNGEON = 2,
	CUBEOP_UBERTRISTRAM = 3,
	CUBEOP_SKILLPTS = 4,
	CUBEOP_STATPTS = 5,
	CUBEOP_REDPORTAL = 128,
	CUBEOP_ADDSTAT = 129,
	CUBEOP_ITEMCODE = 252,
	CUBEOP_ITEMTYPE = 253,
	CUBEOP_USEITEM = 254,
	CUBEOP_USETYPE = 255,
};

enum D2C_CubeOutFlags
{
	CUBEFLAG_OUT_COPYMODS = 0x01,
	CUBEFLAG_OUT_SOCKET = 0x02,
	CUBEFLAG_OUT_ETHEREAL = 0x04,
	CUBEFLAG_OUT_SPECIAL = 0x08,
	CUBEFLAG_OUT_UNSOCKET = 0x10,
	CUBEFLAG_OUT_REMOVE = 0x20,
	CUBEFLAG_OUT_NORMAL = 0x40,
	CUBEFLAG_OUT_EXCEPTIONAL = 0x80,
	CUBEFLAG_OUT_ELITE = 0x100,
	CUBEFLAG_OUT_REPAIR = 0x200,
	CUBEFLAG_OUT_RECHARGE = 0x400,

	//Custom Flags
	CUBEFLAG_OUT_KEEPONLYSOCKETABLES = 0x800,
	CUBEFLAG_OUT_DUPE = 0x1000,
};

enum D2C_CubeInFlags
{
	CUBEFLAG_IN_USEANY = 0x01,
	CUBEFLAG_IN_ITEMCODE = 0x02,
	CUBEFLAG_IN_NOSOCKET = 0x04,
	CUBEFLAG_IN_SOCKETED = 0x08,
	CUBEFLAG_IN_ETHEREAL = 0x10,
	CUBEFLAG_IN_NOETHEREAL = 0x20,
	CUBEFLAG_IN_SPECIAL = 0x40,
	CUBEFLAG_IN_UPGRADED = 0x80,
	CUBEFLAG_IN_NORMAL = 0x100,
	CUBEFLAG_IN_EXCEPTIONAL = 0x200,
	CUBEFLAG_IN_ELITE = 0x400,
	CUBEFLAG_IN_NORUNES = 0x800,
};
#endif // CONSTANTS_ITEMS

#ifndef CONSTANTS_LEVELS //Pseudo-Macro to group all constants
enum D2C_Levels
{
	LEVEL_NONE = 0,
	LEVEL_ROGUEENCAMPMENT = 1,
	LEVEL_BLOODMOOR,
	LEVEL_COLDPLAINS,
	LEVEL_STONYFIELD,
	LEVEL_DARKWOOD,
	LEVEL_BLACKMARSH,
	LEVEL_TAMOEHIGHLAND,
	LEVEL_DENOFEVIL,
	LEVEL_CAVELEV1,
	LEVEL_UNDERGROUNDPASSAGELEV1,
	LEVEL_HOLELEV1,
	LEVEL_PITLEV1,
	LEVEL_CAVELEV2,
	LEVEL_UNDERGROUNDPASSAGELEV2,
	LEVEL_HOLELEV2,
	LEVEL_PITLEV2,
	LEVEL_BURIALGROUNDS,
	LEVEL_CRYPT,
	LEVEL_MAUSOLEUM,
	LEVEL_FORGOTTENTOWER,
	LEVEL_TOWERCELLARLEV1,
	LEVEL_TOWERCELLARLEV2,
	LEVEL_TOWERCELLARLEV3,
	LEVEL_TOWERCELLARLEV4,
	LEVEL_TOWERCELLARLEV5,
	LEVEL_MONASTERYGATE,
	LEVEL_OUTERCLOISTER,
	LEVEL_BARRACKS,
	LEVEL_JAILLEV1,
	LEVEL_JAILLEV2,
	LEVEL_JAILLEV3,
	LEVEL_INNERCLOISTER,
	LEVEL_CATHEDRAL,
	LEVEL_CATACOMBSLEV1,
	LEVEL_CATACOMBSLEV2,
	LEVEL_CATACOMBSLEV3,
	LEVEL_CATACOMBSLEV4,
	LEVEL_TRISTRAM,
	LEVEL_MOOMOOFARM,
	LEVEL_LUTGHOLEIN,
	LEVEL_ROCKYWASTE,
	LEVEL_DRYHILLS,
	LEVEL_FAROASIS,
	LEVEL_LOSTCITY,
	LEVEL_VALLEYOFSNAKES,
	LEVEL_CANYONOFTHEMAGI,
	LEVEL_SEWERSLEV1,
	LEVEL_SEWERSLEV2,
	LEVEL_SEWERSLEV3,
	LEVEL_HAREMLEV1,
	LEVEL_HAREMLEV2,
	LEVEL_PALACECELLARLEV1,
	LEVEL_PALACECELLARLEV2,
	LEVEL_PALACECELLARLEV3,
	LEVEL_STONYTOMBLEV1,
	LEVEL_HALLSOFTHEDEADLEV1,
	LEVEL_HALLSOFTHEDEADLEV2,
	LEVEL_CLAWVIPERTEMPLELEV1,
	LEVEL_STONYTOMBLEV2,
	LEVEL_HALLSOFTHEDEADLEV3,
	LEVEL_CLAWVIPERTEMPLELEV2,
	LEVEL_MAGGOTLAIRLEV1,
	LEVEL_MAGGOTLAIRLEV2,
	LEVEL_MAGGOTLAIRLEV3,
	LEVEL_ANCIENTTUNNELS,
	LEVEL_TALRASHASTOMB1,
	LEVEL_TALRASHASTOMB2,
	LEVEL_TALRASHASTOMB3,
	LEVEL_TALRASHASTOMB4,
	LEVEL_TALRASHASTOMB5,
	LEVEL_TALRASHASTOMB6,
	LEVEL_TALRASHASTOMB7,
	LEVEL_DURIELSLAIR,
	LEVEL_ARCANESANCTUARY,
	LEVEL_KURASTDOCKTOWN,
	LEVEL_SPIDERFOREST,
	LEVEL_GREATMARSH,
	LEVEL_FLAYERJUNGLE,
	LEVEL_LOWERKURAST,
	LEVEL_KURASTBAZAAR,
	LEVEL_UPPERKURAST,
	LEVEL_KURASTCAUSEWAY,
	LEVEL_TRAVINCAL,
	LEVEL_SPIDERCAVE,
	LEVEL_SPIDERCAVERN,
	LEVEL_SWAMPYPITLEV1,
	LEVEL_SWAMPYPITLEV2,
	LEVEL_FLAYERDUNGEONLEV1,
	LEVEL_FLAYERDUNGEONLEV2,
	LEVEL_SWAMPYPITLEV3,
	LEVEL_FLAYERDUNGEONLEV3,
	LEVEL_SEWERSA3LEV1,
	LEVEL_SEWERSA3LEV2,
	LEVEL_RUINEDTEMPLE,
	LEVEL_DISUSEDFANE,
	LEVEL_FORGOTTENRELIQUARY,
	LEVEL_FORGOTTENTEMPLE,
	LEVEL_RUINEDFANE,
	LEVEL_DISUSEDRELIQUARY,
	LEVEL_DURANCEOFHATELEV1,
	LEVEL_DURANCEOFHATELEV2,
	LEVEL_DURANCEOFHATELEV3,
	LEVEL_THEPANDEMONIUMFORTRESS,
	LEVEL_OUTERSTEPPES,
	LEVEL_PLAINSOFDESPAIR,
	LEVEL_CITYOFTHEDAMNED,
	LEVEL_RIVEROFFLAME,
	LEVEL_CHAOSSANCTUM,
	LEVEL_HARROGATH,
	LEVEL_BLOODYFOOTHILLS,
	LEVEL_ID_ACT5_BARRICADE_1,
	LEVEL_ARREATPLATEAU,
	LEVEL_CRYSTALIZEDCAVERNLEV1,
	LEVEL_CELLAROFPITY,
	LEVEL_CRYSTALIZEDCAVERNLEV2,
	LEVEL_ECHOCHAMBER,
	LEVEL_TUNDRAWASTELANDS,
	LEVEL_GLACIALCAVESLEV1,
	LEVEL_GLACIALCAVESLEV2,
	LEVEL_ROCKYSUMMIT,
	LEVEL_NIHLATHAKSTEMPLE,
	LEVEL_HALLSOFANGUISH,
	LEVEL_HALLSOFDEATHSCALLING,
	LEVEL_HALLSOFVAUGHT,
	LEVEL_HELL1,
	LEVEL_HELL2,
	LEVEL_HELL3,
	LEVEL_THEWORLDSTONEKEEPLEV1,
	LEVEL_THEWORLDSTONEKEEPLEV2,
	LEVEL_THEWORLDSTONEKEEPLEV3,
	LEVEL_THRONEOFDESTRUCTION,
	LEVEL_THEWORLDSTONECHAMBER
};

enum D2C_LvlPrestIds
{
	LVLPREST_NONE,
	LVLPREST_ACT1_TOWN_1,
	LVLPREST_ACT1_TOWN_1_TRANSITION_E,
	LVLPREST_ACT1_TOWN_1_TRANSITION_S,
	LVLPREST_ACT1_WILD_BORDER_1,
	LVLPREST_ACT1_WILD_BORDER_2,
	LVLPREST_ACT1_WILD_BORDER_3,
	LVLPREST_ACT1_WILD_BORDER_4,
	LVLPREST_ACT1_WILD_BORDER_5,
	LVLPREST_ACT1_WILD_BORDER_6,
	LVLPREST_ACT1_WILD_BORDER_7,
	LVLPREST_ACT1_WILD_BORDER_8,
	LVLPREST_ACT1_WILD_BORDER_9,
	LVLPREST_ACT1_WILD_BORDER_10,
	LVLPREST_ACT1_WILD_BORDER_11,
	LVLPREST_ACT1_WILD_BORDER_12,
	LVLPREST_ACT1_WILD_CLIFF_BORDER_2,
	LVLPREST_ACT1_WILD_CLIFF_BORDER_3,
	LVLPREST_ACT1_WILD_CLIFF_BORDER_5,
	LVLPREST_ACT1_WILD_CLIFF_BORDER_6A,
	LVLPREST_ACT1_WILD_CLIFF_BORDER_6B,
	LVLPREST_ACT1_WILD_CLIFF_BORDER_6C,
	LVLPREST_ACT1_WILD_CLIFF_BORDER_7,
	LVLPREST_ACT1_WILD_CLIFF_BORDER_10,
	LVLPREST_ACT1_WILD_CLIFF_CAVE_RIGHT,
	LVLPREST_ACT1_WILD_CLIFF_CAVE_LEFT,
	LVLPREST_ACT1_RIVER_UPPER,
	LVLPREST_ACT1_RIVER_LOWER,
	LVLPREST_ACT1_BRIDGE,
	LVLPREST_ACT1_STONE_FILL_1,
	LVLPREST_ACT1_STONE_FILL_2,
	LVLPREST_ACT1_CORRAL_FILL,
	LVLPREST_ACT1_FENCE_FILL_1,
	LVLPREST_ACT1_FENCE_FILL_2,
	LVLPREST_ACT1_FENCE_FILL_3,
	LVLPREST_ACT1_FENCE_FILL_4,
	LVLPREST_ACT1_FENCE_FILL_5,
	LVLPREST_ACT1_FENCE_FILL_6,
	LVLPREST_ACT1_SWAMP_FILL_1,
	LVLPREST_ACT1_SWAMP_FILL_2,
	LVLPREST_ACT1_TREE_FILL,
	LVLPREST_ACT1_RUIN,
	LVLPREST_ACT1_FALLEN_CAMP_1,
	LVLPREST_ACT1_FALLEN_CAMP_2,
	LVLPREST_ACT1_FALLEN_CAMP_BISHIBOSH,
	LVLPREST_ACT1_CAMP,
	LVLPREST_ACT1_POND,
	LVLPREST_ACT1_COTTAGES_1,
	LVLPREST_ACT1_COTTAGES_2,
	LVLPREST_ACT1_COTTAGES_3,
	LVLPREST_ACT1_BIVOUAC,
	LVLPREST_ACT1_CAVE_ENTRANCE,
	LVLPREST_ACT1_DOE_ENTRANCE,
	LVLPREST_ACT1_CAVE_W,
	LVLPREST_ACT1_CAVE_E,
	LVLPREST_ACT1_CAVE_EW,
	LVLPREST_ACT1_CAVE_S,
	LVLPREST_ACT1_CAVE_SW,
	LVLPREST_ACT1_CAVE_SE,
	LVLPREST_ACT1_CAVE_SEW,
	LVLPREST_ACT1_CAVE_N,
	LVLPREST_ACT1_CAVE_NW,
	LVLPREST_ACT1_CAVE_NE,
	LVLPREST_ACT1_CAVE_NEW,
	LVLPREST_ACT1_CAVE_NS,
	LVLPREST_ACT1_CAVE_NSW,
	LVLPREST_ACT1_CAVE_NSE,
	LVLPREST_ACT1_CAVE_NSEW,
	LVLPREST_ACT1_CAVE_THEME_W,
	LVLPREST_ACT1_CAVE_THEME_E,
	LVLPREST_ACT1_CAVE_THEME_EW,
	LVLPREST_ACT1_CAVE_THEME_S,
	LVLPREST_ACT1_CAVE_THEME_SW,
	LVLPREST_ACT1_CAVE_THEME_SE,
	LVLPREST_ACT1_CAVE_THEME_SEW,
	LVLPREST_ACT1_CAVE_THEME_N,
	LVLPREST_ACT1_CAVE_THEME_NW,
	LVLPREST_ACT1_CAVE_THEME_NE,
	LVLPREST_ACT1_CAVE_THEME_NEW,
	LVLPREST_ACT1_CAVE_THEME_NS,
	LVLPREST_ACT1_CAVE_THEME_NSW,
	LVLPREST_ACT1_CAVE_THEME_NSE,
	LVLPREST_ACT1_CAVE_THEME_NSEW,
	LVLPREST_ACT1_CAVE_PREV_W,
	LVLPREST_ACT1_CAVE_PREV_E,
	LVLPREST_ACT1_CAVE_PREV_S,
	LVLPREST_ACT1_CAVE_PREV_N,
	LVLPREST_ACT1_CAVE_NEXT_W,
	LVLPREST_ACT1_CAVE_NEXT_E,
	LVLPREST_ACT1_CAVE_NEXT_S,
	LVLPREST_ACT1_CAVE_NEXT_N,
	LVLPREST_ACT1_CAVE_DOWN_W,
	LVLPREST_ACT1_CAVE_DOWN_E,
	LVLPREST_ACT1_CAVE_DOWN_S,
	LVLPREST_ACT1_CAVE_DOWN_N,
	LVLPREST_ACT1_CAVE_DEN_OF_EVIL_W,
	LVLPREST_ACT1_CAVE_DEN_OF_EVIL_E,
	LVLPREST_ACT1_CAVE_DEN_OF_EVIL_S,
	LVLPREST_ACT1_CAVE_DEN_OF_EVIL_N,
	LVLPREST_ACT1_CAVE_COLDCROW_W,
	LVLPREST_ACT1_CAVE_COLDCROW_E,
	LVLPREST_ACT1_CAVE_COLDCROW_S,
	LVLPREST_ACT1_CAVE_COLDCROW_N,
	LVLPREST_ACT1_CAVE_TREASURE_1,
	LVLPREST_ACT1_CAVE_TREASURE_2,
	LVLPREST_ACT1_CAVE_TREASURE_3,
	LVLPREST_ACT1_CAVE_TREASURE_4,
	LVLPREST_ACT1_CAVE_TREASURE_5,
	LVLPREST_ACT1_GRAVEYARD,
	LVLPREST_ACT1_CRYPT_W,
	LVLPREST_ACT1_CRYPT_E,
	LVLPREST_ACT1_CRYPT_EW,
	LVLPREST_ACT1_CRYPT_S,
	LVLPREST_ACT1_CRYPT_SW,
	LVLPREST_ACT1_CRYPT_SE,
	LVLPREST_ACT1_CRYPT_SEW,
	LVLPREST_ACT1_CRYPT_N,
	LVLPREST_ACT1_CRYPT_NW,
	LVLPREST_ACT1_CRYPT_NE,
	LVLPREST_ACT1_CRYPT_NEW,
	LVLPREST_ACT1_CRYPT_NS,
	LVLPREST_ACT1_CRYPT_NSW,
	LVLPREST_ACT1_CRYPT_NSE,
	LVLPREST_ACT1_CRYPT_NSEW,
	LVLPREST_ACT1_CRYPT_THEME_W,
	LVLPREST_ACT1_CRYPT_THEME_E,
	LVLPREST_ACT1_CRYPT_THEME_EW,
	LVLPREST_ACT1_CRYPT_THEME_S,
	LVLPREST_ACT1_CRYPT_THEME_SW,
	LVLPREST_ACT1_CRYPT_THEME_SE,
	LVLPREST_ACT1_CRYPT_THEME_SEW,
	LVLPREST_ACT1_CRYPT_THEME_N,
	LVLPREST_ACT1_CRYPT_THEME_NW,
	LVLPREST_ACT1_CRYPT_THEME_NE,
	LVLPREST_ACT1_CRYPT_THEME_NEW,
	LVLPREST_ACT1_CRYPT_THEME_NS,
	LVLPREST_ACT1_CRYPT_THEME_NSW,
	LVLPREST_ACT1_CRYPT_THEME_NSE,
	LVLPREST_ACT1_CRYPT_THEME_NSEW,
	LVLPREST_ACT1_CRYPT_PREV_W,
	LVLPREST_ACT1_CRYPT_PREV_E,
	LVLPREST_ACT1_CRYPT_PREV_S,
	LVLPREST_ACT1_CRYPT_PREV_N,
	LVLPREST_ACT1_CRYPT_NEXT_W,
	LVLPREST_ACT1_CRYPT_NEXT_E,
	LVLPREST_ACT1_CRYPT_NEXT_S,
	LVLPREST_ACT1_CRYPT_NEXT_N,
	LVLPREST_ACT1_CRYPT_BONEBREAK_W,
	LVLPREST_ACT1_CRYPT_BONEBREAK_E,
	LVLPREST_ACT1_CRYPT_BONEBREAK_S,
	LVLPREST_ACT1_CRYPT_BONEBREAK_N,
	LVLPREST_ACT1_CRYPT_CHEST_W,
	LVLPREST_ACT1_CRYPT_CHEST_E,
	LVLPREST_ACT1_CRYPT_CHEST_S,
	LVLPREST_ACT1_CRYPT_CHEST_N,
	LVLPREST_ACT1_CRYPT_PORTAL_W,
	LVLPREST_ACT1_CRYPT_PORTAL_E,
	LVLPREST_ACT1_CRYPT_PORTAL_S,
	LVLPREST_ACT1_CRYPT_PORTAL_N,
	LVLPREST_ACT1_CRYPT_COUNTESS_X,
	LVLPREST_ACT1_CAIRN_STONES,
	LVLPREST_ACT1_INIFUS,
	LVLPREST_ACT1_TOWER_TOME,
	LVLPREST_ACT1_TOWER_1,
	LVLPREST_ACT1_TOWER_2,
	LVLPREST_ACT1_MON_FRONT,
	LVLPREST_ACT1_COURTYARD_1,
	LVLPREST_ACT1_BARRACKS_COURT_CONNECT,
	LVLPREST_ACT1_BARRACKS_W,
	LVLPREST_ACT1_BARRACKS_E,
	LVLPREST_ACT1_BARRACKS_EW,
	LVLPREST_ACT1_BARRACKS_S,
	LVLPREST_ACT1_BARRACKS_SW,
	LVLPREST_ACT1_BARRACKS_SE,
	LVLPREST_ACT1_BARRACKS_SEW,
	LVLPREST_ACT1_BARRACKS_N,
	LVLPREST_ACT1_BARRACKS_NW,
	LVLPREST_ACT1_BARRACKS_NE,
	LVLPREST_ACT1_BARRACKS_NEW,
	LVLPREST_ACT1_BARRACKS_NS,
	LVLPREST_ACT1_BARRACKS_NSW,
	LVLPREST_ACT1_BARRACKS_NSE,
	LVLPREST_ACT1_BARRACKS_NSEW,
	LVLPREST_ACT1_BARRACKS_THEME_W,
	LVLPREST_ACT1_BARRACKS_THEME_E,
	LVLPREST_ACT1_BARRACKS_THEME_EW,
	LVLPREST_ACT1_BARRACKS_THEME_S,
	LVLPREST_ACT1_BARRACKS_THEME_SW,
	LVLPREST_ACT1_BARRACKS_THEME_SE,
	LVLPREST_ACT1_BARRACKS_THEME_SEW,
	LVLPREST_ACT1_BARRACKS_THEME_N,
	LVLPREST_ACT1_BARRACKS_THEME_NW,
	LVLPREST_ACT1_BARRACKS_THEME_NE,
	LVLPREST_ACT1_BARRACKS_THEME_NEW,
	LVLPREST_ACT1_BARRACKS_THEME_NS,
	LVLPREST_ACT1_BARRACKS_THEME_NSW,
	LVLPREST_ACT1_BARRACKS_THEME_NSE,
	LVLPREST_ACT1_BARRACKS_THEME_NSEW,
	LVLPREST_ACT1_BARRACKS_NEXT_W,
	LVLPREST_ACT1_BARRACKS_NEXT_E,
	LVLPREST_ACT1_BARRACKS_NEXT_S,
	LVLPREST_ACT1_BARRACKS_NEXT_N,
	LVLPREST_ACT1_BARRACKS_FORGE_W,
	LVLPREST_ACT1_BARRACKS_FORGE_E,
	LVLPREST_ACT1_BARRACKS_FORGE_S,
	LVLPREST_ACT1_BARRACKS_FORGE_N,
	LVLPREST_ACT1_JAIL_W,
	LVLPREST_ACT1_JAIL_E,
	LVLPREST_ACT1_JAIL_EW,
	LVLPREST_ACT1_JAIL_S,
	LVLPREST_ACT1_JAIL_SW,
	LVLPREST_ACT1_JAIL_SE,
	LVLPREST_ACT1_JAIL_SEW,
	LVLPREST_ACT1_JAIL_N,
	LVLPREST_ACT1_JAIL_NW,
	LVLPREST_ACT1_JAIL_NE,
	LVLPREST_ACT1_JAIL_NEW,
	LVLPREST_ACT1_JAIL_NS,
	LVLPREST_ACT1_JAIL_NSW,
	LVLPREST_ACT1_JAIL_NSE,
	LVLPREST_ACT1_JAIL_NSEW,
	LVLPREST_ACT1_JAIL_THEME_W,
	LVLPREST_ACT1_JAIL_THEME_E,
	LVLPREST_ACT1_JAIL_THEME_EW,
	LVLPREST_ACT1_JAIL_THEME_S,
	LVLPREST_ACT1_JAIL_THEME_SW,
	LVLPREST_ACT1_JAIL_THEME_SE,
	LVLPREST_ACT1_JAIL_THEME_SEW,
	LVLPREST_ACT1_JAIL_THEME_N,
	LVLPREST_ACT1_JAIL_THEME_NW,
	LVLPREST_ACT1_JAIL_THEME_NE,
	LVLPREST_ACT1_JAIL_THEME_NEW,
	LVLPREST_ACT1_JAIL_THEME_NS,
	LVLPREST_ACT1_JAIL_THEME_NSW,
	LVLPREST_ACT1_JAIL_THEME_NSE,
	LVLPREST_ACT1_JAIL_THEME_NSEW,
	LVLPREST_ACT1_JAIL_PREV_W,
	LVLPREST_ACT1_JAIL_PREV_E,
	LVLPREST_ACT1_JAIL_PREV_S,
	LVLPREST_ACT1_JAIL_PREV_N,
	LVLPREST_ACT1_JAIL_NEXT_W,
	LVLPREST_ACT1_JAIL_NEXT_E,
	LVLPREST_ACT1_JAIL_NEXT_S,
	LVLPREST_ACT1_JAIL_NEXT_N,
	LVLPREST_ACT1_JAIL_CATH_W,
	LVLPREST_ACT1_JAIL_CATH_E,
	LVLPREST_ACT1_JAIL_CATH_S,
	LVLPREST_ACT1_JAIL_CATH_N,
	LVLPREST_ACT1_JAIL_WAYPOINT_W,
	LVLPREST_ACT1_JAIL_WAYPOINT_E,
	LVLPREST_ACT1_JAIL_WAYPOINT_S,
	LVLPREST_ACT1_JAIL_WAYPOINT_N,
	LVLPREST_ACT1_JAIL_PITSPAWN_W,
	LVLPREST_ACT1_JAIL_PITSPAWN_E,
	LVLPREST_ACT1_JAIL_PITSPAWN_S,
	LVLPREST_ACT1_JAIL_PITSPAWN_N,
	LVLPREST_ACT1_COURTYARD_2,
	LVLPREST_ACT1_CATHEDRAL,
	LVLPREST_ACT1_CATACOMBS_W,
	LVLPREST_ACT1_CATACOMBS_E,
	LVLPREST_ACT1_CATACOMBS_EW,
	LVLPREST_ACT1_CATACOMBS_S,
	LVLPREST_ACT1_CATACOMBS_SW,
	LVLPREST_ACT1_CATACOMBS_SE,
	LVLPREST_ACT1_CATACOMBS_SEW,
	LVLPREST_ACT1_CATACOMBS_N,
	LVLPREST_ACT1_CATACOMBS_NW,
	LVLPREST_ACT1_CATACOMBS_NE,
	LVLPREST_ACT1_CATACOMBS_NEW,
	LVLPREST_ACT1_CATACOMBS_NS,
	LVLPREST_ACT1_CATACOMBS_NSW,
	LVLPREST_ACT1_CATACOMBS_NSE,
	LVLPREST_ACT1_CATACOMBS_NSEW,
	LVLPREST_ACT1_CATACOMBS_THEME_W,
	LVLPREST_ACT1_CATACOMBS_THEME_E,
	LVLPREST_ACT1_CATACOMBS_THEME_EW,
	LVLPREST_ACT1_CATACOMBS_THEME_S,
	LVLPREST_ACT1_CATACOMBS_THEME_SW,
	LVLPREST_ACT1_CATACOMBS_THEME_SE,
	LVLPREST_ACT1_CATACOMBS_THEME_SEW,
	LVLPREST_ACT1_CATACOMBS_THEME_N,
	LVLPREST_ACT1_CATACOMBS_THEME_NW,
	LVLPREST_ACT1_CATACOMBS_THEME_NE,
	LVLPREST_ACT1_CATACOMBS_THEME_NEW,
	LVLPREST_ACT1_CATACOMBS_THEME_NS,
	LVLPREST_ACT1_CATACOMBS_THEME_NSW,
	LVLPREST_ACT1_CATACOMBS_THEME_NSE,
	LVLPREST_ACT1_CATACOMBS_THEME_NSEW,
	LVLPREST_ACT1_CATACOMBS_PREV_EW,
	LVLPREST_ACT1_CATACOMBS_PREV_NS,
	LVLPREST_ACT1_CATACOMBS_PREV_NSEW,
	LVLPREST_ACT1_CATACOMBS_NEXT_W,
	LVLPREST_ACT1_CATACOMBS_NEXT_E,
	LVLPREST_ACT1_CATACOMBS_NEXT_S,
	LVLPREST_ACT1_CATACOMBS_NEXT_N,
	LVLPREST_ACT1_CATACOMBS_WAYPOINT_W,
	LVLPREST_ACT1_CATACOMBS_WAYPOINT_E,
	LVLPREST_ACT1_CATACOMBS_WAYPOINT_S,
	LVLPREST_ACT1_CATACOMBS_WAYPOINT_N,
	LVLPREST_ACT1_ANDARIEL,
	LVLPREST_ACT1_TRISTRAM,
	LVLPREST_ACT2_TOWN,
	LVLPREST_ACT2_SEWER_W,
	LVLPREST_ACT2_SEWER_E,
	LVLPREST_ACT2_SEWER_EW,
	LVLPREST_ACT2_SEWER_S,
	LVLPREST_ACT2_SEWER_SW,
	LVLPREST_ACT2_SEWER_SE,
	LVLPREST_ACT2_SEWER_SEW,
	LVLPREST_ACT2_SEWER_N,
	LVLPREST_ACT2_SEWER_NW,
	LVLPREST_ACT2_SEWER_NE,
	LVLPREST_ACT2_SEWER_NEW,
	LVLPREST_ACT2_SEWER_NS,
	LVLPREST_ACT2_SEWER_NSW,
	LVLPREST_ACT2_SEWER_NSE,
	LVLPREST_ACT2_SEWER_NSEW,
	LVLPREST_ACT2_SEWER_THEME_W,
	LVLPREST_ACT2_SEWER_THEME_E,
	LVLPREST_ACT2_SEWER_THEME_EW,
	LVLPREST_ACT2_SEWER_THEME_S,
	LVLPREST_ACT2_SEWER_THEME_SW,
	LVLPREST_ACT2_SEWER_THEME_SE,
	LVLPREST_ACT2_SEWER_THEME_SEW,
	LVLPREST_ACT2_SEWER_THEME_N,
	LVLPREST_ACT2_SEWER_THEME_NW,
	LVLPREST_ACT2_SEWER_THEME_NE,
	LVLPREST_ACT2_SEWER_THEME_NEW,
	LVLPREST_ACT2_SEWER_THEME_NS,
	LVLPREST_ACT2_SEWER_THEME_NSW,
	LVLPREST_ACT2_SEWER_THEME_NSE,
	LVLPREST_ACT2_SEWER_THEME_NSEW,
	LVLPREST_ACT2_SEWER_PREV_W,
	LVLPREST_ACT2_SEWER_PREV_E,
	LVLPREST_ACT2_SEWER_PREV_S,
	LVLPREST_ACT2_SEWER_PREV_N,
	LVLPREST_ACT2_SEWER_PREV_NS,
	LVLPREST_ACT2_SEWER_NEXT_W,
	LVLPREST_ACT2_SEWER_NEXT_E,
	LVLPREST_ACT2_SEWER_NEXT_S,
	LVLPREST_ACT2_SEWER_NEXT_N,
	LVLPREST_ACT2_SEWER_RADAMENTS_LAIR_W,
	LVLPREST_ACT2_SEWER_RADAMENTS_LAIR_E,
	LVLPREST_ACT2_SEWER_RADAMENTS_LAIR_S,
	LVLPREST_ACT2_SEWER_RADAMENTS_LAIR_N,
	LVLPREST_ACT2_SEWER_WAYPOINT_W,
	LVLPREST_ACT2_SEWER_WAYPOINT_E,
	LVLPREST_ACT2_SEWER_WAYPOINT_S,
	LVLPREST_ACT2_SEWER_WAYPOINT_N,
	LVLPREST_ACT2_SEWER_CHEST_W,
	LVLPREST_ACT2_SEWER_CHEST_E,
	LVLPREST_ACT2_SEWER_CHEST_S,
	LVLPREST_ACT2_SEWER_CHEST_N,
	LVLPREST_ACT2_HAREM,
	LVLPREST_ACT2_CORRUPT_HAREM_NE,
	LVLPREST_ACT2_CORRUPT_HAREM_SE,
	LVLPREST_ACT2_CORRUPT_HAREM_SW,
	LVLPREST_ACT2_CORRUPT_HAREM_NW,
	LVLPREST_ACT2_BASEMENT_NE,
	LVLPREST_ACT2_BASEMENT_SE,
	LVLPREST_ACT2_BASEMENT_SW,
	LVLPREST_ACT2_BASEMENT_NW,
	LVLPREST_ACT2_DESERT_TRANSITION_W,
	LVLPREST_ACT2_DESERT_TRANSITION_N,
	LVLPREST_ACT2_DESERT_BORDER_1,
	LVLPREST_ACT2_DESERT_BORDER_2,
	LVLPREST_ACT2_DESERT_BORDER_3,
	LVLPREST_ACT2_DESERT_BORDER_4,
	LVLPREST_ACT2_DESERT_BORDER_5,
	LVLPREST_ACT2_DESERT_BORDER_6,
	LVLPREST_ACT2_DESERT_BORDER_7,
	LVLPREST_ACT2_DESERT_BORDER_8,
	LVLPREST_ACT2_DESERT_BORDER_9,
	LVLPREST_ACT2_DESERT_BORDER_10,
	LVLPREST_ACT2_DESERT_BORDER_11,
	LVLPREST_ACT2_DESERT_BORDER_12,
	LVLPREST_ACT2_DESERT_CLIFF_RIGHT_ENDS,
	LVLPREST_ACT2_DESERT_CLIFF_RIGHT_WALL,
	LVLPREST_ACT2_DESERT_CLIFF_RIGHT_PATH,
	LVLPREST_ACT2_DESERT_CLIFF_LEFT_ENDS,
	LVLPREST_ACT2_DESERT_CLIFF_LEFT_WALL,
	LVLPREST_ACT2_DESERT_CLIFF_LEFT_PATH,
	LVLPREST_ACT2_DESERT_CLIFF_TOP,
	LVLPREST_ACT2_DESERT_CLIFF_RIGHT_KING_TOMB,
	LVLPREST_ACT2_DESERT_CLIFF_RIGHT_KING_ENDS,
	LVLPREST_ACT2_DESERT_CLIFF_LEFT_KING_TOMB,
	LVLPREST_ACT2_DESERT_CLIFF_LEFT_KING_ENDS,
	LVLPREST_ACT2_DESERT_CLIFF_TOP_KING_TOMB,
	LVLPREST_ACT2_DESERT_TOMB_1,
	LVLPREST_ACT2_DESERT_TOMB_2,
	LVLPREST_ACT2_DESERT_LAIR_1,
	LVLPREST_ACT2_DESERT_LAIR_2,
	LVLPREST_ACT2_DESERT_VALLEY_RUIN_1,
	LVLPREST_ACT2_DESERT_VALLEY_RUIN_2,
	LVLPREST_ACT2_DESERT_VALLEY_WARP,
	LVLPREST_ACT2_DESERT_OASIS_1,
	LVLPREST_ACT2_DESERT_OASIS_2,
	LVLPREST_ACT2_DESERT_OASIS_3,
	LVLPREST_ACT2_DESERT_FILL_MESA_1,
	LVLPREST_ACT2_DESERT_FILL_HEAD_1,
	LVLPREST_ACT2_DESERT_FILL_HEAD_2,
	LVLPREST_ACT2_DESERT_FILL_BONE_1,
	LVLPREST_ACT2_DESERT_FILL_BONE_2,
	LVLPREST_ACT2_DESERT_FILL_WAGON_1,
	LVLPREST_ACT2_DESERT_FILL_BERMS_1,
	LVLPREST_ACT2_DESERT_FILL_BERMS_2,
	LVLPREST_ACT2_DESERT_FILL_BERMS_3,
	LVLPREST_ACT2_DESERT_FILL_BERMS_4,
	LVLPREST_ACT2_DESERT_RUINS_16X16,
	LVLPREST_ACT2_DESERT_RUINS_16X08,
	LVLPREST_ACT2_DESERT_RUINS_08X16,
	LVLPREST_ACT2_DESERT_RUINS_08X08,
	LVLPREST_ACT2_DESERT_RUINS_SEWER,
	LVLPREST_ACT2_DESERT_RUINS_ELDER,
	LVLPREST_ACT2_TOMB_W,
	LVLPREST_ACT2_TOMB_E,
	LVLPREST_ACT2_TOMB_EW,
	LVLPREST_ACT2_TOMB_S,
	LVLPREST_ACT2_TOMB_SW,
	LVLPREST_ACT2_TOMB_SE,
	LVLPREST_ACT2_TOMB_SEW,
	LVLPREST_ACT2_TOMB_N,
	LVLPREST_ACT2_TOMB_NW,
	LVLPREST_ACT2_TOMB_NE,
	LVLPREST_ACT2_TOMB_NEW,
	LVLPREST_ACT2_TOMB_NS,
	LVLPREST_ACT2_TOMB_NSW,
	LVLPREST_ACT2_TOMB_NSE,
	LVLPREST_ACT2_TOMB_NSEW,
	LVLPREST_ACT2_TOMB_THEME_W,
	LVLPREST_ACT2_TOMB_THEME_E,
	LVLPREST_ACT2_TOMB_THEME_EW,
	LVLPREST_ACT2_TOMB_THEME_S,
	LVLPREST_ACT2_TOMB_THEME_SW,
	LVLPREST_ACT2_TOMB_THEME_SE,
	LVLPREST_ACT2_TOMB_THEME_SEW,
	LVLPREST_ACT2_TOMB_THEME_N,
	LVLPREST_ACT2_TOMB_THEME_NW,
	LVLPREST_ACT2_TOMB_THEME_NE,
	LVLPREST_ACT2_TOMB_THEME_NEW,
	LVLPREST_ACT2_TOMB_THEME_NS,
	LVLPREST_ACT2_TOMB_THEME_NSW,
	LVLPREST_ACT2_TOMB_THEME_NSE,
	LVLPREST_ACT2_TOMB_THEME_NSEW,
	LVLPREST_ACT2_TOMB_PREV_SEW,
	LVLPREST_ACT2_TOMB_PREV_NEW,
	LVLPREST_ACT2_TOMB_PREV_NSW,
	LVLPREST_ACT2_TOMB_PREV_NSE,
	LVLPREST_ACT2_TOMB_NEXT_W,
	LVLPREST_ACT2_TOMB_NEXT_E,
	LVLPREST_ACT2_TOMB_NEXT_S,
	LVLPREST_ACT2_TOMB_NEXT_N,
	LVLPREST_ACT2_TOMB_TREASURE_W,
	LVLPREST_ACT2_TOMB_TREASURE_E,
	LVLPREST_ACT2_TOMB_TREASURE_S,
	LVLPREST_ACT2_TOMB_TREASURE_N,
	LVLPREST_ACT2_TOMB_CUBE_W,
	LVLPREST_ACT2_TOMB_CUBE_E,
	LVLPREST_ACT2_TOMB_CUBE_S,
	LVLPREST_ACT2_TOMB_CUBE_N,
	LVLPREST_ACT2_TOMB_TALRASHA_W,
	LVLPREST_ACT2_TOMB_TALRASHA_E,
	LVLPREST_ACT2_TOMB_TALRASHA_S,
	LVLPREST_ACT2_TOMB_TALRASHA_N,
	LVLPREST_ACT2_TOMB_LEATHERARM_W,
	LVLPREST_ACT2_TOMB_LEATHERARM_E,
	LVLPREST_ACT2_TOMB_LEATHERARM_S,
	LVLPREST_ACT2_TOMB_LEATHERARM_N,
	LVLPREST_ACT2_TOMB_KAA_W,
	LVLPREST_ACT2_TOMB_KAA_E,
	LVLPREST_ACT2_TOMB_KAA_S,
	LVLPREST_ACT2_TOMB_KAA_N,
	LVLPREST_ACT2_TOMB_CHEST_W,
	LVLPREST_ACT2_TOMB_CHEST_E,
	LVLPREST_ACT2_TOMB_CHEST_S,
	LVLPREST_ACT2_TOMB_CHEST_N,
	LVLPREST_ACT2_TOMB_WAYPOINT_W,
	LVLPREST_ACT2_TOMB_WAYPOINT_E,
	LVLPREST_ACT2_TOMB_WAYPOINT_S,
	LVLPREST_ACT2_TOMB_WAYPOINT_N,
	LVLPREST_ACT2_TOMB_TAINTED_SUN_X,
	LVLPREST_ACT2_DURIELS_LAIR,
	LVLPREST_ACT2_LAIR_W,
	LVLPREST_ACT2_LAIR_E,
	LVLPREST_ACT2_LAIR_EW,
	LVLPREST_ACT2_LAIR_S,
	LVLPREST_ACT2_LAIR_SW,
	LVLPREST_ACT2_LAIR_SE,
	LVLPREST_ACT2_LAIR_SEW,
	LVLPREST_ACT2_LAIR_N,
	LVLPREST_ACT2_LAIR_NW,
	LVLPREST_ACT2_LAIR_NE,
	LVLPREST_ACT2_LAIR_NEW,
	LVLPREST_ACT2_LAIR_NS,
	LVLPREST_ACT2_LAIR_NSW,
	LVLPREST_ACT2_LAIR_NSE,
	LVLPREST_ACT2_LAIR_NSEW,
	LVLPREST_ACT2_LAIR_PREV_W,
	LVLPREST_ACT2_LAIR_PREV_E,
	LVLPREST_ACT2_LAIR_PREV_S,
	LVLPREST_ACT2_LAIR_PREV_N,
	LVLPREST_ACT2_LAIR_NEXT_W,
	LVLPREST_ACT2_LAIR_NEXT_E,
	LVLPREST_ACT2_LAIR_NEXT_S,
	LVLPREST_ACT2_LAIR_NEXT_N,
	LVLPREST_ACT2_LAIR_TREASURE_W,
	LVLPREST_ACT2_LAIR_TREASURE_E,
	LVLPREST_ACT2_LAIR_TREASURE_S,
	LVLPREST_ACT2_LAIR_TREASURE_N,
	LVLPREST_ACT2_LAIR_TIGHT_SPOT_S,
	LVLPREST_ACT2_ARCANE_W,
	LVLPREST_ACT2_ARCANE_E,
	LVLPREST_ACT2_ARCANE_EW,
	LVLPREST_ACT2_ARCANE_S,
	LVLPREST_ACT2_ARCANE_SW,
	LVLPREST_ACT2_ARCANE_SE,
	LVLPREST_ACT2_ARCANE_SEW,
	LVLPREST_ACT2_ARCANE_N,
	LVLPREST_ACT2_ARCANE_NW,
	LVLPREST_ACT2_ARCANE_NE,
	LVLPREST_ACT2_ARCANE_NEW,
	LVLPREST_ACT2_ARCANE_NS,
	LVLPREST_ACT2_ARCANE_NSW,
	LVLPREST_ACT2_ARCANE_NSE,
	LVLPREST_ACT2_ARCANE_NSEW,
	LVLPREST_ACT2_ARCANE_SUMMONER_W,
	LVLPREST_ACT2_ARCANE_SUMMONER_E,
	LVLPREST_ACT2_ARCANE_SUMMONER_S,
	LVLPREST_ACT2_ARCANE_SUMMONER_N,
	LVLPREST_ACT3_TOWN,
	LVLPREST_ACT3_JUNGLE_W,
	LVLPREST_ACT3_JUNGLE_E,
	LVLPREST_ACT3_JUNGLE_EW,
	LVLPREST_ACT3_JUNGLE_S,
	LVLPREST_ACT3_JUNGLE_SW,
	LVLPREST_ACT3_JUNGLE_SE,
	LVLPREST_ACT3_JUNGLE_SEW,
	LVLPREST_ACT3_JUNGLE_N,
	LVLPREST_ACT3_JUNGLE_NW,
	LVLPREST_ACT3_JUNGLE_NE,
	LVLPREST_ACT3_JUNGLE_NEW,
	LVLPREST_ACT3_JUNGLE_NS,
	LVLPREST_ACT3_JUNGLE_NSW,
	LVLPREST_ACT3_JUNGLE_NSE,
	LVLPREST_ACT3_JUNGLE_NSEW,
	LVLPREST_ACT3_JUNGLE_W_E,
	LVLPREST_ACT3_JUNGLE_W_S,
	LVLPREST_ACT3_JUNGLE_W_N,
	LVLPREST_ACT3_JUNGLE_E_W,
	LVLPREST_ACT3_JUNGLE_E_S,
	LVLPREST_ACT3_JUNGLE_E_N,
	LVLPREST_ACT3_JUNGLE_EW_S,
	LVLPREST_ACT3_JUNGLE_EW_N,
	LVLPREST_ACT3_JUNGLE_S_W,
	LVLPREST_ACT3_JUNGLE_S_E,
	LVLPREST_ACT3_JUNGLE_S_N,
	LVLPREST_ACT3_JUNGLE_SW_E,
	LVLPREST_ACT3_JUNGLE_SW_N,
	LVLPREST_ACT3_JUNGLE_SE_W,
	LVLPREST_ACT3_JUNGLE_SE_N,
	LVLPREST_ACT3_JUNGLE_SEW_N,
	LVLPREST_ACT3_JUNGLE_N_W,
	LVLPREST_ACT3_JUNGLE_N_E,
	LVLPREST_ACT3_JUNGLE_N_S,
	LVLPREST_ACT3_JUNGLE_NW_E,
	LVLPREST_ACT3_JUNGLE_NW_S,
	LVLPREST_ACT3_JUNGLE_NE_W,
	LVLPREST_ACT3_JUNGLE_NE_S,
	LVLPREST_ACT3_JUNGLE_NEW_S,
	LVLPREST_ACT3_JUNGLE_NS_W,
	LVLPREST_ACT3_JUNGLE_NS_E,
	LVLPREST_ACT3_JUNGLE_NSW_E,
	LVLPREST_ACT3_JUNGLE_NSE_W,
	LVLPREST_ACT3_JUNGLE_HEAD,
	LVLPREST_ACT3_JUNGLE_TAIL,
	LVLPREST_ACT3_CLEARING_WEBBY_W,
	LVLPREST_ACT3_CLEARING_WEBBY_E,
	LVLPREST_ACT3_CLEARING_WEBBY_EW,
	LVLPREST_ACT3_CLEARING_WEBBY_S,
	LVLPREST_ACT3_CLEARING_WEBBY_SW,
	LVLPREST_ACT3_CLEARING_WEBBY_SE,
	LVLPREST_ACT3_CLEARING_WEBBY_N,
	LVLPREST_ACT3_CLEARING_WEBBY_NW,
	LVLPREST_ACT3_CLEARING_WEBBY_NE,
	LVLPREST_ACT3_CLEARING_WEBBY_NS,
	LVLPREST_ACT3_CLEARING_BOGGY_W,
	LVLPREST_ACT3_CLEARING_BOGGY_E,
	LVLPREST_ACT3_CLEARING_BOGGY_EW,
	LVLPREST_ACT3_CLEARING_BOGGY_S,
	LVLPREST_ACT3_CLEARING_BOGGY_SW,
	LVLPREST_ACT3_CLEARING_BOGGY_SE,
	LVLPREST_ACT3_CLEARING_BOGGY_N,
	LVLPREST_ACT3_CLEARING_BOGGY_NW,
	LVLPREST_ACT3_CLEARING_BOGGY_NE,
	LVLPREST_ACT3_CLEARING_BOGGY_NS,
	LVLPREST_ACT3_CLEARING_PYGMY_W,
	LVLPREST_ACT3_CLEARING_PYGMY_E,
	LVLPREST_ACT3_CLEARING_PYGMY_EW,
	LVLPREST_ACT3_CLEARING_PYGMY_S,
	LVLPREST_ACT3_CLEARING_PYGMY_SW,
	LVLPREST_ACT3_CLEARING_PYGMY_SE,
	LVLPREST_ACT3_CLEARING_PYGMY_N,
	LVLPREST_ACT3_CLEARING_PYGMY_NW,
	LVLPREST_ACT3_CLEARING_PYGMY_NE,
	LVLPREST_ACT3_CLEARING_PYGMY_NS,
	LVLPREST_ACT3_SLUMS_BORDER_N,
	LVLPREST_ACT3_SLUMS_BORDER_S,
	LVLPREST_ACT3_SLUMS_BORDER_E,
	LVLPREST_ACT3_SLUMS_BORDER_W,
	LVLPREST_ACT3_SLUMS_BORDER_NE,
	LVLPREST_ACT3_SLUMS_BORDER_NW,
	LVLPREST_ACT3_SLUMS_BORDER_SE,
	LVLPREST_ACT3_SLUMS_BORDER_SW,
	LVLPREST_ACT3_SLUMS_GATE_N,
	LVLPREST_ACT3_SLUMS_GATE_S,
	LVLPREST_ACT3_SLUMS_08X08,
	LVLPREST_ACT3_SLUMS_08X16,
	LVLPREST_ACT3_SLUMS_16X08,
	LVLPREST_ACT3_SLUMS_16X16,
	LVLPREST_ACT3_BURBS_BORDER_N,
	LVLPREST_ACT3_BURBS_BORDER_S,
	LVLPREST_ACT3_BURBS_BORDER_E,
	LVLPREST_ACT3_BURBS_BORDER_W,
	LVLPREST_ACT3_BURBS_BORDER_NE,
	LVLPREST_ACT3_BURBS_BORDER_NW,
	LVLPREST_ACT3_BURBS_BORDER_SE,
	LVLPREST_ACT3_BURBS_BORDER_SW,
	LVLPREST_ACT3_BURBS_GATE_N,
	LVLPREST_ACT3_BURBS_GATE_S,
	LVLPREST_ACT3_BURBS_SEWER,
	LVLPREST_ACT3_BURBS_TEMPLE,
	LVLPREST_ACT3_BURBS_WAYPOINT,
	LVLPREST_ACT3_BURBS_08X08,
	LVLPREST_ACT3_BURBS_08X16,
	LVLPREST_ACT3_BURBS_16X08,
	LVLPREST_ACT3_BURBS_16X16,
	LVLPREST_ACT3_METRO_BORDER_N,
	LVLPREST_ACT3_METRO_BORDER_S,
	LVLPREST_ACT3_METRO_BORDER_E,
	LVLPREST_ACT3_METRO_BORDER_W,
	LVLPREST_ACT3_METRO_BORDER_NE,
	LVLPREST_ACT3_METRO_BORDER_NW,
	LVLPREST_ACT3_METRO_BORDER_SE,
	LVLPREST_ACT3_METRO_BORDER_SW,
	LVLPREST_ACT3_METRO_GATE_N,
	LVLPREST_ACT3_METRO_GATE_S,
	LVLPREST_ACT3_METRO_SEWER,
	LVLPREST_ACT3_METROTEMPLE,
	LVLPREST_ACT3_METRO_08X08,
	LVLPREST_ACT3_METRO_08X16,
	LVLPREST_ACT3_METRO_16X08,
	LVLPREST_ACT3_METRO_16X16,
	LVLPREST_ACT3_BRIDGE,
	LVLPREST_ACT3_TRAVINCAL_NW,
	LVLPREST_ACT3_TRAVINCAL_N,
	LVLPREST_ACT3_TRAVINCAL_NE,
	LVLPREST_ACT3_TRAVINCAL_SW,
	LVLPREST_ACT3_TRAVINCAL_S,
	LVLPREST_ACT3_TRAVINCAL_SE,
	LVLPREST_ACT3_SPIDER_SW,
	LVLPREST_ACT3_SPIDER_SE,
	LVLPREST_ACT3_SPIDER_NW,
	LVLPREST_ACT3_SPIDER_NE,
	LVLPREST_ACT3_SPIDER_CHEST_NW,
	LVLPREST_ACT3_SPIDER_CHEST_NE,
	LVLPREST_ACT3_DUNGEON_W,
	LVLPREST_ACT3_DUNGEON_E,
	LVLPREST_ACT3_DUNGEON_EW,
	LVLPREST_ACT3_DUNGEON_S,
	LVLPREST_ACT3_DUNGEON_SW,
	LVLPREST_ACT3_DUNGEON_SE,
	LVLPREST_ACT3_DUNGEON_SEW,
	LVLPREST_ACT3_DUNGEON_N,
	LVLPREST_ACT3_DUNGEON_NW,
	LVLPREST_ACT3_DUNGEON_NE,
	LVLPREST_ACT3_DUNGEON_NEW,
	LVLPREST_ACT3_DUNGEON_NS,
	LVLPREST_ACT3_DUNGEON_NSW,
	LVLPREST_ACT3_DUNGEON_NSE,
	LVLPREST_ACT3_DUNGEON_NSEW,
	LVLPREST_ACT3_DUNGEON_THEME_W,
	LVLPREST_ACT3_DUNGEON_THEME_E,
	LVLPREST_ACT3_DUNGEON_THEME_EW,
	LVLPREST_ACT3_DUNGEON_THEME_S,
	LVLPREST_ACT3_DUNGEON_THEME_SW,
	LVLPREST_ACT3_DUNGEON_THEME_SE,
	LVLPREST_ACT3_DUNGEON_THEME_SEW,
	LVLPREST_ACT3_DUNGEON_THEME_N,
	LVLPREST_ACT3_DUNGEON_THEME_NW,
	LVLPREST_ACT3_DUNGEON_THEME_NE,
	LVLPREST_ACT3_DUNGEON_THEME_NEW,
	LVLPREST_ACT3_DUNGEON_THEME_NS,
	LVLPREST_ACT3_DUNGEON_THEME_NSW,
	LVLPREST_ACT3_DUNGEON_THEME_NSE,
	LVLPREST_ACT3_DUNGEON_THEME_NSEW,
	LVLPREST_ACT3_DUNGEON_PREV_W,
	LVLPREST_ACT3_DUNGEON_PREV_E,
	LVLPREST_ACT3_DUNGEON_PREV_S,
	LVLPREST_ACT3_DUNGEON_PREV_N,
	LVLPREST_ACT3_DUNGEON_NEXT_W,
	LVLPREST_ACT3_DUNGEON_NEXT_E,
	LVLPREST_ACT3_DUNGEON_NEXT_S,
	LVLPREST_ACT3_DUNGEON_NEXT_N,
	LVLPREST_ACT3_DUNGEON_TREASURE_1,
	LVLPREST_ACT3_DUNGEON_TREASURE_2,
	LVLPREST_ACT3_SEWER_W,
	LVLPREST_ACT3_SEWER_E,
	LVLPREST_ACT3_SEWER_EW,
	LVLPREST_ACT3_SEWER_S,
	LVLPREST_ACT3_SEWER_SW,
	LVLPREST_ACT3_SEWER_SE,
	LVLPREST_ACT3_SEWER_SEW,
	LVLPREST_ACT3_SEWER_N,
	LVLPREST_ACT3_SEWER_NW,
	LVLPREST_ACT3_SEWER_NE,
	LVLPREST_ACT3_SEWER_NEW,
	LVLPREST_ACT3_SEWER_NS,
	LVLPREST_ACT3_SEWER_NSW,
	LVLPREST_ACT3_SEWER_NSE,
	LVLPREST_ACT3_SEWER_NSEW,
	LVLPREST_ACT3_SEWER_THEME_W,
	LVLPREST_ACT3_SEWER_THEME_E,
	LVLPREST_ACT3_SEWER_THEME_EW,
	LVLPREST_ACT3_SEWER_THEME_S,
	LVLPREST_ACT3_SEWER_THEME_SW,
	LVLPREST_ACT3_SEWER_THEME_SE,
	LVLPREST_ACT3_SEWER_THEME_SEW,
	LVLPREST_ACT3_SEWER_THEME_N,
	LVLPREST_ACT3_SEWER_THEME_NW,
	LVLPREST_ACT3_SEWER_THEME_NE,
	LVLPREST_ACT3_SEWER_THEME_NEW,
	LVLPREST_ACT3_SEWER_THEME_NS,
	LVLPREST_ACT3_SEWER_THEME_NSW,
	LVLPREST_ACT3_SEWER_THEME_NSE,
	LVLPREST_ACT3_SEWER_THEME_NSEW,
	LVLPREST_ACT3_SEWER_PREV_SW,
	LVLPREST_ACT3_SEWER_PREV_SE,
	LVLPREST_ACT3_SEWER_PREV_NW,
	LVLPREST_ACT3_SEWER_PREV_NE,
	LVLPREST_ACT3_SEWER_DRAIN_W,
	LVLPREST_ACT3_SEWER_DRAIN_E,
	LVLPREST_ACT3_SEWER_DRAIN_S,
	LVLPREST_ACT3_SEWER_DRAIN_N,
	LVLPREST_ACT3_SEWER_CHEST_W,
	LVLPREST_ACT3_SEWER_CHEST_E,
	LVLPREST_ACT3_SEWER_CHEST_S,
	LVLPREST_ACT3_SEWER_CHEST_N,
	LVLPREST_ACT3_SEWER_TREASURE_X,
	LVLPREST_ACT3_TEMPLE_1,
	LVLPREST_ACT3_TEMPLE_2,
	LVLPREST_ACT3_TEMPLE_3,
	LVLPREST_ACT3_TEMPLE_4,
	LVLPREST_ACT3_TEMPLE_5,
	LVLPREST_ACT3_TEMPLE_6,
	LVLPREST_ACT3_MEPHISTO_W,
	LVLPREST_ACT3_MEPHISTO_E,
	LVLPREST_ACT3_MEPHISTO_EW,
	LVLPREST_ACT3_MEPHISTO_S,
	LVLPREST_ACT3_MEPHISTO_SW,
	LVLPREST_ACT3_MEPHISTO_SE,
	LVLPREST_ACT3_MEPHISTO_SEW,
	LVLPREST_ACT3_MEPHISTO_N,
	LVLPREST_ACT3_MEPHISTO_NW,
	LVLPREST_ACT3_MEPHISTO_NE,
	LVLPREST_ACT3_MEPHISTO_NEW,
	LVLPREST_ACT3_MEPHISTO_NS,
	LVLPREST_ACT3_MEPHISTO_NSW,
	LVLPREST_ACT3_MEPHISTO_NSE,
	LVLPREST_ACT3_MEPHISTO_NSEW,
	LVLPREST_ACT3_MEPHISTO_THEME_W,
	LVLPREST_ACT3_MEPHISTO_THEME_E,
	LVLPREST_ACT3_MEPHISTO_THEME_EW,
	LVLPREST_ACT3_MEPHISTO_THEME_S,
	LVLPREST_ACT3_MEPHISTO_THEME_SW,
	LVLPREST_ACT3_MEPHISTO_THEME_SE,
	LVLPREST_ACT3_MEPHISTO_THEME_SEW,
	LVLPREST_ACT3_MEPHISTO_THEME_N,
	LVLPREST_ACT3_MEPHISTO_THEME_NW,
	LVLPREST_ACT3_MEPHISTO_THEME_NE,
	LVLPREST_ACT3_MEPHISTO_THEME_NEW,
	LVLPREST_ACT3_MEPHISTO_THEME_NS,
	LVLPREST_ACT3_MEPHISTO_THEME_NSW,
	LVLPREST_ACT3_MEPHISTO_THEME_NSE,
	LVLPREST_ACT3_MEPHISTO_THEME_NSEW,
	LVLPREST_ACT3_MEPHISTO_PREV_W,
	LVLPREST_ACT3_MEPHISTO_PREV_E,
	LVLPREST_ACT3_MEPHISTO_PREV_S,
	LVLPREST_ACT3_MEPHISTO_PREV_N,
	LVLPREST_ACT3_MEPHISTO_NEXT_W,
	LVLPREST_ACT3_MEPHISTO_NEXT_E,
	LVLPREST_ACT3_MEPHISTO_NEXT_S,
	LVLPREST_ACT3_MEPHISTO_NEXT_N,
	LVLPREST_ACT3_MEPHISTO_WAYPOINT_W,
	LVLPREST_ACT3_MEPHISTO_WAYPOINT_E,
	LVLPREST_ACT3_MEPHISTO_WAYPOINT_S,
	LVLPREST_ACT3_MEPHISTO_WAYPOINT_N,
	LVLPREST_ACT3_MEPHISTO_COMPLEX,
	LVLPREST_ACT4_FORTRESS,
	LVLPREST_ACT4_FORTRESS_TRANSITION,
	LVLPREST_ACT4_MESA_BORDER_1,
	LVLPREST_ACT4_MESA_BORDER_2,
	LVLPREST_ACT4_MESA_BORDER_3,
	LVLPREST_ACT4_MESA_BORDER_4,
	LVLPREST_ACT4_MESA_BORDER_5,
	LVLPREST_ACT4_MESA_BORDER_6,
	LVLPREST_ACT4_MESA_BORDER_7,
	LVLPREST_ACT4_MESA_BORDER_8,
	LVLPREST_ACT4_MESA_BORDER_9,
	LVLPREST_ACT4_MESA_BORDER_10,
	LVLPREST_ACT4_MESA_BORDER_11,
	LVLPREST_ACT4_MESA_BORDER_12,
	LVLPREST_ACT4_MESA_WARP,
	LVLPREST_ACT4_MESA_1_24X24,
	LVLPREST_ACT4_MESA_1_16X16,
	LVLPREST_ACT4_MESA_1_16X08,
	LVLPREST_ACT4_MESA_1_08X16,
	LVLPREST_ACT4_MESA_1_08X08,
	LVLPREST_ACT4_MESA_2_24X24,
	LVLPREST_ACT4_MESA_2_16X16,
	LVLPREST_ACT4_MESA_2_16X08,
	LVLPREST_ACT4_MESA_2_08X16,
	LVLPREST_ACT4_MESA_2_08X08,
	LVLPREST_ACT4_MESA_2_IZUAL,
	LVLPREST_ACT4_MESA_3_24X24,
	LVLPREST_ACT4_MESA_3_16X16,
	LVLPREST_ACT4_MESA_3_16X08,
	LVLPREST_ACT4_MESA_3_08X16,
	LVLPREST_ACT4_MESA_3_08X08,
	LVLPREST_ACT4_PITS_1_16X16,
	LVLPREST_ACT4_PITS_1_16X08,
	LVLPREST_ACT4_PITS_1_08X16,
	LVLPREST_ACT4_PITS_1_08X08,
	LVLPREST_ACT4_PITS_2_16X16,
	LVLPREST_ACT4_PITS_2_16X08,
	LVLPREST_ACT4_PITS_2_08X16,
	LVLPREST_ACT4_PITS_2_08X08,
	LVLPREST_ACT4_LAVA_X,
	LVLPREST_ACT4_LAVA_W,
	LVLPREST_ACT4_LAVA_E,
	LVLPREST_ACT4_LAVA_EW,
	LVLPREST_ACT4_LAVA_S,
	LVLPREST_ACT4_LAVA_SW,
	LVLPREST_ACT4_LAVA_SE,
	LVLPREST_ACT4_LAVA_SEW,
	LVLPREST_ACT4_LAVA_N,
	LVLPREST_ACT4_LAVA_NW,
	LVLPREST_ACT4_LAVA_NE,
	LVLPREST_ACT4_LAVA_NEW,
	LVLPREST_ACT4_LAVA_NS,
	LVLPREST_ACT4_LAVA_NSW,
	LVLPREST_ACT4_LAVA_NSE,
	LVLPREST_ACT4_LAVA_NSEW,
	LVLPREST_ACT4_LAVA_WARP_N,
	LVLPREST_ACT4_LAVA_FORGE_W,
	LVLPREST_ACT4_LAVA_FORGE_E,
	LVLPREST_ACT4_BRIDGE_1,
	LVLPREST_ACT4_BRIDGE_2,
	LVLPREST_ACT4_DIABLO_ENTRY,
	LVLPREST_ACT4_DIABLO_ARM_W,
	LVLPREST_ACT4_DIABLO_ARM_E,
	LVLPREST_ACT4_DIABLO_ARM_S,
	LVLPREST_ACT4_DIABLO_ARM_N,
	LVLPREST_ACT4_DIABLO_HEART,
	LVLPREST_ACT5_TOWN,
	LVLPREST_ACT5_TEMPLE_FINAL_ROOM,
	LVLPREST_ACT5_SIEGE_TO_TOWN,
	LVLPREST_ACT5_SIEGE_STRIP_1,
	LVLPREST_ACT5_SIEGE_STRIP_2,
	LVLPREST_ACT5_SIEGE_STRIP_3,
	LVLPREST_ACT5_SIEGE_STRIP_4,
	LVLPREST_ACT5_SIEGE_STRIP_5,
	LVLPREST_ACT5_SIEGE_STRIP_6,
	LVLPREST_ACT5_SIEGE_STRIP_7,
	LVLPREST_ACT5_SIEGE_STRIP_8,
	LVLPREST_ACT5_SIEGE_STRIP_9,
	LVLPREST_ACT5_SIEGE_STRIP_10,
	LVLPREST_ACT5_SIEGE_STRIP_11,
	LVLPREST_ACT5_SIEGE_STRIP_12,
	LVLPREST_ACT5_SIEGE_STRIP_13,
	LVLPREST_ACT5_SIEGE_TO_BARRICADE,
	LVLPREST_ACT5_BARRICADE_TO_SIEGE,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_1,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_2,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_3,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_4,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_5,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_6,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_7,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_8,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_9,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_10,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_11,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_12,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_1,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_2,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_3,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_4,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_5,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_6,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_7,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_8,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_9,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_10,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_11,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_12,
	LVLPREST_ACT5_BARRICADE_RAVINE_CLIFF_BORDER_5,
	LVLPREST_ACT5_BARRICADE_CLIFF_RAVINE_BORDER_7,
	LVLPREST_ACT5_BARRICADE_ENTRANCE_16X32,
	LVLPREST_ACT5_BARRICADE_ENTRANCE_32X16,
	LVLPREST_ACT5_BARRICADE_EXIT_32X16,
	LVLPREST_ACT5_BARRICADE_EXIT_16X32,
	LVLPREST_ACT5_BARRICADE_FROM_CAVE_32X16,
	LVLPREST_ACT5_BARRICADE_FROM_CAVE_16X32,
	LVLPREST_ACT5_BARRICADE_TO_CAVE_32X16,
	LVLPREST_ACT5_BARRICADE_TO_CAVE_16X32,
	LVLPREST_ACT5_BARRICADE_1,
	LVLPREST_ACT5_BARRICADE_2,
	LVLPREST_ACT5_BARRICADE_3,
	LVLPREST_ACT5_BARRICADE_4,
	LVLPREST_ACT5_BARRICADE_5,
	LVLPREST_ACT5_BARRICADE_6,
	LVLPREST_ACT5_BARRICADE_7,
	LVLPREST_ACT5_BARRICADE_8,
	LVLPREST_ACT5_BARRICADE_9,
	LVLPREST_ACT5_BARRICADE_10,
	LVLPREST_ACT5_BARRICADE_11,
	LVLPREST_ACT5_BARRICADE_12,
	LVLPREST_ACT5_BARRICADE_13,
	LVLPREST_ACT5_BARRICADE_14,
	LVLPREST_ACT5_BARRICADE_15,
	LVLPREST_ACT5_BARRICADE_16,
	LVLPREST_ACT5_BARRICADE_PRISON_1,
	LVLPREST_ACT5_BARRICADE_PRISON_2,
	LVLPREST_ACT5_BARRICADE_PRISON_3,
	LVLPREST_ACT5_BARRICADE_PRISON_4,
	LVLPREST_ACT5_BARRICADE_PRISON_5,
	LVLPREST_ACT5_BARRICADE_PRISON_6,
	LVLPREST_ACT5_BARRICADE_PRISON_7,
	LVLPREST_ACT5_BARRICADE_PRISON_8,
	LVLPREST_ACT5_BARRICADE_BUILDING,
	LVLPREST_ACT5_BARRICADE_FILLER,
	LVLPREST_ACT5_BARRICADE_FILLER_TREASURE,
	LVLPREST_ACT5_BARRICADE_RUINS_N_1,
	LVLPREST_ACT5_BARRICADE_RUINS_N_2,
	LVLPREST_ACT5_BARRICADE_RUINS_N_TREASURE,
	LVLPREST_ACT5_BARRICADE_RUINS_W_1,
	LVLPREST_ACT5_BARRICADE_RUINS_W_2,
	LVLPREST_ACT5_BARRICADE_RUINS_W_TREASURE,
	LVLPREST_ACT5_BARRICADE_SNOW_LAKE__1,
	LVLPREST_ACT5_BARRICADE_SNOW_LAKE__2,
	LVLPREST_ACT5_BARRICADE_SNOW_OTHER,
	LVLPREST_ACT5_BARRICADE_SNOW_TREASURE,
	LVLPREST_ACT5_BARRICADE_SNOW_UNIQUE,
	LVLPREST_ACT5_BARRICADE_WAYPOINT_DIRT,
	LVLPREST_ACT5_BARRICADE_WAYPOINT_SNOW,
	LVLPREST_ACT5_BARRICADE_HELL_PORTAL_N,
	LVLPREST_ACT5_BARRICADE_HELL_PORTAL_W,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_1_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_2_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_3_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_4_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_5_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_6_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_7_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_8_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_9_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_10_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_11_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_BORDER_12_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_1_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_2_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_3_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_4_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_5_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_6_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_7_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_8_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_9_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_10_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_11_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_BORDER_12_SNOW,
	LVLPREST_ACT5_BARRICADE_RAVINE_CLIFF_BORDER_5_SNOW,
	LVLPREST_ACT5_BARRICADE_CLIFF_RAVINE_BORDER_7_SNOW,
	LVLPREST_ACT5_BARRICADE_FROM_CAVE_32X16_SNOW,
	LVLPREST_ACT5_BARRICADE_FROM_CAVE_16X32_SNOW,
	LVLPREST_ACT5_BARRICADE_TO_CAVE_32X16_SNOW,
	LVLPREST_ACT5_BARRICADE_TO_CAVE_16X32_SNOW,
	LVLPREST_ACT5_BARRICADE_1_SNOW,
	LVLPREST_ACT5_BARRICADE_2_SNOW,
	LVLPREST_ACT5_BARRICADE_3_SNOW,
	LVLPREST_ACT5_BARRICADE_4_SNOW,
	LVLPREST_ACT5_BARRICADE_5_SNOW,
	LVLPREST_ACT5_BARRICADE_6_SNOW,
	LVLPREST_ACT5_BARRICADE_7_SNOW,
	LVLPREST_ACT5_BARRICADE_8_SNOW,
	LVLPREST_ACT5_BARRICADE_9_SNOW,
	LVLPREST_ACT5_BARRICADE_10_SNOW,
	LVLPREST_ACT5_BARRICADE_11_SNOW,
	LVLPREST_ACT5_BARRICADE_12_SNOW,
	LVLPREST_ACT5_BARRICADE_13_SNOW,
	LVLPREST_ACT5_BARRICADE_14_SNOW,
	LVLPREST_ACT5_BARRICADE_15_SNOW,
	LVLPREST_ACT5_BARRICADE_16_SNOW,
	LVLPREST_ACT5_ICE_W,
	LVLPREST_ACT5_ICE_E,
	LVLPREST_ACT5_ICE_EW,
	LVLPREST_ACT5_ICE_S,
	LVLPREST_ACT5_ICE_SW,
	LVLPREST_ACT5_ICE_SE,
	LVLPREST_ACT5_ICE_SEW,
	LVLPREST_ACT5_ICE_N,
	LVLPREST_ACT5_ICE_NW,
	LVLPREST_ACT5_ICE_NE,
	LVLPREST_ACT5_ICE_NEW,
	LVLPREST_ACT5_ICE_NS,
	LVLPREST_ACT5_ICE_NSW,
	LVLPREST_ACT5_ICE_NSE,
	LVLPREST_ACT5_ICE_NSEW,
	LVLPREST_ACT5_ICE_PREV_W,
	LVLPREST_ACT5_ICE_PREV_E,
	LVLPREST_ACT5_ICE_PREV_S,
	LVLPREST_ACT5_ICE_PREV_N,
	LVLPREST_ACT5_ICE_NEXT_W,
	LVLPREST_ACT5_ICE_NEXT_E,
	LVLPREST_ACT5_ICE_NEXT_S,
	LVLPREST_ACT5_ICE_NEXT_N,
	LVLPREST_ACT5_ICE_DOWN_W,
	LVLPREST_ACT5_ICE_DOWN_E,
	LVLPREST_ACT5_ICE_DOWN_S,
	LVLPREST_ACT5_ICE_DOWN_N,
	LVLPREST_ACT5_ICE_THEME_W,
	LVLPREST_ACT5_ICE_THEME_E,
	LVLPREST_ACT5_ICE_THEME_S,
	LVLPREST_ACT5_ICE_THEME_N,
	LVLPREST_ACT5_ICE_WAYPOINT_N,
	LVLPREST_ACT5_ICE_WAYPOINT_S,
	LVLPREST_ACT5_ICE_WAYPOINT_E,
	LVLPREST_ACT5_ICE_WAYPOINT_W,
	LVLPREST_ACT5_ICE_RIVER_A,
	LVLPREST_ACT5_ICE_RIVER_B,
	LVLPREST_ACT5_ICE_POOL_A,
	LVLPREST_ACT5_ICE_POOL_B,
	LVLPREST_ACT5_TEMPLE_NE,
	LVLPREST_ACT5_TEMPLE_NW,
	LVLPREST_ACT5_TEMPLE_SE_UP,
	LVLPREST_ACT5_TEMPLE_SW,
	LVLPREST_ACT5_TEMPLE_NE_DOWN,
	LVLPREST_ACT5_TEMPLE_NW_DOWN,
	LVLPREST_ACT5_TEMPLE_SW_DOWN,
	LVLPREST_ACT5_TEMPLE_NE_WAYPOINT,
	LVLPREST_ACT5_TEMPLE_NW_WAYPOINT,
	LVLPREST_ACT5_TEMPLE_SE_WAYPOINT,
	LVLPREST_ACT5_TEMPLE_SW_WAYPOINT,
	LVLPREST_ACT5_LAVA_N,
	LVLPREST_ACT5_LAVA_S,
	LVLPREST_ACT5_LAVA_E,
	LVLPREST_ACT5_LAVA_W,
	LVLPREST_ACT5_LAVA_EW,
	LVLPREST_ACT5_LAVA_NS,
	LVLPREST_ACT5_BAAL_W,
	LVLPREST_ACT5_BAAL_E,
	LVLPREST_ACT5_BAAL_EW,
	LVLPREST_ACT5_BAAL_S,
	LVLPREST_ACT5_BAAL_SW,
	LVLPREST_ACT5_BAAL_SE,
	LVLPREST_ACT5_BAAL_SEW,
	LVLPREST_ACT5_BAAL_N,
	LVLPREST_ACT5_BAAL_NW,
	LVLPREST_ACT5_BAAL_NE,
	LVLPREST_ACT5_BAAL_NEW,
	LVLPREST_ACT5_BAAL_NS,
	LVLPREST_ACT5_BAAL_NSW,
	LVLPREST_ACT5_BAAL_NSE,
	LVLPREST_ACT5_BAAL_NSEW,
	LVLPREST_ACT5_BAAL_PREV_NEW,
	LVLPREST_ACT5_BAAL_PREV_NSE,
	LVLPREST_ACT5_BAAL_PREV_NSW,
	LVLPREST_ACT5_BAAL_PREV_SEW,
	LVLPREST_ACT5_BAAL_NEXT_N,
	LVLPREST_ACT5_BAAL_NEXT_S,
	LVLPREST_ACT5_BAAL_NEXT_E,
	LVLPREST_ACT5_BAAL_NEXT_W,
	LVLPREST_ACT5_BAAL_WAYPOINT_N,
	LVLPREST_ACT5_BAAL_WAYPOINT_S,
	LVLPREST_ACT5_BAAL_WAYPOINT_E,
	LVLPREST_ACT5_BAAL_WAYPOINT_W,
	LVLPREST_ACT5_THRONEROOM,
	LVLPREST_ACT5_WORLDSTONE,
	LVLPREST_ACT5_TEMPLE_ENTRANCE,
	LVLPREST_ACT5_BAAL_ENTRANCE,
};

enum D2C_LvlSubIds
{
	LVLSUB_ACT1_BORDER_CLIFFS,
	LVLSUB_ACT1_BORDER_MIDDLE,
	LVLSUB_ACT1_BORDER_CORNER,
	LVLSUB_ACT1_BORDER_BORDER,
	LVLSUB_ACT1_WAYPOINT,
	LVLSUB_ACT1_WELL_SHRINE,
	LVLSUB_ACT1_WILD_OBJECTS,
	LVLSUB_ACT2_WAYPOINT,
	LVLSUB_ACT2_WELL_SHRINE,
	LVLSUB_ACT2_DESERT_OBJECTS,
	LVLSUB_ACT5_SNOW__TREES_ROCKS__SMALL_STUFF,
	LVLSUB_ACT5_DIRT_PATCHES__SNOWY_OBJECTS,
	LVLSUB_ACT5_BARRICADE,
};

enum D2C_LvlTypes
{
	LVLTYPE_NONE,
	LVLTYPE_ACT1_TOWN,
	LVLTYPE_ACT1_WILDERNESS,
	LVLTYPE_ACT1_CAVE,
	LVLTYPE_ACT1_CRYPT,
	LVLTYPE_ACT1_MONASTERY,
	LVLTYPE_ACT1_COURTYARD,
	LVLTYPE_ACT1_BARRACKS,
	LVLTYPE_ACT1_JAIL,
	LVLTYPE_ACT1_CATHEDRAL,
	LVLTYPE_ACT1_CATACOMBS,
	LVLTYPE_ACT1_TRISTRAM,
	LVLTYPE_ACT2_TOWN,
	LVLTYPE_ACT2_SEWER,
	LVLTYPE_ACT2_HAREM,
	LVLTYPE_ACT2_BASEMENT,
	LVLTYPE_ACT2_DESERT,
	LVLTYPE_ACT2_TOMB,
	LVLTYPE_ACT2_LAIR,
	LVLTYPE_ACT2_ARCANE,
	LVLTYPE_ACT3_TOWN,
	LVLTYPE_ACT3_JUNGLE,
	LVLTYPE_ACT3_KURAST,
	LVLTYPE_ACT3_SPIDER,
	LVLTYPE_ACT3_DUNGEON,
	LVLTYPE_ACT3_SEWER,
	LVLTYPE_ACT4_TOWN,
	LVLTYPE_ACT4_MESA,
	LVLTYPE_ACT4_LAVA,
	LVLTYPE_ACT5_TOWN,
	LVLTYPE_ACT5_SIEGE,
	LVLTYPE_ACT5_BARRICADE,
	LVLTYPE_ACT5_TEMPLE,
	LVLTYPE_ACT5_ICE_CAVES,
	LVLTYPE_ACT5_BAAL,
	LVLTYPE_ACT5_LAVA,
	NUM_LVLTPYES
};

enum D2C_WarpTileTypes
{
	WARPTILE_TOWNENTRY = 0x00, 		//Town Entry & Non-Town Waypoint (0)
	WARPTILE_TOWNENTRY2 = 0x05, 		//Town Entry 2 (5)
	WARPTILE_CORPSELOC = 0x0A, 		//Corpse Location (10)
	WARPTILE_MAPENTRY = 0x0B, 		//Map Entry & Portal Location (11)
	WARPTILE_TPLOC = 0x0C, 			//Town Portal Location (12)
	WARPTILE_TOWNWP = 0x0D			//Town Waypoint (13)
};

enum D2C_TownLevels
{
	D2TOWN_ROGUECAMP = 1,
	D2TOWN_LUTGHOL = 40,
	D2TOWN_KURAST = 75,
	D2TOWN_PANDFORT = 103,
	D2TOWN_HARRO = 109,
	D2TOWN_NULL = 0
};

enum D2C_Difficulties
{
	DIFFMODE_NORMAL,
	DIFFMODE_NIGHTMARE,
	DIFFMODE_HELL,
	NUM_DIFFICULTIES
};

enum D2C_Acts
{
	ACT_I,
	ACT_II,
	ACT_III,
	ACT_IV,
	ACT_V,
	NUM_ACTS
};

enum D2C_DrlgTypes
{
	DRLGTYPE_MAZE = 0x01,
	DRLGTYPE_PRESET = 0x02,
	DRLGTYPE_OUTDOOR = 0x03,
	NUM_DRLGTYPES
};


enum D2EnvironmentDayCycles : int {
	EnvCycleSunrise,
	EnvCycleMorning,
	EnvCycleNoon,
	EnvCycleAfteroon,
	EnvCycleSunset,
	EnvCycleNight,
	NUM_ENVIRONMENT_CYCLES
};

enum D2C_CollisionFlags
{
	//COLLIDE_NONE = 0x0000,
	//COLLIDE_BLOCK_PLAYER = 0x0001,
	//COLLIDE_BLOCK_MISSILE = 0x0002,
	//COLLIDE_WALLS = 0x0004,
	//COLLIDE_BLOCK_LEAP = 0x0008,
	//COLLIDE_ALTERNATE_FLOOR = 0x0010,
	//COLLIDE_BLANK = 0x0020,
	//COLLIDE_MISSILES = 0x0040,
	//COLLIDE_PLAYERS = 0x0080,
	//COLLIDE_MONSTERS = 0x0100,
	//COLLIDE_ITEMS = 0x0200,
	//COLLIDE_OBJECTS = 0x0400,
	//COLLIDE_DOORS = 0x0800,
	//COLLIDE_UNIT_RELATED = 0x1000,
	//COLLIDE_PETS = 0x2000,
	//COLLIDE_CORPSES = 0x4000,
	COLLIDE_NONE = 0x0000,
	COLLIDE_BLOCK_PLAYER = 0x0001,			// 'black space' in arcane sanctuary, cliff walls etc
	COLLIDE_BLOCK_MISSILE = 0x0002,			// tile based obstacles you can't shoot over
	COLLIDE_WALL = 0x0004,					// again used inconsistantly -.-
	COLLIDE_BLOCK_LEAP = 0x0008,
	COLLIDE_ALTERNATE_FLOOR = 0x0010,		// some floors have this set, others don't
	COLLIDE_BLANK = 0x0020,					// returned if the subtile is invalid
	COLLIDE_MISSILE = 0x0040,
	COLLIDE_PLAYER = 0x0080,
	COLLIDE_MONSTER = 0x0100,
	COLLIDE_ITEM = 0x0200,
	COLLIDE_OBJECT = 0x0400,
	COLLIDE_DOOR = 0x0800,
	COLLIDE_UNIT_RELATED = 0x1000,			// set for units sometimes, but not always
	COLLIDE_PET = 0x2000,
	COLLIDE_4000 = 0x4000,
	COLLIDE_CORPSE = 0x8000,				// also used by portals, but dead monsters are mask 0x8000
};

enum D2RoomExFlags
{
	ROOMEXFLAG_INACTIVE = 0x00000002,
	ROOMEXFLAG_HAS_WARP_0 = 0x00000010,
	ROOMEXFLAG_HAS_WARP_1 = 0x00000020,
	ROOMEXFLAG_HAS_WARP_2 = 0x00000040,
	ROOMEXFLAG_HAS_WARP_3 = 0x00000080,
	ROOMEXFLAG_HAS_WARP_4 = 0x00000100,
	ROOMEXFLAG_HAS_WARP_5 = 0x00000200,
	ROOMEXFLAG_HAS_WARP_6 = 0x00000400,
	ROOMEXFLAG_HAS_WARP_7 = 0x00000800,
	ROOMEXFLAG_SUBSHRINE_ROW1 = 0x00001000,
	ROOMEXFLAG_SUBSHRINE_ROW2 = 0x00002000,
	ROOMEXFLAG_SUBSHRINE_ROW3 = 0x00004000,
	ROOMEXFLAG_SUBSHRINE_ROW4 = 0x00008000,
	ROOMEXFLAG_HAS_WAYPOINT = 0x00010000,			//outdoors with subtheme and subwaypoint
	ROOMEXFLAG_HAS_WAYPOINT_SMALL = 0x00020000,		//waypoint small
	ROOMEXFLAG_AUTOMAP_REVEAL = 0x00040000,
	ROOMEXFLAG_NO_LOS_DRAW = 0x00080000,
	ROOMEXFLAG_HAS_ROOM = 0x00100000,				//an active pRoom structure is attached to this RoomEx
	ROOMEXFLAG_ROOM_FREED_SRV = 0x00200000,			//set after freeing the pRoom
	ROOMEXFLAG_HASPORTAL = 0x00400000,				//prevents room deletion
	ROOMEXFLAG_POPULATION_ZERO = 0x00800000,		//set for towns, also set if a ds1 has populate=0 // nospawn region
	ROOMEXFLAG_TILELIB_LOADED = 0x01000000,
	ROOMEXFLAG_PRESET_UNITS_ADDED = 0x02000000,		//refers to DRLGMap or DRLGFile; adds the hardcoded preset units
	ROOMEXFLAG_PRESET_UNITS_SPAWNED = 0x04000000,	//set after RoomEx preset units have been spawned / prevents respawning them on room reactivation
	ROOMEXFLAG_ANIMATED_FLOOR = 0x08000000,			//animated floors (river of flame, hell act5)

	ROOMEXFLAG_HAS_WARP = (ROOMEXFLAG_HAS_WARP_0 | ROOMEXFLAG_HAS_WARP_1 | ROOMEXFLAG_HAS_WARP_2 | ROOMEXFLAG_HAS_WARP_3 | ROOMEXFLAG_HAS_WARP_4 | ROOMEXFLAG_HAS_WARP_5 | ROOMEXFLAG_HAS_WARP_6 | ROOMEXFLAG_HAS_WARP_7),
};

enum D2DrlgLevelFlags
{
	DRLGLEVELFLAG_AUTOMAP_REVEAL = 0x10,
};

enum D2PathTypes
{
	PATHTYPE_IDASTAR = 0,
	PATHTYPE_TOWARD = 2,
	PATHTYPE_MISSILE = 4,
	PATHTYPE_KNOCKBACK_SERVER = 8,
	PATHTYPE_KNOCKBACK_CLIENT = 11,
};
#endif // CONSTANTS_LEVELS

#ifndef CONSTANTS_MONSTERS //Pseudo-Macro to group all constants
enum D2InactiveMonsterFlags
{
	INACTIVEMONSTERFLAG_TYPE_OTHER = 0x00000001,
	INACTIVEMONSTERFLAG_TYPE_CHAMPION = 0x00000002,
	INACTIVEMONSTERFLAG_DEAD = 0x00000004,
	INACTIVEMONSTERFLAG_MINIONRELATED1 = 0x00000008,
	INACTIVEMONSTERFLAG_MINIONRELATED2 = 0x00000010,
	INACTIVEMONSTERFLAG_TYPE_MINION = 0x00000020,
	INACTIVEMONSTERFLAG_UNKSUMMONERFLAG = 0x00000040,
	INACTIVEMONSTERFLAG_ALIGNMENT1 = 0x00000080,
	INACTIVEMONSTERFLAG_ALIGNMENT2 = 0x00000100,
	INACTIVEMONSTERFLAG_ALIGNMENT0 = 0x00000200,
	INACTIVEMONSTERFLAG_NODEINDEXUNEQUAL11 = 0x00000400,
	INACTIVEMONSTERFLAG_TYPE_SUPERUNIQUE = 0x00000800,
};

enum D2C_MonsterIds
{
	MONSTER_SKELETON1 = 0,
	MONSTER_SKELETON2,
	MONSTER_SKELETON3,
	MONSTER_SKELETON4,
	MONSTER_SKELETON5,
	MONSTER_ZOMBIE1,
	MONSTER_ZOMBIE2,
	MONSTER_ZOMBIE3,
	MONSTER_ZOMBIE4,
	MONSTER_ZOMBIE5,
	MONSTER_BIGHEAD1,
	MONSTER_BIGHEAD2,
	MONSTER_BIGHEAD3,
	MONSTER_BIGHEAD4,
	MONSTER_BIGHEAD5,
	MONSTER_FOULCROW1,
	MONSTER_FOULCROW2,
	MONSTER_FOULCROW3,
	MONSTER_FOULCROW4,
	MONSTER_FALLEN1,
	MONSTER_FALLEN2,
	MONSTER_FALLEN3,
	MONSTER_FALLEN4,
	MONSTER_FALLEN5,
	MONSTER_BRUTE2,
	MONSTER_BRUTE3,
	MONSTER_BRUTE4,
	MONSTER_BRUTE5,
	MONSTER_BRUTE1,
	MONSTER_SANDRAIDER1,
	MONSTER_SANDRAIDER2,
	MONSTER_SANDRAIDER3,
	MONSTER_SANDRAIDER4,
	MONSTER_SANDRAIDER5,
	MONSTER_GORGON1,
	MONSTER_GORGON2,
	MONSTER_GORGON3,
	MONSTER_GORGON4,
	MONSTER_WRAITH1,
	MONSTER_WRAITH2,
	MONSTER_WRAITH3,
	MONSTER_WRAITH4,
	MONSTER_WRAITH5,
	MONSTER_CORRUPTROGUE1,
	MONSTER_CORRUPTROGUE2,
	MONSTER_CORRUPTROGUE3,
	MONSTER_CORRUPTROGUE4,
	MONSTER_CORRUPTROGUE5,
	MONSTER_BABOON1,
	MONSTER_BABOON2,
	MONSTER_BABOON3,
	MONSTER_BABOON4,
	MONSTER_BABOON5,
	MONSTER_GOATMAN1,
	MONSTER_GOATMAN2,
	MONSTER_GOATMAN3,
	MONSTER_GOATMAN4,
	MONSTER_GOATMAN5,
	MONSTER_FALLENSHAMAN1,
	MONSTER_FALLENSHAMAN2,
	MONSTER_FALLENSHAMAN3,
	MONSTER_FALLENSHAMAN4,
	MONSTER_FALLENSHAMAN5,
	MONSTER_QUILLRAT1,
	MONSTER_QUILLRAT2,
	MONSTER_QUILLRAT3,
	MONSTER_QUILLRAT4,
	MONSTER_QUILLRAT5,
	MONSTER_SANDMAGGOT1,
	MONSTER_SANDMAGGOT2,
	MONSTER_SANDMAGGOT3,
	MONSTER_SANDMAGGOT4,
	MONSTER_SANDMAGGOT5,
	MONSTER_CLAWVIPER1,
	MONSTER_CLAWVIPER2,
	MONSTER_CLAWVIPER3,
	MONSTER_CLAWVIPER4,
	MONSTER_CLAWVIPER5,
	MONSTER_SANDLEAPER1,
	MONSTER_SANDLEAPER2,
	MONSTER_SANDLEAPER3,
	MONSTER_SANDLEAPER4,
	MONSTER_SANDLEAPER5,
	MONSTER_PANTHERWOMAN1,
	MONSTER_PANTHERWOMAN2,
	MONSTER_PANTHERWOMAN3,
	MONSTER_PANTHERWOMAN4,
	MONSTER_SWARM1,
	MONSTER_SWARM2,
	MONSTER_SWARM3,
	MONSTER_SWARM4,
	MONSTER_SCARAB1,
	MONSTER_SCARAB2,
	MONSTER_SCARAB3,
	MONSTER_SCARAB4,
	MONSTER_SCARAB5,
	MONSTER_MUMMY1,
	MONSTER_MUMMY2,
	MONSTER_MUMMY3,
	MONSTER_MUMMY4,
	MONSTER_MUMMY5,
	MONSTER_UNRAVELER1,
	MONSTER_UNRAVELER2,
	MONSTER_UNRAVELER3,
	MONSTER_UNRAVELER4,
	MONSTER_UNRAVELER5,
	MONSTER_CHAOSHORDE1,
	MONSTER_CHAOSHORDE2,
	MONSTER_CHAOSHORDE3,
	MONSTER_CHAOSHORDE4,
	MONSTER_VULTURE1,
	MONSTER_VULTURE2,
	MONSTER_VULTURE3,
	MONSTER_VULTURE4,
	MONSTER_MOSQUITO1,
	MONSTER_MOSQUITO2,
	MONSTER_MOSQUITO3,
	MONSTER_MOSQUITO4,
	MONSTER_WILLOWISP1,
	MONSTER_WILLOWISP2,
	MONSTER_WILLOWISP3,
	MONSTER_WILLOWISP4,
	MONSTER_ARACH1,
	MONSTER_ARACH2,
	MONSTER_ARACH3,
	MONSTER_ARACH4,
	MONSTER_ARACH5,
	MONSTER_THORNHULK1,
	MONSTER_THORNHULK2,
	MONSTER_THORNHULK3,
	MONSTER_THORNHULK4,
	MONSTER_VAMPIRE1,
	MONSTER_VAMPIRE2,
	MONSTER_VAMPIRE3,
	MONSTER_VAMPIRE4,
	MONSTER_VAMPIRE5,
	MONSTER_BATDEMON1,
	MONSTER_BATDEMON2,
	MONSTER_BATDEMON3,
	MONSTER_BATDEMON4,
	MONSTER_BATDEMON5,
	MONSTER_FETISH1,
	MONSTER_FETISH2,
	MONSTER_FETISH3,
	MONSTER_FETISH4,
	MONSTER_FETISH5,
	MONSTER_CAIN1,
	MONSTER_GHEED,
	MONSTER_AKARA,
	MONSTER_CHICKEN,
	MONSTER_KASHYA,
	MONSTER_RAT,
	MONSTER_ROGUE1,
	MONSTER_HELLMETEOR,
	MONSTER_CHARSI,
	MONSTER_WARRIV1,
	MONSTER_ANDARIEL,
	MONSTER_BIRD1,
	MONSTER_BIRD2,
	MONSTER_BAT,
	MONSTER_CR_ARCHER1,
	MONSTER_CR_ARCHER2,
	MONSTER_CR_ARCHER3,
	MONSTER_CR_ARCHER4,
	MONSTER_CR_ARCHER5,
	MONSTER_CR_LANCER1,
	MONSTER_CR_LANCER2,
	MONSTER_CR_LANCER3,
	MONSTER_CR_LANCER4,
	MONSTER_CR_LANCER5,
	MONSTER_SK_ARCHER1,
	MONSTER_SK_ARCHER2,
	MONSTER_SK_ARCHER3,
	MONSTER_SK_ARCHER4,
	MONSTER_SK_ARCHER5,
	MONSTER_WARRIV2,
	MONSTER_ATMA,
	MONSTER_DROGNAN,
	MONSTER_FARA,
	MONSTER_COW,
	MONSTER_MAGGOTBABY1,
	MONSTER_MAGGOTBABY2,
	MONSTER_MAGGOTBABY3,
	MONSTER_MAGGOTBABY4,
	MONSTER_MAGGOTBABY5,
	MONSTER_CAMEL,
	MONSTER_BLUNDERBORE1,
	MONSTER_BLUNDERBORE2,
	MONSTER_BLUNDERBORE3,
	MONSTER_BLUNDERBORE4,
	MONSTER_MAGGOTEGG1,
	MONSTER_MAGGOTEGG2,
	MONSTER_MAGGOTEGG3,
	MONSTER_MAGGOTEGG4,
	MONSTER_MAGGOTEGG5,
	MONSTER_ACT2MALE,
	MONSTER_ACT2FEMALE,
	MONSTER_ACT2CHILD,
	MONSTER_GREIZ,
	MONSTER_ELZIX,
	MONSTER_GEGLASH,
	MONSTER_JERHYN,
	MONSTER_LYSANDER,
	MONSTER_ACT2GUARD1,
	MONSTER_ACT2VENDOR1,
	MONSTER_ACT2VENDOR2,
	MONSTER_CROWNEST1,
	MONSTER_CROWNEST2,
	MONSTER_CROWNEST3,
	MONSTER_CROWNEST4,
	MONSTER_MESHIF1,
	MONSTER_DURIEL,
	MONSTER_BONEFETISH1,
	MONSTER_BONEFETISH2,
	MONSTER_BONEFETISH3,
	MONSTER_BONEFETISH4,
	MONSTER_BONEFETISH5,
	MONSTER_DARKGUARD1,
	MONSTER_DARKGUARD2,
	MONSTER_DARKGUARD3,
	MONSTER_DARKGUARD4,
	MONSTER_DARKGUARD5,
	MONSTER_BLOODMAGE1,
	MONSTER_BLOODMAGE2,
	MONSTER_BLOODMAGE3,
	MONSTER_BLOODMAGE4,
	MONSTER_BLOODMAGE5,
	MONSTER_MAGGOT,
	MONSTER_SARCOPHAGUS,
	MONSTER_RADAMENT,
	MONSTER_FIREBEAST,
	MONSTER_ICEGLOBE,
	MONSTER_LIGHTNINGBEAST,
	MONSTER_POISONORB,
	MONSTER_FLYINGSCIMITAR,
	MONSTER_ZEALOT1,
	MONSTER_ZEALOT2,
	MONSTER_ZEALOT3,
	MONSTER_CANTOR1,
	MONSTER_CANTOR2,
	MONSTER_CANTOR3,
	MONSTER_CANTOR4,
	MONSTER_MEPHISTO,
	MONSTER_DIABLO,
	MONSTER_CAIN2,
	MONSTER_CAIN3,
	MONSTER_CAIN4,
	MONSTER_FROGDEMON1,
	MONSTER_FROGDEMON2,
	MONSTER_FROGDEMON3,
	MONSTER_SUMMONER,
	MONSTER_TYRAEL1,
	MONSTER_ASHEARA,
	MONSTER_HRATLI,
	MONSTER_ALKOR,
	MONSTER_ORMUS,
	MONSTER_IZUAL,
	MONSTER_HALBU,
	MONSTER_TENTACLE1,
	MONSTER_TENTACLE2,
	MONSTER_TENTACLE3,
	MONSTER_TENTACLEHEAD1,
	MONSTER_TENTACLEHEAD2,
	MONSTER_TENTACLEHEAD3,
	MONSTER_MESHIF2,
	MONSTER_CAIN5,
	MONSTER_NAVI,
	MONSTER_BLOODRAVEN,
	MONSTER_BUG,
	MONSTER_SCORPION,
	MONSTER_ROGUE2,
	MONSTER_ROGUEHIRE,
	MONSTER_ROGUE3,
	MONSTER_GARGOYLETRAP,
	MONSTER_SKMAGE_POIS1,
	MONSTER_SKMAGE_POIS2,
	MONSTER_SKMAGE_POIS3,
	MONSTER_SKMAGE_POIS4,
	MONSTER_FETISHSHAMAN1,
	MONSTER_FETISHSHAMAN2,
	MONSTER_FETISHSHAMAN3,
	MONSTER_FETISHSHAMAN4,
	MONSTER_FETISHSHAMAN5,
	MONSTER_LARVA,
	MONSTER_MAGGOTQUEEN1,
	MONSTER_MAGGOTQUEEN2,
	MONSTER_MAGGOTQUEEN3,
	MONSTER_MAGGOTQUEEN4,
	MONSTER_MAGGOTQUEEN5,
	MONSTER_CLAYGOLEM,
	MONSTER_BLOODGOLEM,
	MONSTER_IRONGOLEM,
	MONSTER_FIREGOLEM,
	MONSTER_FAMILIAR,
	MONSTER_ACT3MALE,
	MONSTER_BABOON6,
	MONSTER_ACT3FEMALE,
	MONSTER_NATALYA,
	MONSTER_VILEMOTHER1,
	MONSTER_VILEMOTHER2,
	MONSTER_VILEMOTHER3,
	MONSTER_VILECHILD1,
	MONSTER_VILECHILD2,
	MONSTER_VILECHILD3,
	MONSTER_FINGERMAGE1,
	MONSTER_FINGERMAGE2,
	MONSTER_FINGERMAGE3,
	MONSTER_REGURGITATOR1,
	MONSTER_REGURGITATOR2,
	MONSTER_REGURGITATOR3,
	MONSTER_DOOMKNIGHT1,
	MONSTER_DOOMKNIGHT2,
	MONSTER_DOOMKNIGHT3,
	MONSTER_QUILLBEAR1,
	MONSTER_QUILLBEAR2,
	MONSTER_QUILLBEAR3,
	MONSTER_QUILLBEAR4,
	MONSTER_QUILLBEAR5,
	MONSTER_SNAKE,
	MONSTER_PARROT,
	MONSTER_FISH,
	MONSTER_EVILHOLE1,
	MONSTER_EVILHOLE2,
	MONSTER_EVILHOLE3,
	MONSTER_EVILHOLE4,
	MONSTER_EVILHOLE5,
	MONSTER_TRAP_FIREBOLT,
	MONSTER_TRAP_HORZMISSILE,
	MONSTER_TRAP_VERTMISSILE,
	MONSTER_TRAP_POISONCLOUD,
	MONSTER_TRAP_LIGHTNING,
	MONSTER_ACT2GUARD2,
	MONSTER_INVISOSPAWNER,
	MONSTER_DIABLOCLONE,
	MONSTER_SUCKERNEST1,
	MONSTER_SUCKERNEST2,
	MONSTER_SUCKERNEST3,
	MONSTER_SUCKERNEST4,
	MONSTER_ACT2HIRE,
	MONSTER_MINISPIDER,
	MONSTER_BONEPRISON1,
	MONSTER_BONEPRISON2,
	MONSTER_BONEPRISON3,
	MONSTER_BONEPRISON4,
	MONSTER_BONEWALL,
	MONSTER_COUNCILMEMBER1,
	MONSTER_COUNCILMEMBER2,
	MONSTER_COUNCILMEMBER3,
	MONSTER_TURRET1,
	MONSTER_TURRET2,
	MONSTER_TURRET3,
	MONSTER_HYDRA1,
	MONSTER_HYDRA2,
	MONSTER_HYDRA3,
	MONSTER_TRAP_MELEE,
	MONSTER_SEVENTOMBS,
	MONSTER_DOPPLEZON,
	MONSTER_VALKYRIE,
	MONSTER_ACT2GUARD3,
	MONSTER_ACT3HIRE,
	MONSTER_MEGADEMON1,
	MONSTER_MEGADEMON2,
	MONSTER_MEGADEMON3,
	MONSTER_NECROSKELETON,
	MONSTER_NECROMAGE,
	MONSTER_GRISWOLD,
	MONSTER_COMPELLINGORB,
	MONSTER_TYRAEL2,
	MONSTER_DARKWANDERER,
	MONSTER_TRAP_NOVA,
	MONSTER_SPIRITMUMMY,
	MONSTER_LIGHTNINGSPIRE,
	MONSTER_FIRETOWER,
	MONSTER_SLINGER1,
	MONSTER_SLINGER2,
	MONSTER_SLINGER3,
	MONSTER_SLINGER4,
	MONSTER_ACT2GUARD4,
	MONSTER_ACT2GUARD5,
	MONSTER_SKMAGE_COLD1,
	MONSTER_SKMAGE_COLD2,
	MONSTER_SKMAGE_COLD3,
	MONSTER_SKMAGE_COLD4,
	MONSTER_SKMAGE_FIRE1,
	MONSTER_SKMAGE_FIRE2,
	MONSTER_SKMAGE_FIRE3,
	MONSTER_SKMAGE_FIRE4,
	MONSTER_SKMAGE_LTNG1,
	MONSTER_SKMAGE_LTNG2,
	MONSTER_SKMAGE_LTNG3,
	MONSTER_SKMAGE_LTNG4,
	MONSTER_HELLBOVINE,
	MONSTER_WINDOW1,
	MONSTER_WINDOW2,
	MONSTER_SLINGER5,
	MONSTER_SLINGER6,
	MONSTER_FETISHBLOW1,
	MONSTER_FETISHBLOW2,
	MONSTER_FETISHBLOW3,
	MONSTER_FETISHBLOW4,
	MONSTER_FETISHBLOW5,
	MONSTER_MEPHISTOSPIRIT,
	MONSTER_SMITH,
	MONSTER_TRAPPEDSOUL1,
	MONSTER_TRAPPEDSOUL2,
	MONSTER_JAMELLA,
	MONSTER_IZUALGHOST,
	MONSTER_FETISH11,
	MONSTER_MALACHAI,
	MONSTER_HEPHASTO,
	MONSTER_WAKEOFDESTRUCTION,
	MONSTER_CHARGEBOLTSENTRY,
	MONSTER_LIGHTNINGSENTRY,
	MONSTER_BLADECREEPER,
	MONSTER_INVISOPET,
	MONSTER_INFERNOSENTRY,
	MONSTER_DEATHSENTRY,
	MONSTER_SHADOWWARRIOR,
	MONSTER_SHADOWMASTER,
	MONSTER_DRUIDHAWK,
	MONSTER_SPIRITWOLF,
	MONSTER_FENRIS,
	MONSTER_SPIRITOFBARBS,
	MONSTER_HEARTOFWOLVERINE,
	MONSTER_OAKSAGE,
	MONSTER_PLAGUEPOPPY,
	MONSTER_CYCLEOFLIFE,
	MONSTER_VINECREATURE,
	MONSTER_DRUIDBEAR,
	MONSTER_EAGLE,
	MONSTER_WOLF,
	MONSTER_BEAR,
	MONSTER_BARRICADEDOOR1,
	MONSTER_BARRICADEDOOR2,
	MONSTER_PRISONDOOR,
	MONSTER_BARRICADETOWER,
	MONSTER_REANIMATEDHORDE1,
	MONSTER_REANIMATEDHORDE2,
	MONSTER_REANIMATEDHORDE3,
	MONSTER_REANIMATEDHORDE4,
	MONSTER_REANIMATEDHORDE5,
	MONSTER_SIEGEBEAST1,
	MONSTER_SIEGEBEAST2,
	MONSTER_SIEGEBEAST3,
	MONSTER_SIEGEBEAST4,
	MONSTER_SIEGEBEAST5,
	MONSTER_SNOWYETI1,
	MONSTER_SNOWYETI2,
	MONSTER_SNOWYETI3,
	MONSTER_SNOWYETI4,
	MONSTER_WOLFRIDER1,
	MONSTER_WOLFRIDER2,
	MONSTER_WOLFRIDER3,
	MONSTER_MINION1,
	MONSTER_MINION2,
	MONSTER_MINION3,
	MONSTER_MINION4,
	MONSTER_MINION5,
	MONSTER_MINION6,
	MONSTER_MINION7,
	MONSTER_MINION8,
	MONSTER_SUICIDEMINION1,
	MONSTER_SUICIDEMINION2,
	MONSTER_SUICIDEMINION3,
	MONSTER_SUICIDEMINION4,
	MONSTER_SUICIDEMINION5,
	MONSTER_SUICIDEMINION6,
	MONSTER_SUICIDEMINION7,
	MONSTER_SUICIDEMINION8,
	MONSTER_SUCCUBUS1,
	MONSTER_SUCCUBUS2,
	MONSTER_SUCCUBUS3,
	MONSTER_SUCCUBUS4,
	MONSTER_SUCCUBUS5,
	MONSTER_SUCCUBUSWITCH1,
	MONSTER_SUCCUBUSWITCH2,
	MONSTER_SUCCUBUSWITCH3,
	MONSTER_SUCCUBUSWITCH4,
	MONSTER_SUCCUBUSWITCH5,
	MONSTER_OVERSEER1,
	MONSTER_OVERSEER2,
	MONSTER_OVERSEER3,
	MONSTER_OVERSEER4,
	MONSTER_OVERSEER5,
	MONSTER_MINIONSPAWNER1,
	MONSTER_MINIONSPAWNER2,
	MONSTER_MINIONSPAWNER3,
	MONSTER_MINIONSPAWNER4,
	MONSTER_MINIONSPAWNER5,
	MONSTER_MINIONSPAWNER6,
	MONSTER_MINIONSPAWNER7,
	MONSTER_MINIONSPAWNER8,
	MONSTER_IMP1,
	MONSTER_IMP2,
	MONSTER_IMP3,
	MONSTER_IMP4,
	MONSTER_IMP5,
	MONSTER_CATAPULT1,
	MONSTER_CATAPULT2,
	MONSTER_CATAPULT3,
	MONSTER_CATAPULT4,
	MONSTER_FROZENHORROR1,
	MONSTER_FROZENHORROR2,
	MONSTER_FROZENHORROR3,
	MONSTER_FROZENHORROR4,
	MONSTER_FROZENHORROR5,
	MONSTER_BLOODLORD1,
	MONSTER_BLOODLORD2,
	MONSTER_BLOODLORD3,
	MONSTER_BLOODLORD4,
	MONSTER_BLOODLORD5,
	MONSTER_LARZUK,
	MONSTER_DREHYA,
	MONSTER_MALAH,
	MONSTER_NIHLATHAK,
	MONSTER_QUAL_KEHK,
	MONSTER_CATAPULTSPOTTER1,
	MONSTER_CATAPULTSPOTTER2,
	MONSTER_CATAPULTSPOTTER3,
	MONSTER_CATAPULTSPOTTER4,
	MONSTER_CAIN6,
	MONSTER_TYRAEL3,
	MONSTER_ACT5BARB1,
	MONSTER_ACT5BARB2,
	MONSTER_BARRICADEWALL1,
	MONSTER_BARRICADEWALL2,
	MONSTER_NIHLATHAKBOSS,
	MONSTER_DREHYAICED,
	MONSTER_EVILHUT,
	MONSTER_DEATHMAULER1,
	MONSTER_DEATHMAULER2,
	MONSTER_DEATHMAULER3,
	MONSTER_DEATHMAULER4,
	MONSTER_DEATHMAULER5,
	MONSTER_ACT5POW,
	MONSTER_ACT5BARB3,
	MONSTER_ACT5BARB4,
	MONSTER_ANCIENTSTATUE1,
	MONSTER_ANCIENTSTATUE2,
	MONSTER_ANCIENTSTATUE3,
	MONSTER_ANCIENTBARB1,
	MONSTER_ANCIENTBARB2,
	MONSTER_ANCIENTBARB3,
	MONSTER_BAALTHRONE,
	MONSTER_BAALCRAB,
	MONSTER_BAALTAUNT,
	MONSTER_PUTRIDDEFILER1,
	MONSTER_PUTRIDDEFILER2,
	MONSTER_PUTRIDDEFILER3,
	MONSTER_PUTRIDDEFILER4,
	MONSTER_PUTRIDDEFILER5,
	MONSTER_PAINWORM1,
	MONSTER_PAINWORM2,
	MONSTER_PAINWORM3,
	MONSTER_PAINWORM4,
	MONSTER_PAINWORM5,
	MONSTER_BUNNY,
	MONSTER_BAALHIGHPRIEST,
	MONSTER_VENOMLORD,
	MONSTER_BAALCRABSTAIRS,
	MONSTER_ACT5HIRE1,
	MONSTER_ACT5HIRE2,
	MONSTER_BAALTENTACLE1,
	MONSTER_BAALTENTACLE2,
	MONSTER_BAALTENTACLE3,
	MONSTER_BAALTENTACLE4,
	MONSTER_BAALTENTACLE5,
	MONSTER_INJUREDBARB1,
	MONSTER_INJUREDBARB2,
	MONSTER_INJUREDBARB3,
	MONSTER_BAALCLONE,
	MONSTER_BAALMINION1,
	MONSTER_BAALMINION2,
	MONSTER_BAALMINION3,
	MONSTER_WORLDSTONEEFFECT,
	MONSTER_SK_ARCHER6,
	MONSTER_SK_ARCHER7,
	MONSTER_SK_ARCHER8,
	MONSTER_SK_ARCHER9,
	MONSTER_SK_ARCHER10,
	MONSTER_BIGHEAD6,
	MONSTER_BIGHEAD7,
	MONSTER_BIGHEAD8,
	MONSTER_BIGHEAD9,
	MONSTER_BIGHEAD10,
	MONSTER_GOATMAN6,
	MONSTER_GOATMAN7,
	MONSTER_GOATMAN8,
	MONSTER_GOATMAN9,
	MONSTER_GOATMAN10,
	MONSTER_FOULCROW5,
	MONSTER_FOULCROW6,
	MONSTER_FOULCROW7,
	MONSTER_FOULCROW8,
	MONSTER_CLAWVIPER6,
	MONSTER_CLAWVIPER7,
	MONSTER_CLAWVIPER8,
	MONSTER_CLAWVIPER9,
	MONSTER_CLAWVIPER10,
	MONSTER_SANDRAIDER6,
	MONSTER_SANDRAIDER7,
	MONSTER_SANDRAIDER8,
	MONSTER_SANDRAIDER9,
	MONSTER_SANDRAIDER10,
	MONSTER_DEATHMAULER6,
	MONSTER_QUILLRAT6,
	MONSTER_QUILLRAT7,
	MONSTER_QUILLRAT8,
	MONSTER_VULTURE5,
	MONSTER_THORNHULK5,
	MONSTER_SLINGER7,
	MONSTER_SLINGER8,
	MONSTER_SLINGER9,
	MONSTER_CR_ARCHER6,
	MONSTER_CR_ARCHER7,
	MONSTER_CR_LANCER6,
	MONSTER_CR_LANCER7,
	MONSTER_CR_LANCER8,
	MONSTER_BLUNDERBORE5,
	MONSTER_BLUNDERBORE6,
	MONSTER_SKMAGE_FIRE5,
	MONSTER_SKMAGE_FIRE6,
	MONSTER_SKMAGE_LTNG5,
	MONSTER_SKMAGE_LTNG6,
	MONSTER_SKMAGE_COLD5,
	MONSTER_SKMAGE_POIS5,
	MONSTER_SKMAGE_POIS6,
	MONSTER_PANTHERWOMAN5,
	MONSTER_PANTHERWOMAN6,
	MONSTER_SANDLEAPER6,
	MONSTER_SANDLEAPER7,
	MONSTER_WRAITH6,
	MONSTER_WRAITH7,
	MONSTER_WRAITH8,
	MONSTER_SUCCUBUS6,
	MONSTER_SUCCUBUS7,
	MONSTER_SUCCUBUSWITCH6,
	MONSTER_SUCCUBUSWITCH7,
	MONSTER_SUCCUBUSWITCH8,
	MONSTER_WILLOWISP5,
	MONSTER_WILLOWISP6,
	MONSTER_WILLOWISP7,
	MONSTER_FALLEN6,
	MONSTER_FALLEN7,
	MONSTER_FALLEN8,
	MONSTER_FALLENSHAMAN6,
	MONSTER_FALLENSHAMAN7,
	MONSTER_FALLENSHAMAN8,
	MONSTER_SKELETON6,
	MONSTER_SKELETON7,
	MONSTER_BATDEMON6,
	MONSTER_BATDEMON7,
	MONSTER_BLOODLORD6,
	MONSTER_BLOODLORD7,
	MONSTER_SCARAB6,
	MONSTER_SCARAB7,
	MONSTER_FETISH6,
	MONSTER_FETISH7,
	MONSTER_FETISH8,
	MONSTER_FETISHBLOW6,
	MONSTER_FETISHBLOW7,
	MONSTER_FETISHBLOW8,
	MONSTER_FETISHSHAMAN6,
	MONSTER_FETISHSHAMAN7,
	MONSTER_FETISHSHAMAN8,
	MONSTER_BABOON7,
	MONSTER_BABOON8,
	MONSTER_UNRAVELER6,
	MONSTER_UNRAVELER7,
	MONSTER_UNRAVELER8,
	MONSTER_UNRAVELER9,
	MONSTER_ZEALOT4,
	MONSTER_ZEALOT5,
	MONSTER_CANTOR5,
	MONSTER_CANTOR6,
	MONSTER_VILEMOTHER4,
	MONSTER_VILEMOTHER5,
	MONSTER_VILECHILD4,
	MONSTER_VILECHILD5,
	MONSTER_SANDMAGGOT6,
	MONSTER_MAGGOTBABY6,
	MONSTER_MAGGOTEGG6,
	MONSTER_MINION9,
	MONSTER_MINION10,
	MONSTER_MINION11,
	MONSTER_ARACH6,
	MONSTER_MEGADEMON4,
	MONSTER_MEGADEMON5,
	MONSTER_IMP6,
	MONSTER_IMP7,
	MONSTER_BONEFETISH6,
	MONSTER_BONEFETISH7,
	MONSTER_FINGERMAGE4,
	MONSTER_FINGERMAGE5,
	MONSTER_REGURGITATOR4,
	MONSTER_VAMPIRE6,
	MONSTER_VAMPIRE7,
	MONSTER_VAMPIRE8,
	MONSTER_REANIMATEDHORDE6,
	MONSTER_DKFIG1,
	MONSTER_DKFIG2,
	MONSTER_DKMAG1,
	MONSTER_DKMAG2,
	MONSTER_MUMMY6,
	MONSTER_UBERMEPHISTO,
	MONSTER_UBERDIABLO,
	MONSTER_UBERIZUAL,
	MONSTER_UBERANDARIEL,
	MONSTER_UBERDURIEL,
	MONSTER_UBERBAAL,
	MONSTER_DEMONSPAWNER,
	MONSTER_DEMONHOLE,
	MONSTER_MEGADEMON6,
	MONSTER_DKMAG3,
	MONSTER_IMP8,
	MONSTER_SWARM5,
	MONSTER_SANDMAGGOT7,
	MONSTER_ARACH7,
	MONSTER_SCARAB8,
	MONSTER_SUCCUBUS8,
	MONSTER_SUCCUBUSWITCH9,
	MONSTER_CORRUPTROGUE6,
	MONSTER_CR_ARCHER8,
	MONSTER_CR_LANCER9,
	MONSTER_OVERSEER6,
	MONSTER_SKELETON8,
	MONSTER_SK_ARCHER11,
	MONSTER_SKMAGE_FIRE7,
	MONSTER_SKMAGE_LTNG7,
	MONSTER_SKMAGE_COLD6,
	MONSTER_SKMAGE_POIS7,
	MONSTER_VAMPIRE9,
	MONSTER_WRAITH9,
	MONSTER_WILLOWISP8,
};

enum D2C_MonTypeFlags
{
	MONTYPEFLAG_OTHER = 0x01,
	MONTYPEFLAG_SUPERUNIQUE = 0x02,
	MONTYPEFLAG_CHAMPION = 0x04,
	MONTYPEFLAG_UNIQUE = 0x08,
	MONTYPEFLAG_MINION = 0x10,
	MONTYPEFLAG_POSSESSED = 0x20,
	MONTYPEFLAG_GHOSTLY = 0x40,
	MONTYPEFLAG_MULTISHOT = 0x80
};

enum D2C_MonModes
{
	MONMODE_DEATH, 		//0x00 Death DT
	MONMODE_NEUTRAL, 	//0x01 Neutral NU
	MONMODE_WALK, 		//0x02 Walk WL
	MONMODE_GETHIT, 	//0x03 Get Hit GH
	MONMODE_ATTACK1, 	//0x04 Melee Attack A1
	MONMODE_ATTACK2, 	//0x05 Melee Attack A2
	MONMODE_BLOCK, 		//0x06 Block BL
	MONMODE_CAST, 		//0x07 Spell Cast SC
	MONMODE_SKILL1, 	//0x08 Special S1
	MONMODE_SKILL2, 	//0x09 Special S2
	MONMODE_SKILL3, 	//0x0A Special S3
	MONMODE_SKILL4, 	//0x0B Special S4
	MONMODE_DEAD, 		//0x0C Dead DD
	MONMODE_KNOCKBACK, 	//0x0D Knockback KB
	MONMODE_SEQUENCE, 	//0x0E Sequence SQ
	MONMODE_RUN			//0x0F Run RN
};

enum D2C_MercenaryClasses
{
	MERC_A1 = 0x10F, 	//Monstats Id Act 1 Mercenary
	MERC_A2 = 0x152, 	//Monstats Id Act 2 Mercenary
	MERC_A3 = 0x167, 	//Monstats Id Act 3 Mercenary
	MERC_A5 = 0x231		//Monstats Id Act 5 Mercenary
};

enum D2C_PetWarpMode
{
	PETMOVE_OWNERROOM,
	PETMOVE_OWNERPOS,
	PETMOVE_TOWNIDLE,
	PETMOVE_TELE,
	PETMOVE_SCATTER,
	PETMOVE_IDLE
};

enum D2C_MonUMods
{
	MONUMOD_NONE, 					//none
	MONUMOD_RNDNAME, 				//randomized name
	MONUMOD_HPMULTIPLY, 			//adds life%
	MONUMOD_LIGHT, 					//increased light radius
	MONUMOD_LEVELADD, 				//adds three mlvl
	MONUMOD_EXTRASTRONG, 			//extra strong, dmg
	MONUMOD_EXTRAFAST, 				//extra fast, faster
	MONUMOD_CURSED, 				//amplify damage on hit
	MONUMOD_MAGICRESISTANT, 		//increased elemental resists
	MONUMOD_FIRECHANT, 				//fire enchanted
	MONUMOD_POISDEATH, 				//poison cloud on death
	MONUMOD_WORMDEATH, 				//releases worms and insects on death (Duriel)
	MONUMOD_BRAVENDEATH, 			//only works for Blood raven
	MONUMOD_IGNOREAC, 				//Ignore defense
	MONUMOD_SPCDAMAGE, 				//unknown
	MONUMOD_KILLMINIONSDEATH, 		//all minions of the boss die when the boss is killed
	MONUMOD_CHAMPMODS, 				//related to champions mods
	MONUMOD_LIGHTCHANT, 			//lightning enchanted
	MONUMOD_COLDCHANT, 				//cold enchanted
	MONUMOD_UNUSEDMERCMOD, 			//old unused mercenary dmg mod, buggy
	MONUMOD_CHARGEDBOLTS, 			//charged bolts when struck (scarabs)
	MONUMOD_TEMPSUMMON, 			//used by summons that that are destroyed after a set time
	MONUMOD_QUESTMOD, 				//related to quests
	MONUMOD_POISONFIELD, 			//the boss is dealing poison damage in an aura-like method
	MONUMOD_THIEF, 					//unused, thief mod
	MONUMOD_MANABURN, 				//mana burn
	MONUMOD_TELEHEAL, 				//teleports randomly and heal
	MONUMOD_SPECTRALHIT, 			//spectral hit, elemental damage
	MONUMOD_STONESKIN, 				//physical resistance
	MONUMOD_MULTISHOT, 				//multi-shot
	MONUMOD_AURACHANT, 				//aura enchanted, random aura when eqquipped (from aura table)
	MONUMOD_CORPSEBOOMDEATH, 		//explosion of the corpse on death
	MONUMOD_FIREBOOMDEATH, 			//fire explosion on death
	MONUMOD_FREEZINDEATH, 			//freeze you on death
	MONUMOD_SELFRESURRECT, 			//self-resurrect for reanimated-horde
	MONUMOD_ICESHATTERDEATH, 		//ice shatter on death
	MONUMOD_CHAMPSTONED, 			//slowed down but stronger, for champions
	MONUMOD_CHAMPSTATS, 			//champs stats related
	MONUMOD_CHAMPCURSEIMMUNE, 		//champion cannot be cursed
	MONUMOD_CHAMPSTATS2, 			//related to champ stats
	MONUMOD_PAINWORMDEATH, 			//summons a pain work on death
	MONUMOD_ALWAYSRUNAI, 			//unknown
	MONUMOD_NOVADEATH				//nova on death
};

enum D2C_SuperUniques
{
	SUPERUNIQUE_BISHIBOSH,
	SUPERUNIQUE_BONEBREAK,
	SUPERUNIQUE_COLDCROW,
	SUPERUNIQUE_RAKANISHU,
	SUPERUNIQUE_TREEHEAD_WOODFIST,
	SUPERUNIQUE_GRISWOLD,
	SUPERUNIQUE_THE_COUNTESS,
	SUPERUNIQUE_PITSPAWN_FOULDOG,
	SUPERUNIQUE_FLAMESPIKE_THE_CRAWLER,
	SUPERUNIQUE_BONEASH,
	SUPERUNIQUE_RADAMENT,
	SUPERUNIQUE_BLOODWITCH_THE_WILD,
	SUPERUNIQUE_FANGSKIN,
	SUPERUNIQUE_BEETLEBURST,
	SUPERUNIQUE_LEATHERARM,
	SUPERUNIQUE_COLDWORM_THE_BURROWER,
	SUPERUNIQUE_FIRE_EYE,
	SUPERUNIQUE_DARK_ELDER,
	SUPERUNIQUE_THE_SUMMONER,
	SUPERUNIQUE_ANCIENT_KAA_THE_SOULLESS,
	SUPERUNIQUE_THE_SMITH,
	SUPERUNIQUE_WEB_MAGE_THE_BURNING,
	SUPERUNIQUE_WITCH_DOCTOR_ENDUGU,
	SUPERUNIQUE_STORMTREE,
	SUPERUNIQUE_SARINA_THE_BATTLEMAID,
	SUPERUNIQUE_ICEHAWK_RIFTWING,
	SUPERUNIQUE_ISMAIL_VILEHAND,
	SUPERUNIQUE_GELEB_FLAMEFINGER,
	SUPERUNIQUE_BREMM_SPARKFIST,
	SUPERUNIQUE_TOORC_ICEFIST,
	SUPERUNIQUE_WYAND_VOIDFINGER,
	SUPERUNIQUE_MAFFER_DRAGONHAND,
	SUPERUNIQUE_WINGED_DEATH,
	SUPERUNIQUE_THE_TORMENTOR,
	SUPERUNIQUE_TAINTBREEDER,
	SUPERUNIQUE_RIFTWRAITH_THE_CANNIBAL,
	SUPERUNIQUE_INFECTOR_OF_SOULS,
	SUPERUNIQUE_LORD_DE_SEIS,
	SUPERUNIQUE_GRAND_VIZIER_OF_CHAOS,
	SUPERUNIQUE_THE_COW_KING,
	SUPERUNIQUE_CORPSEFIRE,
	SUPERUNIQUE_THE_FEATURE_CREEP,
	SUPERUNIQUE_SIEGE_BOSS,
	SUPERUNIQUE_ANCIENT_BARBARIAN_1,
	SUPERUNIQUE_ANCIENT_BARBARIAN_2,
	SUPERUNIQUE_ANCIENT_BARBARIAN_3,
	SUPERUNIQUE_AXE_DWELLER,
	SUPERUNIQUE_BONESAW_BREAKER,
	SUPERUNIQUE_DAC_FARREN,
	SUPERUNIQUE_MEGAFLOW_RECTIFIER,
	SUPERUNIQUE_EYEBACK_UNLEASHED,
	SUPERUNIQUE_THREASH_SOCKET,
	SUPERUNIQUE_PINDLESKIN,
	SUPERUNIQUE_SNAPCHIP_SHATTER,
	SUPERUNIQUE_ANODIZED_ELITE,
	SUPERUNIQUE_VINVEAR_MOLECH,
	SUPERUNIQUE_SHARP_TOOTH_SAYER,
	SUPERUNIQUE_MAGMA_TORQUER,
	SUPERUNIQUE_BLAZE_RIPPER,
	SUPERUNIQUE_FROZENSTEIN,
	SUPERUNIQUE_NIHLATHAK_BOSS,
	SUPERUNIQUE_BAAL_SUBJECT_1,
	SUPERUNIQUE_BAAL_SUBJECT_2,
	SUPERUNIQUE_BAAL_SUBJECT_3,
	SUPERUNIQUE_BAAL_SUBJECT_4,
	SUPERUNIQUE_BAAL_SUBJECT_5,
};

enum D2MapAIActions
{
	AIACTION_MODE_NU = 1,
	AIACTION_MODE_S1 = 4,
	AIACTION_MODE_S2 = 5,
};
#endif // CONSTANTS_MONSTERS

#ifndef CONSTANTS_OBJECTS //Pseudo-Macro to group all constants
enum D2C_ObjModes
{
	OBJMODE_NEUTRAL,	// NU
	OBJMODE_OPERATING,	// OP
	OBJMODE_OPENED,		// ON
	OBJMODE_SPECIAL1,	// S1
	OBJMODE_SPECIAL2,	// S2
	OBJMODE_SPECIAL3,	// S3
	OBJMODE_SPECIAL4,	// S4
	OBJMODE_SPECIAL5	// S5
};

enum D2Objects
{
	OBJECT_TOWERTOME = 8,
	OBJECT_ROGUEFOUNTAIN = 12,
	OBJECT_DOORGATELEFT = 13,
	OBJECT_DOORGATERIGHT = 14,
	OBJECT_DOORWOODENLEFT = 15,
	OBJECT_DOORWOODENRIGHT = 16,
	OBJECT_STONEALPHA = 17,
	OBJECT_STONEBETA = 18,
	OBJECT_STONEGAMMA = 19,
	OBJECT_STONEDELTA = 20,
	OBJECT_STONELAMBDA = 21,
	OBJECT_STONETHETA = 22,
	OBJECT_DOORCOURTYARDLEFT = 23,
	OBJECT_DOORCOURTYARDRIGHT = 24,
	OBJECT_DOORCATHEDRALDOUBLE = 25,
	OBJECT_CAINGIBBET = 26,
	OBJECT_DOORMONASTERYDOUBLERIGHT = 27,
	OBJECT_INIFUSS_TREE = 30,
	OBJECT_ROGUEBONFIRE = 39,
	OBJECT_RIVER1 = 40,
	OBJECT_RIVER2 = 41,
	OBJECT_RIVER3 = 42,
	OBJECT_RIVER4 = 43,
	OBJECT_RIVER5 = 44,
	OBJECT_ANDARIELS_DOOR = 47,
	OBJECT_TOWN_PORTAL = 59,
	OBJECT_PERMANENT_TOWN_PORTAL = 60,
	OBJECT_INVISIBLE_OBJECT = 61,
	OBJECT_DOORCATHEDRALLEFT = 62,
	OBJECT_DOORCATHEDRALRIGHT = 63,
	OBJECT_DOORWOODENLEFT2 = 64,
	OBJECT_INVISIBLE_RIVER_SOUND1 = 65,
	OBJECT_INVISIBLE_RIVER_SOUND2 = 66,
	OBJECT_TRAP_DOOR = 74,
	OBJECT_OBELISK = 80,
	OBJECT_DESERT_OBELISK = 90,
	OBJECT_TOMBDOORLEFT = 91,
	OBJECT_TOMBDOORRIGHT = 92,
	OBJECT_PORTAL_TO_DURIELS_LAIR = 100,
	OBJECT_MALUS = 108,
	OBJECT_WAYPOINT_PORTAL = 119,
	OBJECT_JERHYN_PLACEHOLDER1 = 121,
	OBJECT_JERHYN_PLACEHOLDER2 = 122,
	OBJECT_VILE_DOG_AFTERGLOW = 131,
	OBJECT_TAINTEDSUNALTAR = 149,
	OBJECT_ORIFICE = 152,
	OBJECT_TYRAELS_DOOR = 153,
	OBJECT_FIRE_SMALL = 160,
	OBJECT_FIRE_MEDIUM = 161,
	OBJECT_FIRE_LARGE = 162,
	OBJECT_CAINPORTAL = 189,
	OBJECT_TELEPORTATION_PAD = 192,
	OBJECT_LAM_ESENS_TOME = 193,
	OBJECT_FLOORTRAP = 196,
	OBJECT_SLIMEDOOR1 = 229,
	OBJECT_SLIMEDOOR2 = 230,
	OBJECT_ACT3WAYPOINT_TOWN = 237,
	OBJECT_EXPLODING_COW = 250,
	OBJECT_GIDBINN_ALTAR = 251,
	OBJECT_GIDBINN_DECOY = 252,
	OBJECT_TOMBFLOORTRAP = 261,
	OBJECT_STASH = 267,
	OBJECT_WIRTSBODY = 268,
	OBJECT_GOLD_PLACEHOLDER = 269,
	OBJECT_IRONGRATEDOORLEFT = 290,
	OBJECT_IRONGRATEDOORRIGHT = 291,
	OBJECT_WOODENGRATEDOORLEFT = 292,
	OBJECT_WOODENGRATEDOORRIGHT = 293,
	OBJECT_WOODENDOORLEFT = 294,
	OBJECT_WOODENDOORRIGHT = 295,
	OBJECT_ARCANE_SANCTUARY_PORTAL = 298,
	OBJECT_HAREM_GUARD_1 = 314,
	OBJECT_HAREM_GUARD_2 = 315,
	OBJECT_HAREM_GUARD_3 = 316,
	OBJECT_HAREM_GUARD_4 = 317,
	OBJECT_EUNUCH_HAREM_BLOCKER = 318,
	OBJECT_STEEG_STONE = 337,
	OBJECT_GUILD_VAULT = 338,
	OBJECT_TROPHY_CASE = 339,
	OBJECT_MESSAGE_BOARD = 340,
	OBJECT_MEPHISTOBRIDGE = 341,
	OBJECT_HELLGATE_PORTAL = 342,
	OBJECT_HORADRIC_CUBE_CHEST = 354,
	OBJECT_HORADRIC_SCROLL_CHEST = 355,
	OBJECT_STAFF_OF_KINGS_CHEST = 356,
	OBJECT_YET_ANOTHER_TOME = 357,
	OBJECT_SEWER_STAIRS = 366,
	OBJECT_ACT3SEWERLEVER = 367,
	OBJECT_DARKWANDERER_STARTPOSITION = 368,
	OBJECT_CHEST = 371,
	OBJECT_HELLFORGE = 376,
	OBJECT_GUILD_PORTAL = 377,
	OBJECT_HRATLI_START = 378,
	OBJECT_HRATLI_END = 379,
	OBJECT_NATALYA_START = 382,
	OBJECT_CAIN_START_POSITION = 385,
	OBJECT_DIABLO_SEAL1 = 392,
	OBJECT_DIABLO_SEAL2 = 393,
	OBJECT_DIABLO_SEAL3 = 394,
	OBJECT_DIABLO_SEAL4 = 395,
	OBJECT_DIABLO_SEAL5 = 396,
	OBJECT_COMPELLING_ORB = 404,
	OBJECT_KHALIM_CHEST1 = 405,
	OBJECT_KHALIM_CHEST2 = 406,
	OBJECT_KHALIM_CHEST3 = 407,
	OBJECT_SIEGE_CONTROL = 410,
	OBJECT_HARROGATH_TOWN_MAIN_GATE = 449,
	OBJECT_DREHYA_START_IN_TOWN = 459,
	OBJECT_DREHYA_START_OUTSIDE_TOWN = 460,
	OBJECT_NIHLATHAK_START_IN_TOWN = 461,
	OBJECT_NIHLATHAK_START_OUTSIDE_TOWN = 462,
	OBJECT_CAGEDWUSSIE1 = 473,
	OBJECT_ANCIENTSTATUE3 = 474,
	OBJECT_ANCIENTSTATUE1 = 475,
	OBJECT_ANCIENTSTATUE2 = 476,
	OBJECT_LARZUK_GREETING = 542,
	OBJECT_LARZUK_STANDARD = 543,
	OBJECT_ANCIENTSALTAR = 546,
	OBJECT_ANCIENTSDOOR = 547,
	OBJECT_BAALS_LAIR = 557,
	OBJECT_FROZEN_ANYA = 558,
	OBJECT_BBQ_BUNNY = 559,
	OBJECT_INVISIBLE_ANCIENT = 561,
	OBJECT_INVISIBLE_BASE = 562,
	OBJECT_BAALS_PORTAL_WORLDSTONECHAMBER = 563,
	OBJECT_SUMMIT_DOOR = 564,
	OBJECT_LAST_PORTAL = 565,
	OBJECT_HARROGATH_LAST_LAST_PORTAL = 566,
	OBJECT_ZOO = 567,
	OBJECT_KEEPER = 568,
	OBJECT_BAALS_PORTAL_THRONEOFDESTRUCTION = 569,
};

enum D2ObjectSubClasses
{
	OBJSUBCLASS_SHRINE = 0x01,
	OBJSUBCLASS_OBELISK = 0x02,
	OBJSUBCLASS_TOWNPORTAL = 0x04,
	OBJSUBCLASS_CHEST = 0x08,
	OBJSUBCLASS_PORTAL = 0x10,
	OBJSUBCLASS_WELL = 0x20,
	OBJSUBCLASS_WAYPOINT = 0x40,
	OBJSUBCLASS_DOOR = 0x80,
};

enum D2C_ShrineTypes
{
	SHRINE_NONE,
	SHRINE_REFILL,
	SHRINE_HPBOOST,
	SHRINE_MANABOOST,
	SHRINE_HPXCHANGE,
	SHRINE_MANAXCHANGE,
	SHRINE_ARMOR,
	SHRINE_COMBAT,
	SHRINE_RESFIRE,
	SHRINE_RESCOLD,
	SHRINE_RESLITE,
	SHRINE_RESPOIS,
	SHRINE_SKILL,
	SHRINE_MANAREGEN,
	SHRINE_STAM,
	SHRINE_EXP,
	SHRINE_ENIRHS,
	SHRINE_PORTAL,
	SHRINE_GEM,
	SHRINE_STORM,
	SHRINE_WARP,
	SHRINE_EXPLOSION,
	SHRINE_POISON
};
#endif // CONSTANTS_OBJECTS

#ifndef CONSTANTS_SKILLS //Pseudo-Macro to group all constants
enum D2C_Skills
{
	SKILL_ATTACK = 0,
	SKILL_KICK,
	SKILL_THROW,
	SKILL_UNSUMMON,
	SKILL_LEFTHANDTHROW,
	SKILL_LEFTHANDSWING,
	SKILL_MAGICARROW,
	SKILL_FIREARROW,
	SKILL_INNERSIGHT,
	SKILL_CRITICALSTRIKE,
	SKILL_JAB,
	SKILL_COLDARROW,
	SKILL_MULTIPLESHOT,
	SKILL_DODGE,
	SKILL_POWERSTRIKE,
	SKILL_POISONJAVELIN,
	SKILL_EXPLODINGARROW,
	SKILL_SLOWMISSILES,
	SKILL_AVOID,
	SKILL_IMPALE,
	SKILL_LIGHTNINGBOLT,
	SKILL_ICEARROW,
	SKILL_GUIDEDARROW,
	SKILL_PENETRATE,
	SKILL_CHARGEDSTRIKE,
	SKILL_PLAGUEJAVELIN,
	SKILL_STRAFE,
	SKILL_IMMOLATIONARROW,
	SKILL_DOPPLEZON,
	SKILL_EVADE,
	SKILL_FEND,
	SKILL_FREEZINGARROW,
	SKILL_VALKYRIE,
	SKILL_PIERCE,
	SKILL_LIGHTNINGSTRIKE,
	SKILL_LIGHTNINGFURY,
	SKILL_FIREBOLT,
	SKILL_WARMTH,
	SKILL_CHARGEDBOLT,
	SKILL_ICEBOLT,
	SKILL_FROZENARMOR,
	SKILL_INFERNO,
	SKILL_STATICFIELD,
	SKILL_TELEKINESIS,
	SKILL_FROSTNOVA,
	SKILL_ICEBLAST,
	SKILL_BLAZE,
	SKILL_FIREBALL,
	SKILL_NOVA,
	SKILL_LIGHTNING,
	SKILL_SHIVERARMOR,
	SKILL_FIREWALL,
	SKILL_ENCHANT,
	SKILL_CHAINLIGHTNING,
	SKILL_TELEPORT,
	SKILL_GLACIALSPIKE,
	SKILL_METEOR,
	SKILL_THUNDERSTORM,
	SKILL_ENERGYSHIELD,
	SKILL_BLIZZARD,
	SKILL_CHILLINGARMOR,
	SKILL_FIREMASTERY,
	SKILL_HYDRA,
	SKILL_LIGHTNINGMASTERY,
	SKILL_FROZENORB,
	SKILL_COLDMASTERY,
	SKILL_AMPLIFYDAMAGE,
	SKILL_TEETH,
	SKILL_BONEARMOR,
	SKILL_SKELETONMASTERY,
	SKILL_RAISESKELETON,
	SKILL_DIMVISION,
	SKILL_WEAKEN,
	SKILL_POISONDAGGER,
	SKILL_CORPSEEXPLOSION,
	SKILL_CLAYGOLEM,
	SKILL_IRONMAIDEN,
	SKILL_TERROR,
	SKILL_BONEWALL,
	SKILL_GOLEMMASTERY,
	SKILL_RAISESKELETALMAGE,
	SKILL_CONFUSE,
	SKILL_LIFETAP,
	SKILL_POISONEXPLOSION,
	SKILL_BONESPEAR,
	SKILL_BLOODGOLEM,
	SKILL_ATTRACT,
	SKILL_DECREPIFY,
	SKILL_BONEPRISON,
	SKILL_SUMMONRESIST,
	SKILL_IRONGOLEM,
	SKILL_LOWERRESIST,
	SKILL_POISONNOVA,
	SKILL_BONESPIRIT,
	SKILL_FIREGOLEM,
	SKILL_REVIVE,
	SKILL_SACRIFICE,
	SKILL_SMITE,
	SKILL_MIGHT,
	SKILL_PRAYER,
	SKILL_RESISTFIRE,
	SKILL_HOLYBOLT,
	SKILL_HOLYFIRE,
	SKILL_THORNS,
	SKILL_DEFIANCE,
	SKILL_RESISTCOLD,
	SKILL_ZEAL,
	SKILL_CHARGE,
	SKILL_BLESSEDAIM,
	SKILL_CLEANSING,
	SKILL_RESISTLIGHTNING,
	SKILL_VENGEANCE,
	SKILL_BLESSEDHAMMER,
	SKILL_CONCENTRATION,
	SKILL_HOLYFREEZE,
	SKILL_VIGOR,
	SKILL_CONVERSION,
	SKILL_HOLYSHIELD,
	SKILL_HOLYSHOCK,
	SKILL_SANCTUARY,
	SKILL_MEDITATION,
	SKILL_FISTOFTHEHEAVENS,
	SKILL_FANATICISM,
	SKILL_CONVICTION,
	SKILL_REDEMPTION,
	SKILL_SALVATION,
	SKILL_BASH,
	SKILL_SWORDMASTERY,
	SKILL_AXEMASTERY,
	SKILL_MACEMASTERY,
	SKILL_HOWL,
	SKILL_FINDPOTION,
	SKILL_LEAP,
	SKILL_DOUBLESWING,
	SKILL_POLEARMMASTERY,
	SKILL_THROWINGMASTERY,
	SKILL_SPEARMASTERY,
	SKILL_TAUNT,
	SKILL_SHOUT,
	SKILL_STUN,
	SKILL_DOUBLETHROW,
	SKILL_INCREASEDSTAMINA,
	SKILL_FINDITEM,
	SKILL_LEAPATTACK,
	SKILL_CONCENTRATE,
	SKILL_IRONSKIN,
	SKILL_BATTLECRY,
	SKILL_FRENZY,
	SKILL_INCREASEDSPEED,
	SKILL_BATTLEORDERS,
	SKILL_GRIMWARD,
	SKILL_WHIRLWIND,
	SKILL_BERSERK,
	SKILL_NATURALRESISTANCE,
	SKILL_WARCRY,
	SKILL_BATTLECOMMAND,
	SKILL_FIREHIT,
	SKILL_UNHOLYBOLT,
	SKILL_SKELETONRAISE,
	SKILL_MAGGOTEGG,
	SKILL_SHAMANFIRE,
	SKILL_MAGOTTUP,
	SKILL_MAGOTTDOWN,
	SKILL_MAGOTTLAY,
	SKILL_ANDRIALSPRAY,
	SKILL_JUMP,
	SKILL_SWARMMOVE,
	SKILL_NEST,
	SKILL_QUICKSTRIKE,
	SKILL_VAMPIREFIREBALL,
	SKILL_VAMPIREFIREWALL,
	SKILL_VAMPIREMETEOR,
	SKILL_GARGOYLETRAP,
	SKILL_SPIDERLAY,
	SKILL_VAMPIREHEAL,
	SKILL_VAMPIRERAISE,
	SKILL_SUBMERGE,
	SKILL_FETISHAURA,
	SKILL_FETISHINFERNO,
	SKILL_ZAKARUMHEAL,
	SKILL_EMERGE,
	SKILL_RESURRECT,
	SKILL_BESTOW,
	SKILL_MISSILESKILL1,
	SKILL_MONTELEPORT,
	SKILL_PRIMELIGHTNING,
	SKILL_PRIMEBOLT,
	SKILL_PRIMEBLAZE,
	SKILL_PRIMEFIREWALL,
	SKILL_PRIMESPIKE,
	SKILL_PRIMEICENOVA,
	SKILL_PRIMEPOISONBALL,
	SKILL_PRIMEPOISONNOVA,
	SKILL_DIABLIGHT,
	SKILL_DIABCOLD,
	SKILL_DIABFIRE,
	SKILL_FINGERMAGESPIDER,
	SKILL_DIABWALL,
	SKILL_DIABRUN,
	SKILL_DIABPRISON,
	SKILL_POISONBALLTRAP,
	SKILL_ANDYPOISONBOLT,
	SKILL_HIREABLEMISSILE,
	SKILL_DESERTTURRET,
	SKILL_ARCANETOWER,
	SKILL_MONBLIZZARD,
	SKILL_MOSQUITO,
	SKILL_CURSEDBALLTRAPRIGHT,
	SKILL_CURSEDBALLTRAPLEFT,
	SKILL_MONFROZENARMOR,
	SKILL_MONBONEARMOR,
	SKILL_MONBONESPIRIT,
	SKILL_MONCURSECAST,
	SKILL_HELLMETEOR,
	SKILL_REGURGITATOREAT,
	SKILL_MONFRENZY,
	SKILL_QUEENDEATH,
	SKILL_SCROLLOFIDENTIFY,
	SKILL_BOOKOFIDENTIFY,
	SKILL_SCROLLOFTOWNPORTAL,
	SKILL_BOOKOFTOWNPORTAL,
	SKILL_RAVEN,
	SKILL_PLAGUEPOPPY,
	SKILL_WEARWOLF,
	SKILL_SHAPESHIFTING,
	SKILL_FIRESTORM,
	SKILL_OAKSAGE,
	SKILL_SUMMONSPIRITWOLF,
	SKILL_WEARBEAR,
	SKILL_MOLTENBOULDER,
	SKILL_ARCTICBLAST,
	SKILL_CYCLEOFLIFE,
	SKILL_FERALRAGE,
	SKILL_MAUL,
	SKILL_ERUPTION,
	SKILL_CYCLONEARMOR,
	SKILL_HEARTOFWOLVERINE,
	SKILL_SUMMONFENRIS,
	SKILL_RABIES,
	SKILL_FIRECLAWS,
	SKILL_TWISTER,
	SKILL_VINES,
	SKILL_HUNGER,
	SKILL_SHOCKWAVE,
	SKILL_VOLCANO,
	SKILL_TORNADO,
	SKILL_SPIRITOFBARBS,
	SKILL_SUMMONGRIZZLY,
	SKILL_FURY,
	SKILL_ARMAGEDDON,
	SKILL_HURRICANE,
	SKILL_FIRETRAUMA,
	SKILL_CLAWMASTERY,
	SKILL_PSYCHICHAMMER,
	SKILL_TIGERSTRIKE,
	SKILL_DRAGONTALON,
	SKILL_SHOCKFIELD,
	SKILL_BLADESENTINEL,
	SKILL_QUICKNESS,
	SKILL_FISTSOFFIRE,
	SKILL_DRAGONCLAW,
	SKILL_CHARGEDBOLTSENTRY,
	SKILL_WAKEOFFIRESENTRY,
	SKILL_WEAPONBLOCK,
	SKILL_CLOAKOFSHADOWS,
	SKILL_COBRASTRIKE,
	SKILL_BLADEFURY,
	SKILL_FADE,
	SKILL_SHADOWWARRIOR,
	SKILL_CLAWSOFTHUNDER,
	SKILL_DRAGONTAIL,
	SKILL_LIGHTNINGSENTRY,
	SKILL_INFERNOSENTRY,
	SKILL_MINDBLAST,
	SKILL_BLADESOFICE,
	SKILL_DRAGONFLIGHT,
	SKILL_DEATHSENTRY,
	SKILL_BLADESHIELD,
	SKILL_VENOM,
	SKILL_SHADOWMASTER,
	SKILL_ROYALSTRIKE,
	SKILL_WAKEOFDESTRUCTIONSENTRY,
	SKILL_IMPINFERNO,
	SKILL_IMPFIREBALL,
	SKILL_BAALTAUNT,
	SKILL_BAALCORPSEEXPLODE,
	SKILL_BAALMONSTERSPAWN,
	SKILL_CATAPULTCHARGEDBALL,
	SKILL_CATAPULTSPIKEBALL,
	SKILL_SUCKBLOOD,
	SKILL_CRYHELP,
	SKILL_HEALINGVORTEX,
	SKILL_TELEPORT2,
	SKILL_SELF_RESURRECT,
	SKILL_VINEATTACK,
	SKILL_OVERSEERWHIP,
	SKILL_BARBSAURA,
	SKILL_WOLVERINEAURA,
	SKILL_OAKSAGEAURA,
	SKILL_IMPFIREMISSILE,
	SKILL_IMPREGNATE,
	SKILL_SIEGEBEASTSTOMP,
	SKILL_MINIONSPAWNER,
	SKILL_CATAPULTBLIZZARD,
	SKILL_CATAPULTPLAGUE,
	SKILL_CATAPULTMETEOR,
	SKILL_BOLTSENTRY,
	SKILL_CORPSECYCLER,
	SKILL_DEATHMAUL,
	SKILL_DEFENSECURSE,
	SKILL_BLOODMANA,
	SKILL_MONINFERNOSENTRY,
	SKILL_MONDEATHSENTRY,
	SKILL_SENTRYLIGHTNING,
	SKILL_FENRISRAGE,
	SKILL_BAALTENTACLE,
	SKILL_BAALNOVA,
	SKILL_BAALINFERNO,
	SKILL_BAALCOLDMISSILES,
	SKILL_MEGADEMONINFERNO,
	SKILL_EVILHUTSPAWNER,
	SKILL_COUNTESSFIREWALL,
	SKILL_IMPBOLT,
	SKILL_HORRORARCTICBLAST,
	SKILL_DEATHSENTRYLTNG,
	SKILL_VINECYCLER,
	SKILL_BEARSMITE,
	SKILL_RESURRECT2,
	SKILL_BLOODLORDFRENZY,
	SKILL_BAALTELEPORT,
	SKILL_IMPTELEPORT,
	SKILL_BAALCLONETELEPORT,
	SKILL_ZAKARUMLIGHTNING,
	SKILL_VAMPIREMISSILE,
	SKILL_MEPHISTOMISSILE,
	SKILL_DOOMKNIGHTMISSILE,
	SKILL_ROGUEMISSILE,
	SKILL_HYDRAMISSILE,
	SKILL_NECROMAGEMISSILE,
	SKILL_MONBOW,
	SKILL_MONFIREARROW,
	SKILL_MONCOLDARROW,
	SKILL_MONEXPLODINGARROW,
	SKILL_MONFREEZINGARROW,
	SKILL_MONPOWERSTRIKE,
	SKILL_SUCCUBUSBOLT,
	SKILL_MEPHFROSTNOVA,
	SKILL_MONICESPEAR,
	SKILL_SHAMANICE,
	SKILL_DIABLOGEDDON,
	SKILL_DELERIUMCHANGE,
	SKILL_NIHLATHAKCORPSEEXPLOSION,
	SKILL_SERPENTCHARGE,
	SKILL_TRAPNOVA,
	SKILL_UNHOLYBOLTEX,
	SKILL_SHAMANFIREEX,
	SKILL_IMPFIREMISSILEEX,
	SKILL_FIXEDSIEGEBEASTSTOMP,
};

enum D2C_SkillCastType
{
	SKCASTTYPE_SHIFTLEFT = 0xE5,
	SKCASTTYPE_TARGETLEFT = 0xC5,
	SKCASTTYPE_SHIFTRIGHT = 0x66,
	SKCASTTYPE_RIGHT = 0x46
};

enum D2C_AuraFilters
{
	AURAFILTER_FINDPLAYER = 0x01,			//Targets Players Units
	AURAFILTER_FINDMONSTER = 0x02,			//Targets Monster Units
	AURAFILTER_FINDUNDEAD = 0x04,			//Targets Undead Monsters Units
	AURAFILTER_FINDMISSILE = 0x08,			//Targets Missiles Units			
	AURAFILTER_FINDOBJECT = 0x10,			//Target Objects Units
	AURAFILTER_FINDITEM = 0x20,				//Targets Items Units
	AURAFILTER_FINDISATT = 0x80,			//Targets Units with IsAtt (Monstats2)
	AURAFILTER_IGNINTOWN = 0x100,			//Ignore Units in Town
	AURAFILTER_USELOS = 0x200,				//Filter Uses Line of Sight
	AURAFILTER_FINDISSEL = 0x400,			//Targets Selectable Units
	AURAFILTER_FINDCORPSE = 0x1000,			//Targets Units Corpses
	AURAFILTER_IGNINTOWN2 = 0x2000,			//Ignore Units in Town
	AURAFILTER_IGNBOSS = 0x4000,			//Ignore Special Units (boss in monstats)
	AURAFILTER_IGNALLY = 0x8000,			//Ignore Allied Units
	AURAFILTER_FINDALLY = 0x10000,			//Targets Allied Units
	AURAFILTER_IGNPRIME = 0x40000,			//Ignore Prime Evils
	AURAFILTER_IGNJUSTHIT = 0x80000			//Ignore Units with Justhit State
};

enum D2C_SkillFlags
{
	SKFLAG_PASSIVE = 0x00000001,
	SKFLAG_RSKILLONLY = 0x00000002,
	SKFLAG_TARGETABLE = 0x00000004,
	SKFLAG_NEEDCORPSE = 0x00000008,
	SKFLAG_INTOWN = 0x00000010,
	SKFLAG_PHYSICAL = 0x00000020,
	SKFLAG_MAGICAL = 0x00000040,
	SKFLAG_FIRE = 0x00000080,
	SKFLAG_COLD = 0x00000100,
	SKFLAG_LTNG = 0x00000200,
	SKFLAG_POIS = 0x00000400,
	SKFLAG_KNOCKBACK = 0x00000800,
	SKFLAG_STUN = 0x00001000,
	SKFLAG_RADIUSEFFECT = 0x00002000,
	SKFLAG_MELEE = 0x00004000,
	SKFLAG_SUMMON = 0x00008000,
	SKFLAG_PARTYCAST = 0x00010000,
	SKFLAG_GUIDED = 0x00020000
};

enum D2C_SkillUseStates
{
	SKILLUSTATE_USABLE = 0,
	SKILLUSTATE_NOMANA = 1,
	SKILLUSTATE_NOQUANTITY = 2,
	SKILLUSTATE_DISABLED = 3,
	SKILLUSTATE_SHAPERESTRICT = 4,
	SKILLUSTATE_PASSIVE = 5,
	SKILLUSTATE_AURA = 6,
	SKILLUSTATE_NOLEVEL = 7,
	SKILLUSTATE_BLOCKED = 8,
};

#endif // CONSTANTS_SKILLS

#ifndef CONSTANTS_STATS //Pseudo-Macro to group all constants
enum D2C_ItemStats
{
	STAT_INVALID = -1,
	STAT_STRENGTH = 0, 					// 000
	STAT_ENERGY, 						// 001
	STAT_DEXTERITY, 						// 002
	STAT_VITALITY, 						// 003
	STAT_STATPTS, 						// 004
	STAT_SKILLPTS, 						// 005
	STAT_HITPOINTS, 						// 006
	STAT_MAXHP, 							// 007
	STAT_MANA, 							// 008
	STAT_MAXMANA, 						// 009
	STAT_STAMINA, 						// 00A
	STAT_MAXSTAMINA, 					// 00B
	STAT_LEVEL, 							// 00C
	STAT_EXPERIENCE, 					// 00D
	STAT_GOLD, 							// 00E
	STAT_GOLDBANK, 						// 00F
	STAT_ITEM_ARMOR_PERCENT, 			// 010
	STAT_ITEM_MAXDAMAGE_PERCENT, 		// 011
	STAT_ITEM_MINDAMAGE_PERCENT, 		// 012
	STAT_TOHIT,
	STAT_TOBLOCK,
	STAT_MINDAMAGE,
	STAT_MAXDAMAGE,
	STAT_SECONDARY_MINDAMAGE,
	STAT_SECONDARY_MAXDAMAGE,
	STAT_DAMAGEPERCENT,
	STAT_MANARECOVERY,
	STAT_MANARECOVERYBONUS,
	STAT_STAMINARECOVERYBONUS,
	STAT_LASTEXP,
	STAT_NEXTEXP,
	STAT_ARMORCLASS,
	STAT_ARMORCLASS_VS_MISSILE,
	STAT_ARMORCLASS_VS_HTH,
	STAT_NORMAL_DAMAGE_REDUCTION,
	STAT_MAGIC_DAMAGE_REDUCTION,
	STAT_DAMAGERESIST,
	STAT_MAGICRESIST,
	STAT_MAXMAGICRESIST,
	STAT_FIRERESIST,
	STAT_MAXFIRERESIST,
	STAT_LIGHTRESIST,
	STAT_MAXLIGHTRESIST,
	STAT_COLDRESIST,
	STAT_MAXCOLDRESIST,
	STAT_POISONRESIST,
	STAT_MAXPOISONRESIST,
	STAT_DAMAGEAURA,
	STAT_FIREMINDAM,
	STAT_FIREMAXDAM,
	STAT_LIGHTMINDAM,
	STAT_LIGHTMAXDAM,
	STAT_MAGICMINDAM,
	STAT_MAGICMAXDAM,
	STAT_COLDMINDAM,
	STAT_COLDMAXDAM,
	STAT_COLDLENGTH,
	STAT_POISONMINDAM,
	STAT_POISONMAXDAM,
	STAT_POISONLENGTH,
	STAT_LIFEDRAINMINDAM,
	STAT_LIFEDRAINMAXDAM,
	STAT_MANADRAINMINDAM,
	STAT_MANADRAINMAXDAM,
	STAT_STAMDRAINMINDAM,
	STAT_STAMDRAINMAXDAM,
	STAT_STUNLENGTH,
	STAT_VELOCITYPERCENT,
	STAT_ATTACKRATE,
	STAT_OTHER_ANIMRATE,
	STAT_QUANTITY,
	STAT_VALUE,
	STAT_DURABILITY,
	STAT_MAXDURABILITY,
	STAT_HPREGEN,
	STAT_ITEM_MAXDURABILITY_PERCENT,
	STAT_ITEM_MAXHP_PERCENT,
	STAT_ITEM_MAXMANA_PERCENT,
	STAT_ITEM_ATTACKERTAKESDAMAGE,
	STAT_ITEM_GOLDBONUS,
	STAT_ITEM_MAGICBONUS,
	STAT_ITEM_KNOCKBACK,
	STAT_ITEM_TIMEDURATION,
	STAT_ITEM_ADDCLASSSKILLS,
	STAT_UNSENTPARAM1,
	STAT_ITEM_ADDEXPERIENCE,
	STAT_ITEM_HEALAFTERKILL,
	STAT_ITEM_REDUCEDPRICES,
	STAT_ITEM_DOUBLEHERBDURATION,
	STAT_ITEM_LIGHTRADIUS,
	STAT_ITEM_LIGHTCOLOR,
	STAT_ITEM_REQ_PERCENT,
	STAT_ITEM_LEVELREQ,
	STAT_ITEM_FASTERATTACKRATE,
	STAT_ITEM_LEVELREQPCT,
	STAT_LASTBLOCKFRAME,
	STAT_ITEM_FASTERMOVEVELOCITY,
	STAT_ITEM_NONCLASSSKILL,
	STAT_STATE,
	STAT_ITEM_FASTERGETHITRATE,
	STAT_MONSTER_PLAYERCOUNT,
	STAT_SKILL_POISON_OVERRIDE_LENGTH,
	STAT_ITEM_FASTERBLOCKRATE,
	STAT_SKILL_BYPASS_UNDEAD,
	STAT_SKILL_BYPASS_DEMONS,
	STAT_ITEM_FASTERCASTRATE,
	STAT_SKILL_BYPASS_BEASTS,
	STAT_ITEM_SINGLESKILL,
	STAT_ITEM_RESTINPEACE,
	STAT_CURSE_RESISTANCE,
	STAT_ITEM_POISONLENGTHRESIST,
	STAT_ITEM_NORMALDAMAGE,
	STAT_ITEM_HOWL,
	STAT_ITEM_STUPIDITY,
	STAT_ITEM_DAMAGETOMANA,
	STAT_ITEM_IGNORETARGETAC,
	STAT_ITEM_FRACTIONALTARGETAC,
	STAT_ITEM_PREVENTHEAL,
	STAT_ITEM_HALFFREEZEDURATION,
	STAT_ITEM_TOHIT_PERCENT,
	STAT_ITEM_DAMAGETARGETAC,
	STAT_ITEM_DEMONDAMAGE_PERCENT,
	STAT_ITEM_UNDEADDAMAGE_PERCENT,
	STAT_ITEM_DEMON_TOHIT,
	STAT_ITEM_UNDEAD_TOHIT,
	STAT_ITEM_THROWABLE,
	STAT_ITEM_ELEMSKILL,
	STAT_ITEM_ALLSKILLS,
	STAT_ITEM_ATTACKERTAKESLIGHTDAMAGE,
	STAT_IRONMAIDEN_LEVEL,
	STAT_LIFETAP_LEVEL,
	STAT_THORNS_PERCENT,
	STAT_BONEARMOR,
	STAT_BONEARMORMAX,
	STAT_ITEM_FREEZE,
	STAT_ITEM_OPENWOUNDS,
	STAT_ITEM_CRUSHINGBLOW,
	STAT_ITEM_KICKDAMAGE,
	STAT_ITEM_MANAAFTERKILL,
	STAT_ITEM_HEALAFTERDEMONKILL,
	STAT_ITEM_EXTRABLOOD,
	STAT_ITEM_DEADLYSTRIKE,
	STAT_ITEM_ABSORBFIRE_PERCENT,
	STAT_ITEM_ABSORBFIRE,
	STAT_ITEM_ABSORBLIGHT_PERCENT,
	STAT_ITEM_ABSORBLIGHT,
	STAT_ITEM_ABSORBMAGIC_PERCENT,
	STAT_ITEM_ABSORBMAGIC,
	STAT_ITEM_ABSORBCOLD_PERCENT,
	STAT_ITEM_ABSORBCOLD,
	STAT_ITEM_SLOW,
	STAT_ITEM_AURA,
	STAT_ITEM_INDESCTRUCTIBLE,
	STAT_ITEM_CANNOTBEFROZEN,
	STAT_ITEM_STAMINADRAINPCT,
	STAT_ITEM_REANIMATE,
	STAT_ITEM_PIERCE,
	STAT_ITEM_MAGICARROW,
	STAT_ITEM_EXPLOSIVEARROW,
	STAT_ITEM_THROW_MINDAMAGE,
	STAT_ITEM_THROW_MAXDAMAGE,
	STAT_SKILL_HANDOFATHENA,
	STAT_SKILL_STAMINAPERCENT,
	STAT_SKILL_PASSIVE_STAMINAPERCENT,
	STAT_SKILL_CONCENTRATION,
	STAT_SKILL_ENCHANT,
	STAT_SKILL_PIERCE,
	STAT_SKILL_CONVICTION,
	STAT_SKILL_CHILLINGARMOR,
	STAT_SKILL_FRENZY,
	STAT_SKILL_DECREPIFY,
	STAT_SKILL_ARMOR_PERCENT,
	STAT_ALIGNMENT,
	STAT_TARGET0,
	STAT_TARGET1,
	STAT_GOLDLOST,
	STAT_CONVERSION_LEVEL,
	STAT_CONVERSION_MAXHP,
	STAT_UNIT_DOOVERLAY,
	STAT_ATTACK_VS_MONTYPE,
	STAT_DAMAGE_VS_MONTYPE,
	STAT_FADE,
	STAT_ARMOR_OVERRIDE_PERCENT,
	STAT_UNUSED183,
	STAT_UNUSED184,
	STAT_UNUSED185,
	STAT_UNUSED186,
	STAT_UNUSED187,
	STAT_ITEM_ADDSKILL_TAB,
	STAT_UNUSED189,
	STAT_UNUSED190,
	STAT_UNUSED191,
	STAT_UNUSED192,
	STAT_UNUSED193,
	STAT_ITEM_NUMSOCKETS,
	STAT_ITEM_SKILLONATTACK,
	STAT_ITEM_SKILLONKILL,
	STAT_ITEM_SKILLONDEATH,
	STAT_ITEM_SKILLONHIT,
	STAT_ITEM_SKILLONLEVELUP,
	STAT_UNUSED200,
	STAT_ITEM_SKILLONGETHIT,
	STAT_UNUSED202,
	STAT_UNUSED203,
	STAT_ITEM_CHARGED_SKILL,
	STAT_UNUSED204,
	STAT_UNUSED205,
	STAT_UNUSED206,
	STAT_UNUSED207,
	STAT_UNUSED208,
	STAT_UNUSED209,
	STAT_UNUSED210,
	STAT_UNUSED211,
	STAT_UNUSED212,
	STAT_ITEM_ARMOR_PERLEVEL,
	STAT_ITEM_ARMORPERCENT_PERLEVEL,
	STAT_ITEM_HP_PERLEVEL,
	STAT_ITEM_MANA_PERLEVEL,
	STAT_ITEM_MAXDAMAGE_PERLEVEL,
	STAT_ITEM_MAXDAMAGE_PERCENT_PERLEVEL,
	STAT_ITEM_STRENGTH_PERLEVEL,
	STAT_ITEM_DEXTERITY_PERLEVEL,
	STAT_ITEM_ENERGY_PERLEVEL,
	STAT_ITEM_VITALITY_PERLEVEL,
	STAT_ITEM_TOHIT_PERLEVEL,
	STAT_ITEM_TOHITPERCENT_PERLEVEL,
	STAT_ITEM_COLD_DAMAGEMAX_PERLEVEL,
	STAT_ITEM_FIRE_DAMAGEMAX_PERLEVEL,
	STAT_ITEM_LTNG_DAMAGEMAX_PERLEVEL,
	STAT_ITEM_POIS_DAMAGEMAX_PERLEVEL,
	STAT_ITEM_RESIST_COLD_PERLEVEL,
	STAT_ITEM_RESIST_FIRE_PERLEVEL,
	STAT_ITEM_RESIST_LTNG_PERLEVEL,
	STAT_ITEM_RESIST_POIS_PERLEVEL,
	STAT_ITEM_ABSORB_COLD_PERLEVEL,
	STAT_ITEM_ABSORB_FIRE_PERLEVEL,
	STAT_ITEM_ABSORB_LTNG_PERLEVEL,
	STAT_ITEM_ABSORB_POIS_PERLEVEL,
	STAT_ITEM_THORNS_PERLEVEL,
	STAT_ITEM_FIND_GOLD_PERLEVEL,
	STAT_ITEM_FIND_MAGIC_PERLEVEL,
	STAT_ITEM_REGENSTAMINA_PERLEVEL,
	STAT_ITEM_STAMINA_PERLEVEL,
	STAT_ITEM_DAMAGE_DEMON_PERLEVEL,
	STAT_ITEM_DAMAGE_UNDEAD_PERLEVEL,
	STAT_ITEM_TOHIT_DEMON_PERLEVEL,
	STAT_ITEM_TOHIT_UNDEAD_PERLEVEL,
	STAT_ITEM_CRUSHINGBLOW_PERLEVEL,
	STAT_ITEM_OPENWOUNDS_PERLEVEL,
	STAT_ITEM_KICK_DAMAGE_PERLEVEL,
	STAT_ITEM_DEADLYSTRIKE_PERLEVEL,
	STAT_ITEM_FIND_GEMS_PERLEVEL,
	STAT_ITEM_REPLENISH_DURABILITY,
	STAT_ITEM_REPLENISH_QUANTITY,
	STAT_ITEM_EXTRA_STACK,
	STAT_ITEM_FIND_ITEM,
	STAT_ITEM_SLASH_DAMAGE,
	STAT_ITEM_SLASH_DAMAGE_PERCENT,
	STAT_ITEM_CRUSH_DAMAGE,
	STAT_ITEM_CRUSH_DAMAGE_PERCENT,
	STAT_ITEM_THRUST_DAMAGE,
	STAT_ITEM_THRUST_DAMAGE_PERCENT,
	STAT_ITEM_ABSORB_SLASH,
	STAT_ITEM_ABSORB_CRUSH,
	STAT_ITEM_ABSORB_THRUST,
	STAT_ITEM_ABSORB_SLASH_PERCENT,
	STAT_ITEM_ABSORB_CRUSH_PERCENT,
	STAT_ITEM_ABSORB_THRUST_PERCENT,
	STAT_ITEM_ARMOR_BYTIME,
	STAT_ITEM_ARMORPERCENT_BYTIME,
	STAT_ITEM_HP_BYTIME,
	STAT_ITEM_MANA_BYTIME,
	STAT_ITEM_MAXDAMAGE_BYTIME,
	STAT_ITEM_MAXDAMAGE_PERCENT_BYTIME,
	STAT_ITEM_STRENGTH_BYTIME,
	STAT_ITEM_DEXTERITY_BYTIME,
	STAT_ITEM_ENERGY_BYTIME,
	STAT_ITEM_VITALITY_BYTIME,
	STAT_ITEM_TOHIT_BYTIME,
	STAT_ITEM_TOHITPERCENT_BYTIME,
	STAT_ITEM_COLD_DAMAGEMAX_BYTIME,
	STAT_ITEM_FIRE_DAMAGEMAX_BYTIME,
	STAT_ITEM_LTNG_DAMAGEMAX_BYTIME,
	STAT_ITEM_POIS_DAMAGEMAX_BYTIME,
	STAT_ITEM_RESIST_COLD_BYTIME,
	STAT_ITEM_RESIST_FIRE_BYTIME,
	STAT_ITEM_RESIST_LTNG_BYTIME,
	STAT_ITEM_RESIST_POIS_BYTIME,
	STAT_ITEM_ABSORB_COLD_BYTIME,
	STAT_ITEM_ABSORB_FIRE_BYTIME,
	STAT_ITEM_ABSORB_LTNG_BYTIME,
	STAT_ITEM_ABSORB_POIS_BYTIME,
	STAT_ITEM_FIND_GOLD_BYTIME,
	STAT_ITEM_FIND_MAGIC_BYTIME,
	STAT_ITEM_REGENSTAMINA_BYTIME,
	STAT_ITEM_STAMINA_BYTIME,
	STAT_ITEM_DAMAGE_DEMON_BYTIME,
	STAT_ITEM_DAMAGE_UNDEAD_BYTIME,
	STAT_ITEM_TOHIT_DEMON_BYTIME,
	STAT_ITEM_TOHIT_UNDEAD_BYTIME,
	STAT_ITEM_CRUSHINGBLOW_BYTIME,
	STAT_ITEM_OPENWOUNDS_BYTIME,
	STAT_ITEM_KICK_DAMAGE_BYTIME,
	STAT_ITEM_DEADLYSTRIKE_BYTIME,
	STAT_ITEM_FIND_GEMS_BYTIME,
	STAT_ITEM_PIERCE_COLD,
	STAT_ITEM_PIERCE_FIRE,
	STAT_ITEM_PIERCE_LTNG,
	STAT_ITEM_PIERCE_POIS,
	STAT_ITEM_DAMAGE_VS_MONSTER,
	STAT_ITEM_DAMAGE_PERCENT_VS_MONSTER,
	STAT_ITEM_TOHIT_VS_MONSTER,
	STAT_ITEM_TOHIT_PERCENT_VS_MONSTER,
	STAT_ITEM_AC_VS_MONSTER,
	STAT_ITEM_AC_PERCENT_VS_MONSTER,
	STAT_FIRELENGTH,
	STAT_BURNINGMIN,
	STAT_BURNINGMAX,
	STAT_PROGRESSIVE_DAMAGE,
	STAT_PROGRESSIVE_STEAL,
	STAT_PROGRESSIVE_OTHER,
	STAT_PROGRESSIVE_FIRE,
	STAT_PROGRESSIVE_COLD,
	STAT_PROGRESSIVE_LIGHTNING,
	STAT_ITEM_EXTRA_CHARGES,
	STAT_PROGRESSIVE_TOHIT,
	STAT_POISON_COUNT,
	STAT_DAMAGE_FRAMERATE,
	STAT_PIERCE_IDX,
	STAT_PASSIVE_FIRE_MASTERY,
	STAT_PASSIVE_LTNG_MASTERY,
	STAT_PASSIVE_COLD_MASTERY,
	STAT_PASSIVE_POIS_MASTERY,
	STAT_PASSIVE_FIRE_PIERCE,
	STAT_PASSIVE_LTNG_PIERCE,
	STAT_PASSIVE_COLD_PIERCE,
	STAT_PASSIVE_POIS_PIERCE,
	STAT_PASSIVE_CRITICAL_STRIKE,
	STAT_PASSIVE_DODGE,
	STAT_PASSIVE_AVOID,
	STAT_PASSIVE_EVADE,
	STAT_PASSIVE_WARMTH,
	STAT_PASSIVE_MASTERY_MELEE_TH,
	STAT_PASSIVE_MASTERY_MELEE_DMG,
	STAT_PASSIVE_MASTERY_MELEE_CRIT,
	STAT_PASSIVE_MASTERY_THROW_TH,
	STAT_PASSIVE_MASTERY_THROW_DMG,
	STAT_PASSIVE_MASTERY_THROW_CRIT,
	STAT_PASSIVE_WEAPONBLOCK,
	STAT_PASSIVE_SUMMON_RESIST,
	STAT_MODIFIERLIST_SKILL,
	STAT_MODIFIERLIST_LEVEL,
	STAT_LAST_SENT_HP_PCT,
	STAT_SOURCE_UNIT_TYPE,
	STAT_SOURCE_UNIT_ID,
	STAT_SHORTPARAM1,
	STAT_QUESTITEMDIFFICULTY,
	STAT_PASSIVE_MAG_MASTERY,
	STAT_PASSIVE_MAG_PIERCE,
};

enum D2C_PropertyModes
{
	PROPMODE_AFFIX,
	PROPMODE_GRADE,
	PROPMODE_GEM,
	PROPMODE_UNIQUE,
	PROPMODE_SET,
	PROPMODE_RUNE,
	PROPMODE_RUNEWORD,
	PROPMODE_UNUSED
};

enum D2C_PropertySets
{
	PROPSET_WEAPON,
	PROPSET_HELM,
	PROPSET_SHIELD,
};

enum D2C_StatlistFlags
{
	LISTFLAG_BASIC = 0x00000001,
	LISTFLAG_LENGTH = 0x0000002,
	LISTFLAG_TEMP = 0x00000004,
	LISTFLAG_BUFF = 0x00000008,
	LISTFLAG_CURSE = 0x00000020,
	LISTFLAG_MAGICSTATS = 0x00000040,
	LISTFLAG_CONVERT = 0x00000800,
	LISTFLAG_LISTEX = 0x80000000
};
#endif // CONSTANTS_STATS

#ifndef CONSTANTS_STATES //Pseudo-Macro to group all constants
enum D2C_StateTransformTypes
{
	TRANSFORMTYPE_PLAYER = 1,
	TRANSFORMTYPE_MONSTER = 2,
};

enum D2C_States
{
	STATE_NONE = 0,
	STATE_FREEZE,
	STATE_POISON,
	STATE_RESISTFIRE,
	STATE_RESISTCOLD,
	STATE_RESISTLIGHT,
	STATE_RESISTMAGIC,
	STATE_PLAYERBODY,
	STATE_RESISTALL,
	STATE_AMPLIFYDAMAGE,
	STATE_FROZENARMOR,
	STATE_COLD,
	STATE_INFERNO,
	STATE_BLAZE,
	STATE_BONEARMOR,
	STATE_CONCENTRATE,
	STATE_ENCHANT,
	STATE_INNERSIGHT,
	STATE_SKILL_MOVE,
	STATE_WEAKEN,
	STATE_CHILLINGARMOR,
	STATE_STUNNED,
	STATE_SPIDERLAY,
	STATE_DIMVISION,
	STATE_SLOWED,
	STATE_FETISHAURA,
	STATE_SHOUT,
	STATE_TAUNT,
	STATE_CONVICTION,
	STATE_CONVICTED,
	STATE_ENERGYSHIELD,
	STATE_VENOMCLAWS,
	STATE_BATTLEORDERS,
	STATE_MIGHT,
	STATE_PRAYER,
	STATE_HOLYFIRE,
	STATE_THORNS,
	STATE_DEFIANCE,
	STATE_THUNDERSTORM,
	STATE_LIGHTNINGBOLT,
	STATE_BLESSEDAIM,
	STATE_STAMINA,
	STATE_CONCENTRATION,
	STATE_HOLYWIND,
	STATE_HOLYWINDCOLD,
	STATE_CLEANSING,
	STATE_HOLYSHOCK,
	STATE_SANCTUARY,
	STATE_MEDITATION,
	STATE_FANATICISM,
	STATE_REDEMPTION,
	STATE_BATTLECOMMAND,
	STATE_PREVENTHEAL,
	STATE_CONVERSION,
	STATE_UNINTERRUPTABLE,
	STATE_IRONMAIDEN,
	STATE_TERROR,
	STATE_ATTRACT,
	STATE_LIFETAP,
	STATE_CONFUSE,
	STATE_DECREPIFY,
	STATE_LOWERRESIST,
	STATE_OPENWOUNDS,
	STATE_DOPPLEZON,
	STATE_CRITICALSTRIKE,
	STATE_DODGE,
	STATE_AVOID,
	STATE_PENETRATE,
	STATE_EVADE,
	STATE_PIERCE,
	STATE_WARMTH,
	STATE_FIREMASTERY,
	STATE_LIGHTNINGMASTERY,
	STATE_COLDMASTERY,
	STATE_SWORDMASTERY,
	STATE_AXEMASTERY,
	STATE_MACEMASTERY,
	STATE_POLEARMMASTERY,
	STATE_THROWINGMASTERY,
	STATE_SPEARMASTERY,
	STATE_INCREASEDSTAMINA,
	STATE_IRONSKIN,
	STATE_INCREASEDSPEED,
	STATE_NATURALRESISTANCE,
	STATE_FINGERMAGECURSE,
	STATE_NOMANAREGEN,
	STATE_JUSTHIT,
	STATE_SLOWMISSILES,
	STATE_SHIVERARMOR,
	STATE_BATTLECRY,
	STATE_BLUE,
	STATE_RED,
	STATE_DEATH_DELAY,
	STATE_VALKYRIE,
	STATE_FRENZY,
	STATE_BERSERK,
	STATE_REVIVE,
	STATE_ITEMFULLSET,
	STATE_SOURCEUNIT,
	STATE_REDEEMED,
	STATE_HEALTHPOT,
	STATE_HOLYSHIELD,
	STATE_JUST_PORTALED,
	STATE_MONFRENZY,
	STATE_CORPSE_NODRAW,
	STATE_ALIGNMENT,
	STATE_MANAPOT,
	STATE_SHATTER,
	STATE_SYNC_WARPED,
	STATE_CONVERSION_SAVE,
	STATE_PREGNANT,
	STATE_111,
	STATE_RABIES,
	STATE_DEFENSE_CURSE,
	STATE_BLOOD_MANA,
	STATE_BURNING,
	STATE_DRAGONFLIGHT,
	STATE_MAUL,
	STATE_CORPSE_NOSELECT,
	STATE_SHADOWWARRIOR,
	STATE_FERALRAGE,
	STATE_SKILLDELAY,
	STATE_PROGRESSIVE_DAMAGE,
	STATE_PROGRESSIVE_STEAL,
	STATE_PROGRESSIVE_OTHER,
	STATE_PROGRESSIVE_FIRE,
	STATE_PROGRESSIVE_COLD,
	STATE_PROGRESSIVE_LIGHTNING,
	STATE_SHRINE_ARMOR,
	STATE_SHRINE_COMBAT,
	STATE_SHRINE_RESIST_LIGHTNING,
	STATE_SHRINE_RESIST_FIRE,
	STATE_SHRINE_RESIST_COLD,
	STATE_SHRINE_RESIST_POISON,
	STATE_SHRINE_SKILL,
	STATE_SHRINE_MANA_REGEN,
	STATE_SHRINE_STAMINA,
	STATE_SHRINE_EXPERIENCE,
	STATE_FENRIS_RAGE,
	STATE_WOLF,
	STATE_BEAR,
	STATE_BLOODLUST,
	STATE_CHANGECLASS,
	STATE_ATTACHED,
	STATE_HURRICANE,
	STATE_ARMAGEDDON,
	STATE_INVIS,
	STATE_BARBS,
	STATE_WOLVERINE,
	STATE_OAKSAGE,
	STATE_VINE_BEAST,
	STATE_CYCLONEARMOR,
	STATE_CLAWMASTERY,
	STATE_CLOAK_OF_SHADOWS,
	STATE_RECYCLED,
	STATE_WEAPONBLOCK,
	STATE_CLOAKED,
	STATE_QUICKNESS,
	STATE_BLADESHIELD,
	STATE_FADE,
	STATE_SUMMONRESIST,
	STATE_OAKSAGECONTROL,
	STATE_WOLVERINECONTROL,
	STATE_BARBSCONTROL,
	STATE_DEBUGCONTROL,
	STATE_ITEMSET1,
	STATE_ITEMSET2,
	STATE_ITEMSET3,
	STATE_ITEMSET4,
	STATE_ITEMSET5,
	STATE_ITEMSET6,
	STATE_RUNEWORD,
	STATE_RESTINPEACE,
	STATE_CORPSEEXP,
	STATE_WHIRLWIND,
	STATE_FULLSETGENERIC,
	STATE_MONSTERSET,
	STATE_DELERIUM,
	STATE_ANTIDOTE,
	STATE_THAWING,
	STATE_STAMINAPOT,
	STATE_PASSIVE_RESISTFIRE,
	STATE_PASSIVE_RESISTCOLD,
	STATE_PASSIVE_RESISTLTNG,
	STATE_UBERMINION,
};
#endif // CONSTANTS_STATES

#ifndef CONSTANTS_UNITS //Pseudo-Macro to group all constants
enum D2C_UnitTypes
{
	UNIT_PLAYER,
	UNIT_MONSTER,
	UNIT_OBJECT,
	UNIT_MISSILE,
	UNIT_ITEM,
	UNIT_TILE,
};

enum D2C_UnitFlags
{
	UNITFLAG_DOUPDATE = 0x00000001,				//tells to update the unit
	UNITFLAG_TARGETABLE = 0x00000002,			//whenever the unit can be selected or not
	UNITFLAG_CANBEATTACKED = 0x00000004,		//whenever the unit can be attacked
	UNITFLAG_ISVALIDTARGET = 0x00000008,		//used to check if unit is a valid target
	UNITFLAG_INITSEEDSET = 0x00000010,			//tells whenever the unit seed has been initialized
	UNITFLAG_DRAWSHADOW = 0x00000020,			//tells whenver to draw a shadow or not (client only)
	UNITFLAG_SKSRVDOFUNC = 0x00000040,			//set when skill srvdofunc is executed
	UNITFLAG_OBJPREOPERATE = 0x00000080,		//unknown, used by objects with pre-operate disabled
	UNITFLAG_HASTXTMSG = 0x00000100,			//whenever this unit has a text message attached to it
	UNITFLAG_ISMERC = 0x00000200,				//is mercenary unit
	UNITFLAG_HASEVENTSOUND = 0x00000400,		//does this unit have an event-sound attached to it (server)
	UNITFLAG_SUMMONER = 0x00000800,				//set for the summoner only
	UNITFLAG_SENDREFRESHMSG = 0x00001000,		//used by items to send a refresh message when it drops on ground
	UNITFLAG_ISLINKREFRESHMSG = 0x00002000,		//tells whenever this unit is linked to an update message chain
	UNITFLAG_SQGFXCHANGE = 0x00004000,			//tells whenever to load new anim for skill SQ
	UNITFLAG_UPGRLIFENHITCLASS = 0x00008000,	//updates life% and hitclass on client
	UNITFLAG_ISDEAD = 0x00010000,				//unit is dead
	UNITFLAG_NOTC = 0x00020000,					//disables treasureclass drops
	UNITFLAG_MONMODEISCHANGING = 0x00080000,	//set when monmode changes
	UNITFLAG_PREDRAW = 0x00100000,				//pre-draw this unit (like floor tiles, client only)
	UNITFLAG_ISASYNC = 0x00200000,				//is async unit (critters)
	UNITFLAG_ISCLIENTUNIT = 0x00400000,			//is client unit
	UNITFLAG_ISINIT = 0x01000000,				//set when unit has been initialized
	UNITFLAG_ISRESURRECT = 0x02000000,			//set for resurrected units and items on floor
	UNITFLAG_NOXP = 0x04000000,					//no xp gain from killing this unit
	UNITFLAG_AUTOMAP = 0x10000000,				//automap stuff
	UNITFLAG_AUTOMAP2 = 0x20000000,				//automap stuff
	UNITFLAG_PETIGNORE = 0x40000000,			//ignored by pets
	UNITFLAG_ISREVIVE = 0x80000000				//is revived monster
};

enum D2C_UnitFlagsEx
{
	UNITFLAGEX_HASINV = 0x00000001,				//unit has inventory attached to it
	UNITFLAGEX_UPDATEINV = 0x00000002,			//tells to update inventory content
	UNITFLAGEX_ISVENDORITEM = 0x00000004,		//set for vendor shop items
	UNITFLAGEX_ISSHAPESHIFTED = 0x00000008,		//unit is shapeshifted
	UNITFLAGEX_ITEMINIT = 0x00000010,			//set for items, related to init
	UNITFLAGEX_ISINLOS = 0x00000080,			//unit is in client's line of sight
	UNITFLAGEX_HASBEENDELETED = 0x00000100,		//unit has been deleted but not free'd yet
	UNITFLAGEX_STOREOWNERINFO = 0x00000400,		//unit stores info about owner
	UNITFLAGEX_ISCORPSE = 0x00001000,			//unit is a corpse (use UNITFLAG_ISDEAD instead)
	UNITFLAGEX_TELEPORTED = 0x00010000,			//unit has been teleported, needs resync
	UNITFLAGEX_STORELASTATTACKER = 0x00020000,	//unit stores info about last attacker
	UNITFLAGEX_NODRAW = 0x00040000,				//don't draw this unit
	UNITFLAGEX_ISEXPANSION = 0x02000000,		//is expansion unit
	UNITFLAGEX_SERVERUNIT = 0x04000000			//is server-side unit
};

////////////////////////////
// PLAYER UNIT CONSTANTS ///
////////////////////////////

enum D2C_PlayerModes
{
	PLRMODE_DEATH,		// DT
	PLRMODE_NEUTRAL,	// NU
	PLRMODE_WALK,		// WL
	PLRMODE_RUN,		// RN
	PLRMODE_GETHIT,		// GH
	PLRMODE_TNEUTRAL,	// TN
	PLRMODE_TWALK,		// TW
	PLRMODE_ATTACK1,	// A1
	PLRMODE_ATTACK2,	// A2
	PLRMODE_BLOCK,		// BL
	PLRMODE_CAST,		// SC
	PLRMODE_THROW,		// TH
	PLRMODE_KICK,		// KK
	PLRMODE_SPECIAL1,	// S1
	PLRMODE_SPECIAL2,	// S2
	PLRMODE_SPECIAL3,	// S3
	PLRMODE_SPECIAL4,	// S4
	PLRMODE_DEAD,		// DD
	PLRMODE_SEQUENCE,	// SQ
	PLRMODE_KNOCKBACK	// KB
};

enum D2C_PlayerClasses
{
	PCLASS_AMAZON,
	PCLASS_SORCERESS,
	PCLASS_NECROMANCER,
	PCLASS_PALADIN,
	PCLASS_BARBARIAN,
	PCLASS_DRUID,
	PCLASS_ASSASSIN,
	PCLASS_EVILFORCE,
	PCLASS_INVALID = 7,
	NUMBER_OF_PLAYERCLASSES = 7,
};

enum D2C_ClientStates
{
	CLTSTATE_CONNECTED = 4
};

enum D2C_PlayerFlags
{
	PLRFLAG_NEWBIE = 0x01,
	PLRFLAG_HARDCORE = 0x04,
	PLRFLAG_DEAD = 0x08,
	PLRFLAG_EXPANSION = 0x20,
	PLRFLAG_LADDER = 0x40,
};

enum D2C_RosterInfoFlags
{
	ROSTERINFOFLAG_LOOT = 0x01,
	ROSTERINFOFLAG_IGNORE = 0x02,
	ROSTERINFOFLAG_SQUELCH = 0x04,
	ROSTERINFOFLAG_HOSTILE = 0x08,
};

enum D2C_RosterControlFlags
{
	ROSTERCONTROLFLAG_INVITE = 0,
	ROSTERCONTROLFLAG_INPARTY = 1,
	ROSTERCONTROLFLAG_ACCEPT = 2,
	ROSTERCONTROLFLAG_LEAVE = 3,
	ROSTERCONTROLFLAG_CANCEL = 4,
};

enum D2C_RosterButtonTypes
{
	ROSTERBUTTONTYPE_HOSTILE = 1,
	ROSTERBUTTONTYPE_LOOT = 2,
	ROSTERBUTTONTYPE_IGNORE = 3,
	ROSTERBUTTONTYPE_SQUELCH = 4,
};

enum D2SaveCharType
{
	CHARTYPE_HARDCORE = 0x24,
	CHARTYPE_SOFTCORE = 0x28
};
#endif // CONSTANTS_UNITS

#ifndef CONSTANTS_MISSILES //Pseudo-Macro to group all constants
enum D2C_MissilesHcIdx
{
	MISSILE_ARROW = 0,
	MISSILE_JAVELIN,
	MISSILE_BIGHEAD1,
	MISSILE_BIGHEAD2,
	MISSILE_BIGHEAD3,
	MISSILE_BIGHEAD4,
	MISSILE_BIGHEAD5,
	MISSILE_SPIKE1,
	MISSILE_SPIKE2,
	MISSILE_SPIKE3,
	MISSILE_SPIKE4,
	MISSILE_SPIKE5,
	MISSILE_FIREARROW,
	MISSILE_CR_ARROW1,
	MISSILE_CR_ARROW2,
	MISSILE_CR_ARROW3,
	MISSILE_CR_ARROW4,
	MISSILE_CR_ARROW5,
	MISSILE_BLOOD1,
	MISSILE_BLOOD2,
	MISSILE_BIGBLOOD1,
	MISSILE_BIGBLOOD2,
	MISSILE_SHAFIRE1,
	MISSILE_SHAFIRE2,
	MISSILE_SHAFIRE3,
	MISSILE_SHAFIRE4,
	MISSILE_SHAFIRE5,
	MISSILE_MAGICARROW,
	MISSILE_ICEARROW,
	MISSILE_FIREEXPLODE,
	MISSILE_ICEEXPLODE,
	MISSILE_BOLT,
	MISSILE_ANDARIELSPRAY,
	MISSILE_BIGHEADEXP,
	MISSILE_SHAMANEXP,
	MISSILE_THROWAXE,
	MISSILE_THROWKNIFE,
	MISSILE_GLAIVE,
	MISSILE_POISONJAV,
	MISSILE_POISONJAVCLOUD,
	MISSILE_COLDARROW,
	MISSILE_EXPLODINGARROW,
	MISSILE_EXPLODINGARROWEXP,
	MISSILE_PLAGUEJAVELIN,
	MISSILE_OILPOTION,
	MISSILE_EXPLOSIVEPOTION,
	MISSILE_FULMINATINGPOTION,
	MISSILE_RANCIDGASEPOTION,
	MISSILE_CHOKINGGASPOITION,
	MISSILE_STRANGLINGGASPOTION,
	MISSILE_NOTUSED50,
	MISSILE_EXPLOSIVEPOTIONEXP,
	MISSILE_EXPLOSIVEPOTIONDEBRIS1,
	MISSILE_EXPLOSIVEPOTIONDEBRIS2,
	MISSILE_EXPLOSIVEPOTIONDEBRIS3,
	MISSILE_HOLYBOLT,
	MISSILE_CHARGEDBOLT,
	MISSILE_SANCTUARYBOLT,
	MISSILE_FIREBOLT,
	MISSILE_ICEBOLT,
	MISSILE_INFERNOFLAME1,
	MISSILE_INFERNOFLAME2,
	MISSILE_FIREBALL,
	MISSILE_MUMMY1,
	MISSILE_MUMMY2,
	MISSILE_MUMMY3,
	MISSILE_MUMMY4,
	MISSILE_BLAZE,
	MISSILE_FIREWALLMAKER,
	MISSILE_FIREWALL,
	MISSILE_GOOSPIT1,
	MISSILE_GOOSPIT2,
	MISSILE_GOOSPIT3,
	MISSILE_GOOSPIT4,
	MISSILE_GOOSPIT5,
	MISSILE_GOOSPLAT,
	MISSILE_SAND_PILE,
	MISSILE_UNHOLYBOLT1,
	MISSILE_UNHOLYBOLT2,
	MISSILE_UNHOLYBOLT3,
	MISSILE_UNHOLYBOLT4,
	MISSILE_SANCTUARYCENTER,
	MISSILE_FIREEXPLOSION,
	MISSILE_STUCKARROW,
	MISSILE_FOOTPRINT,
	MISSILE_IMMOLATIONARROW,
	MISSILE_GUIDEDARROW,
	MISSILE_FREEZINGARROW,
	MISSILE_FREEZINGARROWEXP1,
	MISSILE_FREEZINGARROWEXP2,
	MISSILE_NOVA,
	MISSILE_ICEBLAST,
	MISSILE_BLESSEDHAMMER,
	MISSILE_CHAINLIGHTNING,
	MISSILE_FISTOFARES,
	MISSILE_CHILLBLOOD,
	MISSILE_GLACIALSPIKE,
	MISSILE_TELEPORT,
	MISSILE_LIGHTNINGBOLT,
	MISSILE_LIGHTNINGHIT,
	MISSILE_METEOR,
	MISSILE_METEORCENTER,
	MISSILE_METEORTAIL,
	MISSILE_METEOREXPLODE,
	MISSILE_FIRESMALL,
	MISSILE_FIREMEDIUM,
	MISSILE_MONBLIZCENTER,
	MISSILE_MONBLIZ1,
	MISSILE_MONBLIZ2,
	MISSILE_MONBLIZ3,
	MISSILE_MONBLIZ4,
	MISSILE_MONBLIZEXPLODE1,
	MISSILE_MONBLIZEXPLODE2,
	MISSILE_MONBLIZEXPLODE3,
	MISSILE_TEETH,
	MISSILE_CORPSEEXPLOSION,
	MISSILE_POISONCORPSEEXPLOSION,
	MISSILE_MONSTERCORPSEEXPLODE,
	MISSILE_POISONNOVA,
	MISSILE_FROSTNOVA,
	MISSILE_ROGUE1,
	MISSILE_ROGUE2,
	MISSILE_ROGUE3,
	MISSILE_BAT_LIGHTNING_BOLT,
	MISSILE_BAT_LIGHTNING_TRAIL,
	MISSILE_SKMAGE1,
	MISSILE_SKMAGE2,
	MISSILE_SKMAGE3,
	MISSILE_SKMAGE4,
	MISSILE_VAMPIREFIREBALL,
	MISSILE_VAMPIREFIREWALLMAKER,
	MISSILE_VAMPIREFIREWALL,
	MISSILE_VAMPIREMETEOR,
	MISSILE_VAMPIREMETEORCENTER,
	MISSILE_VAMPIREMETEOREXP,
	MISSILE_RAVEN1,
	MISSILE_RAVEN2,
	MISSILE_AMPHIBIANGOO1,
	MISSILE_AMPHIBIANGOO2,
	MISSILE_TENTACLEGOO,
	MISSILE_AMPHIBIANEXPLODE,
	MISSILE_POISONPUFF,
	MISSILE_CURSEEFFECTRED,
	MISSILE_SPIDERGOOLAY,
	MISSILE_FETISHINFERNO1,
	MISSILE_FETISHINFERNO2,
	MISSILE_SPIDERGOO,
	MISSILE_CURSECAST,
	MISSILE_HOWL,
	MISSILE_SHOUT,
	MISSILE_DUST,
	MISSILE_REDLIGHTMISSILE,
	MISSILE_GREENLIGHTMISSILE,
	MISSILE_BLUELIGHTMISSILE,
	MISSILE_WHITELIGHTMISSILE,
	MISSILE_CORPSEPOISONCLOUD,
	MISSILE_CHILLBLOODCLOUD,
	MISSILE_CHILLBLOODPUFF,
	MISSILE_BLIZZARDCENTER,
	MISSILE_BLIZZARD1,
	MISSILE_BLIZZARD2,
	MISSILE_BLIZZARD3,
	MISSILE_BLIZZARD4,
	MISSILE_BLIZZARDEXPLODE1,
	MISSILE_BLIZZARDEXPLODE2,
	MISSILE_BLIZZARDEXPLODE3,
	MISSILE_THUNDERSTORM1,
	MISSILE_THUNDERSTORM2,
	MISSILE_THUNDERSTORM3,
	MISSILE_THUNDERSTORM4,
	MISSILE_MONSTERLIGHT,
	MISSILE_POISONBALL,
	MISSILE_DIABLIGHT,
	MISSILE_REDEMPTION,
	MISSILE_REDEMPTIONFAIL,
	MISSILE_HANDOFGOD,
	MISSILE_DIABFIRE,
	MISSILE_FINGERMAGESPIDER,
	MISSILE_ELECTRIC_THROWAXE,
	MISSILE_DIABWALLMAKER,
	MISSILE_DIABWALL,
	MISSILE_CURSEAMPLIFYDAMAGE,
	MISSILE_CURSEDIMVISION,
	MISSILE_CURSEWEAKEN,
	MISSILE_CURSEIRONMAIDEN,
	MISSILE_CURSETERROR,
	MISSILE_CURSEATTRACT,
	MISSILE_CURSEREVERSEVAMPIRE,
	MISSILE_CURSECONFUSE,
	MISSILE_CURSEDECREPIFY,
	MISSILE_CURSELOWERRESIST,
	MISSILE_CURSECENTER,
	MISSILE_BONESPEAR,
	MISSILE_BONESPIRIT,
	MISSILE_COLDUNIQUE,
	MISSILE_LIGHTUNIQUE,
	MISSILE_SKBOWARROW1,
	MISSILE_SKBOWARROW2,
	MISSILE_SKBOWARROW3,
	MISSILE_SKBOWARROW4,
	MISSILE_SKBOWARROW5,
	MISSILE_NOVA1,
	MISSILE_NOVA2,
	MISSILE_ANDYPOISONBOLT,
	MISSILE_TEETHEXPLODE,
	MISSILE_LIGHTNINGJAVELIN,
	MISSILE_LIGHTNINGFURY,
	MISSILE_BONEWALLMAKER,
	MISSILE_NECROMAGE1,
	MISSILE_NECROMAGE2,
	MISSILE_NECROMAGE3,
	MISSILE_NECROMAGE4,
	MISSILE_SPARKLE,
	MISSILE_MULTIPLESHOTARROW,
	MISSILE_MULTIPLESHOTBOLT,
	MISSILE_CHARGEDSTRIKEBOLT,
	MISSILE_BONESPEAREXPLODE,
	MISSILE_POISONEXPLOSIONCLOUD,
	MISSILE_BONECAST,
	MISSILE_BATTLECRY,
	MISSILE_PRIMEPOISONCLOUD,
	MISSILE_PLAGUEJAVCLOUD,
	MISSILE_RANCIDGASCLOUD,
	MISSILE_CHOKINGGASCLOUD,
	MISSILE_STRANGLINGGASCLOUD,
	MISSILE_BUGLIGHTNING,
	MISSILE_PANTHERJAV1,
	MISSILE_PANTHERJAV2,
	MISSILE_PANTHERJAV3,
	MISSILE_PANTHERJAV4,
	MISSILE_IMMOLATIONFIRE,
	MISSILE_FURYLIGHTNING,
	MISSILE_LIGHTNINGSTRIKE,
	MISSILE_FISTOFTHEHEAVENSDELAY,
	MISSILE_FISTOFTHEHEAVENSBOLT,
	MISSILE_WARCRY,
	MISSILE_BATTLECOMMAND,
	MISSILE_BATTLEORDERS,
	MISSILE_PANTHERPOTORANGE,
	MISSILE_PANTHERPOTGREEN,
	MISSILE_METEORFIRE,
	MISSILE_TRAP_SPIKE_RIGHT,
	MISSILE_TRAP_SPIKE_LEFT,
	MISSILE_TRAP_CURSED_SKULL_RIGHT,
	MISSILE_TRAP_CURSED_SKULL_LEFT,
	MISSILE_TRAP_POISON_BALL_RIGHT,
	MISSILE_TRAP_POISON_BALL_LEFT,
	MISSILE_HYDRA,
	MISSILE_BONESPEARTRAIL,
	MISSILE_GRIMWARDSMALLSTART,
	MISSILE_GRIMWARDSMALL,
	MISSILE_GRIMWARDSMALLSTOP,
	MISSILE_GRIMWARDMEDIUMSTART,
	MISSILE_GRIMWARDMEDIUM,
	MISSILE_GRIMWARDMEDIUMSTOP,
	MISSILE_GRIMWARDLARGESTART,
	MISSILE_GRIMWARDLARGE,
	MISSILE_GRIMWARDLARGESTOP,
	MISSILE_ZAKARUMLIGHT,
	MISSILE_GRIMWARDSCARE,
	MISSILE_FROZENORB,
	MISSILE_FROZENORBBOLT,
	MISSILE_FROZENORBNOVA,
	MISSILE_FROZENORBEXPLODE,
	MISSILE_CHILLINGARMORBOLT,
	MISSILE_FIREEXPLOSION2,
	MISSILE_BLOWGUN,
	MISSILE_CHAINLIGHTNING2,
	MISSILE_REVIVESMALL,
	MISSILE_REVIVEMEDIUM,
	MISSILE_REVIVELARGE,
	MISSILE_MONGLACIALSPIKE,
	MISSILE_ICEBREAKSMALL,
	MISSILE_ICEBREAKMEDIUM,
	MISSILE_ICEBREAKLARGE,
	MISSILE_ICEBREAKSMOKE,
	MISSILE_MEPHISTO,
	MISSILE_FIREHEAD,
	MISSILE_WHILRWIND,
	MISSILE_ARCANELIGHTNINGBOLT,
	MISSILE_FROGFIRE,
	MISSILE_FROGCOLD,
	MISSILE_FROGPOIS,
	MISSILE_DESERTFIREBALL,
	MISSILE_BRDEATHCONTROL,
	MISSILE_BRDEATHLIGHTNINGBOLT,
	MISSILE_BRDEATHLIGHTNINGHIT,
	MISSILE_DENOFEVILLIGHT,
	MISSILE_CAIRNSTONES,
	MISSILE_CAIRNSTONESSKY,
	MISSILE_CAIRNSTONESGROUND,
	MISSILE_TOWERMIST,
	MISSILE_TOWERMISTTRAIL,
	MISSILE_BRDEATHSMOKES1,
	MISSILE_BRDEATHSMOKENU,
	MISSILE_BRDEATHSMOKEDT,
	MISSILE_BRDEATHSPIRITS1,
	MISSILE_BRDEATHSPIRITNU,
	MISSILE_BRDEATHSPIRITDT,
	MISSILE_MEPHISTODEATHCONTROL,
	MISSILE_MEPHISTOFIREWALLMAKER,
	MISSILE_MEPHISTOFIREWALL,
	MISSILE_MEPHISTOFLYINGROCKSBIG,
	MISSILE_MEPHISTOEXPLOSIONBIG,
	MISSILE_MEPHISTOFLYINGROCKSSMALL,
	MISSILE_MEPHISTOEXPLOSIONSMALL,
	MISSILE_MEPHISTODONOTDRAW,
	MISSILE_ANDYCONTROL0,
	MISSILE_ANDYFIREWALLMAKER,
	MISSILE_ANDYFIREWALL,
	MISSILE_ANDYCOLUMNFIREBASE,
	MISSILE_ANDYCOLUMNFIRE,
	MISSILE_ANDYFALLINGDEBRIS1,
	MISSILE_ANDYFALLINGDEBRIS2,
	MISSILE_ANDYFALLINGDEBRIS3,
	MISSILE_ANDYDEBRISEXPLOSION1,
	MISSILE_ANDYDEBRISEXPLOSION2,
	MISSILE_ANDYDEBRISEXPLOSION3,
	MISSILE_ANDYDEBRISEXPLOSION4,
	MISSILE_ANDYDEBRISEXPLOSION5,
	MISSILE_WILLOWISPLIGHTNINGBOLT,
	MISSILE_QUEENPOISONCLOUD,
	MISSILE_DIRT_PILE,
	MISSILE_UNDEADMISSILE1,
	MISSILE_UNDEADMISSILE2,
	MISSILE_UNDEADMISSILE3,
	MISSILE_UNDEADMISSILE4,
	MISSILE_BONESPIRITEXPLODE,
	MISSILE_DOPPLEZONEXPLODE,
	MISSILE_MONBONESPIRIT,
	MISSILE_TOWERMISTFADE,
	MISSILE_COUNTESSFIREWALL,
	MISSILE_TOWERCHESTSPAWNER,
	MISSILE_HELLMETEORLAUNCH1,
	MISSILE_HELLMETEORLAUNCH2,
	MISSILE_HELLMETEORUP,
	MISSILE_HELLMETEORDOWN,
	MISSILE_HELLMETEORBALL,
	MISSILE_HORADRICSTAFF,
	MISSILE_HORADRICLIGHTNING,
	MISSILE_HORADRICLIGHT,
	MISSILE_REGURGITATORCORPSE,
	MISSILE_REGURGITATORCORPSEEXPL,
	MISSILE_HIGHPRIESTLIGHTNING,
	MISSILE_ICEBREAKSMALLMELT,
	MISSILE_ICEBREAKLARGEMELT,
	MISSILE_LEAPKNOCKBACK,
	MISSILE_RADAMENTDEATH,
	MISSILE_RADAMENTHANDOFGOD,
	MISSILE_RADAMENTHOLYBOLT,
	MISSILE_TAINTEDSUNCONTROL,
	MISSILE_TAINTEDSUNFLASH,
	MISSILE_TAINTEDSUNBALL,
	MISSILE_QUEENDEATHCENTER,
	MISSILE_QUEENDEATHGLOB,
	MISSILE_QUEENDEATHSPLAT1,
	MISSILE_QUEENDEATHSPLAT2,
	MISSILE_HEALINGBOLT,
	MISSILE_MEPHISTOHOLEDELAY,
	MISSILE_MEPHISTOHOLEBIRTH,
	MISSILE_MEPHISTOHOLENEUTRAL,
	MISSILE_MEPHISTOHOLEDEATH,
	MISSILE_MEPHISTOHOLEDEAD,
	MISSILE_DURIELDEATHCONTROL,
	MISSILE_DURIELDEATHROCK,
	MISSILE_DURIELDEATHDEBRIS,
	MISSILE_DURIELDEATHSMOKE,
	MISSILE_MEPHISTOEXPLOSION,
	MISSILE_ORBMIST,
	MISSILE_ORBMISTTRAIL,
	MISSILE_ORBMISTFADE,
	MISSILE_PILUM,
	MISSILE_DIABLO_APPEARS,
	MISSILE_HFCONTROL,
	MISSILE_HFFRAGMENT1,
	MISSILE_HFFRAGMENT2,
	MISSILE_HFFRAGMENT3,
	MISSILE_HFSPIRIT1,
	MISSILE_HFRESERVED3,
	MISSILE_IZUAL_CONTROL,
	MISSILE_IZUAL_MIST_LOOP,
	MISSILE_IZUAL_MIST_FADE,
	MISSILE_IZUAL_LIGHTNING,
	MISSILE_IZUAL_LIGHTNING_TRAIL,
	MISSILE_CAIRN_STONES_BOLT,
	MISSILE_BOMB_IN_AIR,
	MISSILE_BOMB_ON_GROUND,
	MISSILE_BOMB_EXPLOSION,
	MISSILE_SHOCK_FIELD_IN_AIR,
	MISSILE_SHOCK_FIELD_ON_GROUND,
	MISSILE_THROWINGSTAR,
	MISSILE_ACIDSPRAY,
	MISSILE_BLADE_CREEPER,
	MISSILE_DISTRACTION,
	MISSILE_DISTRACTION_FOG,
	MISSILE_DISTRACTION_PUFF,
	MISSILE_DISTRACTION_START,
	MISSILE_DISTRACTION_END,
	MISSILE_IMPINFERNOFLAME1,
	MISSILE_IMPINFERNOFLAME2,
	MISSILE_BAALLIGHTNINGBOLT,
	MISSILE_BAALLIGHTNINGTRAIL,
	MISSILE_BAALLIGHTNINGBOLT2,
	MISSILE_BAALLIGHTNINGTRAIL2,
	MISSILE_IMPFIREBALL,
	MISSILE_IMPFIREBALLEXPLODE,
	MISSILE_CATAPULTCHARGEDBALL_ON,
	MISSILE_CATAPULTCHARGEDBALL,
	MISSILE_CATAPULTCHARGEDBALLBOLT,
	MISSILE_IMP_SPAWN_MONSTERS,
	MISSILE_CATAPULT_SPIKE_BALL_ON,
	MISSILE_CATAPULT_SPIKE_BALL,
	MISSILE_CATAPULT_SPIKE_IN_AIR,
	MISSILE_CATAPULT_SPIKE_ON_GROUND,
	MISSILE_CATAPULT_SPIKE_EXPLOSION,
	MISSILE_CATAPULT_COLD_BALL_ON,
	MISSILE_CATAPULT_COLD_BALL,
	MISSILE_CATAPULT_COLD_EXPLOSION,
	MISSILE_CATAPULT_PLAGUE_BALL_ON,
	MISSILE_CATAPULT_PLAGUE_BALL,
	MISSILE_CATAPULT_PLAGUE_CLOUD,
	MISSILE_CATAPULT_METEOR_BALL_ON,
	MISSILE_CATAPULT_METEOR_BALL,
	MISSILE_CATAPULT_METEOR_FIRE,
	MISSILE_TOWER_DEATH,
	MISSILE_HEALING_VORTEX,
	MISSILE_SUICIDECORPSEEXPLODE,
	MISSILE_SUICIDEFIREEXPLODE,
	MISSILE_SUICIDEICEEXPLODE,
	MISSILE_EXPLODINGJAVALIN,
	MISSILE_EXPLODINGJAVALINEXP,
	MISSILE_LIGHTINGTRAILINGJAVALIN,
	MISSILE_LIGHTJAVALINTRAIL,
	MISSILE_LIGHTJAVALINEXPLOSION,
	MISSILE_ICEJAVALIN,
	MISSILE_ICEJAVALINEXPLODE,
	MISSILE_PLAGUEJAVELIN2,
	MISSILE_PLAGUEJAVLINEXPLODE,
	MISSILE_ADVLIGHTTRAILINGJAV,
	MISSILE_ADVLIGHTTRAILINGJAV2,
	MISSILE_ADVLIGHTJAVEXPLODE,
	MISSILE_SUCFIREBALL,
	MISSILE_SUCFIREBALLEXPLODE,
	MISSILE_SUCFIREBALLTRAIL,
	MISSILE_SUCSHOCKFIELDMISSILE,
	MISSILE_SUCSHOCKFIELDMISSILEEXP,
	MISSILE_SUCSHOCKFIELD,
	MISSILE_HELLFIREMISSILE,
	MISSILE_HELLFIREEXA,
	MISSILE_HELLFIREEXB,
	MISSILE_IMP_CHARGED_BOLT,
	MISSILE_IMP_TELEPORT,
	MISSILE_MOLTENBOULDER,
	MISSILE_MOLTENBOULDEREMERGE,
	MISSILE_MOLTENBOULDEREXPLODE,
	MISSILE_MOLTENBOULDERFIREPATH,
	MISSILE_MOLTENBOULDER_FLYINGROCKS,
	MISSILE_FIRESTORM,
	MISSILE_FIRESTORMMAKER,
	MISSILE_ARCTICBLAST1,
	MISSILE_ARCTICBLAST2,
	MISSILE_ERRUPTION_CENTER,
	MISSILE_ERRUPTION_CRACK_1,
	MISSILE_ERRUPTION_CRACK_2,
	MISSILE_ERRUPTION_SMOKE_1,
	MISSILE_ERRUPTION_SMOKE_2,
	MISSILE_VINE_BEAST_WALK_1,
	MISSILE_VINE_BEAST_WALK_2,
	MISSILE_VINE_BEAST_NEUTRAL,
	MISSILE_VINE_BEAST_ATTACK,
	MISSILE_VINE_BEAST_DEATH,
	MISSILE_VINES,
	MISSILE_VINES_TRAIL,
	MISSILE_VINES_WITHER,
	MISSILE_PLAGUE_VINES,
	MISSILE_PLAGUE_VINES_TRAIL,
	MISSILE_PLAGUE_VINES_WITHER,
	MISSILE_TWISTER,
	MISSILE_TORNADO,
	MISSILE_VOLCANO,
	MISSILE_VOLCANO_OVERLAY_FIRE,
	MISSILE_VOLCANO_DEBRIS_2,
	MISSILE_VOLCANO_EXPLOSION,
	MISSILE_VOLCANO_SMALL_FIRE,
	MISSILE_DRAGONBREATH_MISSILE,
	MISSILE_LUREPROJECTILE,
	MISSILE_LURECENTER,
	MISSILE_LURECLOUD,
	MISSILE_IMPMISS1,
	MISSILE_IMPMISS2,
	MISSILE_IMPMISS3,
	MISSILE_IMPMISS4,
	MISSILE_IMPMISS5,
	MISSILE_FROZENHORROR_ARCTICBLAST1,
	MISSILE_FROZENHORROR_ARCTICBLAST2,
	MISSILE_SENTRYCHARGEDBOLT,
	MISSILE_SENTRYSPIKEINAIR,
	MISSILE_SENTRYSPIKEONGROUND,
	MISSILE_RECYCLER_DELAY,
	MISSILE_RECYCLER_VINE,
	MISSILE_RECYCLER_FADE,
	MISSILE_RECYCLER_EXPLOSION,
	MISSILE_DEATH_MAULER,
	MISSILE_DEATH_MAULER_TRAIL,
	MISSILE_DEATH_MAULER_TRAIL_FADE,
	MISSILE_BLADEFURY1,
	MISSILE_BLADEFRAGMENT1,
	MISSILE_BLADEFURY2,
	MISSILE_BLADEFRAGMENT2,
	MISSILE_BLADEFURY3,
	MISSILE_BLADEFRAGMENT3,
	MISSILE_SHOCKWAVE,
	MISSILE_LIGHTNINGTALONS,
	MISSILE_LIGHTNINGTALONSTRAIL,
	MISSILE_PHOENIXTRAIL,
	MISSILE_RABIESPLAGUE,
	MISSILE_RABIESCONTAGION,
	MISSILE_WAKE_OF_DESTRUCTION_MAKER,
	MISSILE_WAKE_OF_DESTRUCTION,
	MISSILE_DEATHSENTRYEXPLODE,
	MISSILE_TIGERFURY,
	MISSILE_TIGERFURYTRAIL,
	MISSILE_TIGERFURYTRAIL2,
	MISSILE_INFERNO_SENTRY_1,
	MISSILE_INFERNO_SENTRY_2,
	MISSILE_ANCIENT_THROWING_AXE,
	MISSILE_SENTRYLIGHTNINGBOLT,
	MISSILE_SENTRYLIGHTNINGHIT,
	MISSILE_ANYA_CENTER,
	MISSILE_ANYA_ICICLE,
	MISSILE_ANYA_ICEIMPACT,
	MISSILE_ANYA_ICESTEAM,
	MISSILE_ANYA_ICEMAGIC,
	MISSILE_DRAGONTAIL_MISSILE,
	MISSILE_DRAGONFLIGHT,
	MISSILE_DRAGONFLIGHTMAKER,
	MISSILE_PROGRESSIVE_RADIUS_DAMAGE,
	MISSILE_VINE_BEAST_WALK_1_FADE,
	MISSILE_VINE_BEAST_WALK_2_FADE,
	MISSILE_VINE_BEAST_NEUTRAL_FADE,
	MISSILE_VINE_RECYCLER_DELAY,
	MISSILE_ANCIENT_DEATH_CENTER,
	MISSILE_ANCIENT_DEATH_CLOUD,
	MISSILE_LIGHTNING_CHARGE_UP_NOVA,
	MISSILE_CHAINLIGHTNINGCHARGE_UP,
	MISSILE_PAIN_WORM_APPEAR,
	MISSILE_BAAL_TAUNT_CONTROL,
	MISSILE_BAAL_TAUNT_LIGHTNING,
	MISSILE_BAAL_TAUNT_LIGHTNING_TRAIL,
	MISSILE_BAAL_TAUNT_POISON,
	MISSILE_BAAL_SPAWN_MONSTERS,
	MISSILE_MINDBLAST_HIT,
	MISSILE_BLADE_SHIELD_MISSILE,
	MISSILE_BLADE_SHIELD_ATTACHMENT,
	MISSILE_BAAL_INFERNO,
	MISSILE_BAAL_NOVA,
	MISSILE_FISTSOFFIREEXPLODE,
	MISSILE_FISTSOFFIREFIREWALL,
	MISSILE_CLAWSOFTHUNDERBOLT,
	MISSILE_CLAWSOFTHUNDERNOVA,
	MISSILE_BLADESOFICEEXPLODE,
	MISSILE_BLADESOFICECUBES,
	MISSILE_BLADESOFICECUBESMELT,
	MISSILE_ROYALSTRIKEMETEOR,
	MISSILE_ROYALSTRIKEMETEORCENTER,
	MISSILE_ROYALSTRIKEMETEORTAIL,
	MISSILE_ROYALSTRIKEMETEOREXPLODE,
	MISSILE_ROYALSTRIKEMETEORFIRE,
	MISSILE_ROYALSTRIKECHAINLIGHTNING,
	MISSILE_ROYALSTRIKECHAOSICE,
	MISSILE_WORLD_STONE_CHIP_1,
	MISSILE_WORLD_STONE_CHIP_2,
	MISSILE_WORLD_STONE_CHIP_3,
	MISSILE_WORLD_STONE_CHIP_4,
	MISSILE_HIGHPRIESTLIGHTNING2,
	MISSILE_INFERNOFLAME3,
	MISSILE_MINDBLAST_CENTER,
	MISSILE_ARMAGEDDONCONTROL,
	MISSILE_ARMAGEDDONROCK,
	MISSILE_ARMAGEDDONTAIL,
	MISSILE_ARMAGEDDONEXPLOSION,
	MISSILE_HURRICANESWOOSH,
	MISSILE_HURRICANECART,
	MISSILE_HURRICANEROCK,
	MISSILE_HURRICANESACK,
	MISSILE_HURRICANETREE,
	MISSILE_HURRICANEVASE,
	MISSILE_BAALCORPSEEXPLODEDELAY,
	MISSILE_BAALCORPSEEXPLODEEXPL,
	MISSILE_BAAL_COLD_MAKER,
	MISSILE_BAAL_COLD_TRAIL,
	MISSILE_BAAL_SPAWN_MONSTERS_EXP,
	MISSILE_IMPMISS21,
	MISSILE_IMPMISS22,
	MISSILE_IMPMISS23,
	MISSILE_IMPMISS24,
	MISSILE_IMPMISS25,
	MISSILE_ANYASTEAM1,
	MISSILE_ANYASTEAM2,
	MISSILE_ANCIENTSGUIDE,
	MISSILE_ANCIENTSMARKER,
	MISSILE_ANCIENTSCONTROL,
	MISSILE_OVERSEERCONTROL,
	MISSILE_NIHLITHAK1,
	MISSILE_NIHLITHAK2,
	MISSILE_NIHLITHAK3,
	MISSILE_NEHLITHAKCONTROL,
	MISSILE_NEHLITHAKSWOOSH,
	MISSILE_NEHLITHAKDEBRIS1,
	MISSILE_NEHLITHAKDEBRIS2,
	MISSILE_NEHLITHAKDEBRIS3,
	MISSILE_NEHLITHAKDEBRIS4,
	MISSILE_NEHLITHAKGLOW,
	MISSILE_BAALTELEPORT,
	MISSILE_BAALCLONEDEATH,
	MISSILE_ANYASTEAMVENT,
	MISSILE_ANYASTEAM,
	MISSILE_NEHLITHAKHOLE,
	MISSILE_NEHLITHAKHOLELIGHT,
	MISSILE_VOLCANOFIRETRAIL,
	MISSILE_NEHLITHAKGLOW2,
	MISSILE_NEHLITHAKBONECHIPS,
	MISSILE_BAALCORPSEEXPLODEFADE,
	MISSILE_ARMAGEDDONFIRE,
	MISSILE_ICESPARKLE,
	MISSILE_BAALFX_CONTROL,
	MISSILE_BAALFX_SPIRIT_1,
	MISSILE_BAALFX_SPIRIT_2,
	MISSILE_BAALFX_SPIRIT_3,
	MISSILE_BAALFX_SPIRIT_4,
	MISSILE_BAALFX_SPIRIT_5,
	MISSILE_BAALFX_BAAL_HEAD_APPEAR,
	MISSILE_BAALFX_BAAL_HEAD_1,
	MISSILE_BAALFX_BAAL_HEAD_2,
	MISSILE_BAALFX_BAAL_HEAD_3,
	MISSILE_BAALFX_TYREAL_DEBRIS_1,
	MISSILE_BAALFX_TYREAL_DEBRIS_2,
	MISSILE_BAALFX_TYREAL_DEBRIS_3,
	MISSILE_BAALFX_TYREAL_DEBRIS_BREAK,
	MISSILE_WORLDSTONE_SHAKE,
	MISSILE_BLESSEDHAMMEREX,
	MISSILE_SENTRYLIGHTNINGBOLT2,
	MISSILE_SENTRYLIGHTNINGHIT2,
	MISSILE_LIGHTNINGTOWERNOVA,
	MISSILE_SKBOWARROW6,
	MISSILE_SKBOWARROW7,
	MISSILE_SKBOWARROW8,
	MISSILE_BIGHEAD6,
	MISSILE_VIPER_POISJAV,
	MISSILE_VIPER_POISJAVCLOUD,
	MISSILE_VIPER_FIRE,
	MISSILE_VIPER_FIRECLOUD,
	MISSILE_VIPER_BONESPEAR,
	MISSILE_COUNTESSFIREWALLMAKER,
	MISSILE_BAAL_TAUNT_LIGHTNING_CONTROL,
	MISSILE_BAAL_TAUNT_POISON_CONTROL,
	MISSILE_EXPLODINGARROWEXP2,
	MISSILE_FREEZINGARROWEXP3,
	MISSILE_PANTHERJAV5,
	MISSILE_SPIKE6,
	MISSILE_CR_ARROW6,
	MISSILE_SKMAGEPOIS,
	MISSILE_SKMAGECOLD,
	MISSILE_SKMAGEFIRE,
	MISSILE_SKMAGELTNG,
	MISSILE_SUCCUBUSMISS,
	MISSILE_WILLOWISPLIGHTNINGBOLT2,
	MISSILE_MUMMYEX,
	MISSILE_GOOSPITEX,
	MISSILE_IMPMISSEX,
	MISSILE_DIABLOGEDDONCONTROL,
	MISSILE_DIABLOGEDDONROCK,
	MISSILE_DIABLOGEDDONTAIL,
	MISSILE_DIABLOGEDDONEXPLOSION,
	MISSILE_DIABLOGEDDONFIRE,
	MISSILE_MEGADEMONINFERNO,
	MISSILE_TRAPFIREBOLT,
	MISSILE_TRAPPOISONJAVCLOUD,
	MISSILE_TRAPNOVA,
	MISSILE_MEPHFROSTNOVA,
	MISSILE_MEPHLIGHT,
	MISSILE_VAMPIREMETEORFIRE,
	MISSILE_STRAFEARROW,
	MISSILE_STRAFEBOLT,
	MISSILE_SIEGE_BEAST_STOMP_MISSILE
};
#endif // CONSTANTS_MISSILES

#ifndef CONSTANTS_DATATABLES //Pseudo-Macro to group all constants
enum D2C_TxtFieldTypes
{
	TXTFIELD_NONE, 
	TXTFIELD_ASCII, 
	TXTFIELD_DWORD, 
	TXTFIELD_WORD, 
	TXTFIELD_BYTE, 
	TXTFIELD_UNKNOWN1, 
	TXTFIELD_UNKNOWN2, 
	TXTFIELD_BYTE2, 
	TXTFIELD_DWORD2, 
	TXTFIELD_RAW, 
	TXTFIELD_ASCIITOCODE, 
	TXTFIELD_UNKNOWN3, 
	TXTFIELD_UNKNOWN4, 
	TXTFIELD_CODETOBYTE, 
	TXTFIELD_UNKNOWN5, 
	TXTFIELD_CODETOWORD, 
	TXTFIELD_UNKNOWN6, 
	TXTFIELD_NAMETOINDEX, 
	TXTFIELD_NAMETOINDEX2, 
	TXTFIELD_NAMETODWORD, 
	TXTFIELD_NAMETOWORD, 
	TXTFIELD_NAMETOWORD2, 
	TXTFIELD_KEYTOWORD, 
	TXTFIELD_CUSTOMLINK, 
	TXTFIELD_UNKNOWN7, 
	TXTFIELD_CALCTODWORD, 
	TXTFIELD_BIT
};

enum D2C_TxtLinkerIndexTypes
{
	TXTLINKER_NONE,
	TXTLINKER_PLAYERCLASS,
	TXTLINKER_BODYLOCS,
	TXTLINKER_STOREPAGE,
	TXTLINKER_ELEMTYPES,
	TXTLINKER_HITCLASS,
	TXTLINKER_MONMODE,
	TXTLINKER_PLRMODE,
	TXTLINKER_SKILLCALC,
	TXTLINKER_MISSCALC,
	TXTLINKER_SKILLSCODE,
	TXTLINKER_EVENTS,
	TXTLINKER_COMPCODE,
	TXTLINKER_MONAI,
	TXTLINKER_ITEMS,
	TXTLINKER_PROPERTIES,
	TXTLINKER_RUNES,
	TXTLINKER_HIREDESC,
	TXTLINKER_STATES,
	TXTLINKER_SOUNDS,
	TXTLINKER_COLORS,
	TXTLINKER_TREASURECLASS,
	TXTLINKER_MONSTATS,
	TXTLINKER_MONSOUNDS,
	TXTLINKER_MONSTATS2,
	TXTLINKER_MONPLACE,
	TXTLINKER_SUPERUNIQUES,
	TXTLINKER_MISSILES,
	TXTLINKER_MONSEQ,
	TXTLINKER_SKILLDESC,
	TXTLINKER_SKILLS,
	TXTLINKER_OVERLAY,
	TXTLINKER_ITEMSTATCOST,
	TXTLINKER_PETTYPE,
	TXTLINKER_ITEMTYPES,
	TXTLINKER_SETS,
	TXTLINKER_SETITEMS,
	TXTLINKER_UNIQUEITEMS,
	TXTLINKER_MONPROP,
	TXTLINKER_MONTYPE,
	TXTLINKER_MONUMOD,
	TXTLINKER_LEVELS,
	TXTLINKER_INVALID
};

enum D2C_ItemsTxtArmorComps
{
	TXTARMORCOMP_RARM,
	TXTARMORCOMP_LARM,
	TXTARMORCOMP_TORSO,
	TXTARMORCOMP_LEGS,
	TXTARMORCOMP_RSPAD,
	TXTARMORCOMP_LSPAD,
};

enum D2InventoryGrids
{
	//INVENTORYGRID_INV,
	//INVENTORYGRID_GRID,
	INVENTORYGRID_RARM,
	INVENTORYGRID_TORSO,
	INVENTORYGRID_LARM,
	INVENTORYGRID_HEAD,
	INVENTORYGRID_NECK,
	INVENTORYGRID_RHAND,
	INVENTORYGRID_LHAND,
	INVENTORYGRID_BELT,
	INVENTORYGRID_FEET,
	INVENTORYGRID_GLOVES,
};

enum D2Vendors
{
	VENDOR_AKARA,
	VENDOR_GHEED,
	VENDOR_CHARSI,
	VENDOR_FARA,
	VENDOR_LYSANDER,
	VENDOR_DROGNAN,
	VENDOR_HRALTI,
	VENDOR_ALKOR,
	VENDOR_ORMUS,
	VENDOR_ELZIX,
	VENDOR_ASHEARA,
	VENDOR_CAIN,
	VENDOR_HALBU,
	VENDOR_JAMELLA,
	VENDOR_MALAH,
	VENDOR_LARZUK,
	VENDOR_DREHYA,
};
#endif // CONSTANTS_DATATABLES

#ifndef CONSTANTS_EVENTS //Pseudo-Macro to group all constants
enum D2C_EventTypes
{
	EVENT_HITBYMISSILE,
	EVENT_DAMAGEDINMELEE,
	EVENT_DAMAGEDBYMISSILE,
	EVENT_ATTACKEDINMELEE,
	EVENT_DOACTIVE,
	EVENT_DOMELEEDMG,
	EVENT_DOMISSILEDMG,
	EVENT_DOMELEEATTACK,
	EVENT_DOMISSILEATTACK,
	EVENT_KILL,
	EVENT_DEATH,
	EVENT_ABSORBDAMAGE,
	EVENT_LEVELUP,
};

enum D2C_UnitEventCallbackTypes
{
	UNITEVENTCALLBACK_MODECHANGE = 0,
	UNITEVENTCALLBACK_ENDANIM = 1,
	UNITEVENTCALLBACK_AITHINK = 2,
	UNITEVENTCALLBACK_STATREGEN = 3,
	UNITEVENTCALLBACK_TRAP = 4,
	UNITEVENTCALLBACK_ACTIVESTATE = 5,
	UNITEVENTCALLBACK_RESET = 5,
	UNITEVENTCALLBACK_FREEHOVER = 6,
	UNITEVENTCALLBACK_MONUMOD = 7,
	UNITEVENTCALLBACK_QUESTFN = 7,
	UNITEVENTCALLBACK_PERIODICSKILLS = 8,
	UNITEVENTCALLBACK_PERIODICSTATS = 9,
	UNITEVENTCALLBACK_AIRESET = 10,
	UNITEVENTCALLBACK_DELAYEDPORTAL = 11,
	UNITEVENTCALLBACK_REMOVESTATE = 12,
	UNITEVENTCALLBACK_UPDATETRADE = 13,
	UNITEVENTCALLBACK_REFRESHVENDOR = 13,
	UNITEVENTCALLBACK_REMOVESKILLCOOLDOWN = 14,
	UNITEVENTCALLBACK_COUNT = 15,
	UNITEVENTCALLBACK_CUSTOM = 16,
};
#endif // CONSTANTS_EVENTS

#ifndef CONSTANTS_UI //Pseudo-Macro to group all constants
enum D2C_UIvars
{
	UI_GAME = 0x00,				//Game
	UI_INVENTORY = 0x01,		//Player Inventory
	UI_STATSCREEN = 0x02,		//Player Stat Screen
	UI_MINISKILL = 0x03,		//Skill Selection
	UI_SKILLTREE = 0x04,		//Player Skill Tree
	UI_CHATBOX = 0x05,			//Chat Box
	UI_NEWSTATS = 0x06,			//Red NewStats Button
	UI_NEWSKILLS = 0x07,		//Red NewSkills Button
	UI_NPCMENU = 0x08,			//NPC options menu
	UI_ESCMENU = 0x09,			//Esc Menu
	UI_AUTOMAP = 0x0A,			//Automap
	UI_CONFIG = 0x0B,			//Key Configuration Menu
	UI_NPCSHOP = 0x0C,			//NPC Trade
	UI_HOLDALT = 0x0D,			//Alt Items Highlight
	UI_ANVIL = 0x0E,			//Anvil
	UI_QUESTSCREEN = 0x0F,		//Quest Screen
	UI_INISCROLL = 0x10,		//Inifuss Tree Scroll
	UI_QUESTLOG = 0x11,			//Quest Log Red Button
	UI_UNKNOWN18 = 0x12,
	UI_HIRICONS = 0x13,
	UI_WAYPOINT = 0x14,			//Waypoint Screen
	UI_MINIPANEL = 0x15,		//CtrlPnl7 Mini Popop Menu
	UI_PARTYSCREEN = 0x16,		//Multiplayer Party Screen			
	UI_MPTRADE = 0x17,			//Multiplayer Trade
	UI_MSGLOG = 0x18,			//Messages Log
	UI_STASH = 0x19,			//Player Stash
	UI_CUBE = 0x1A,				//Horadric Cube
	UI_STEEGSTONE = 0x1B,		//Guild Steeg Stone
	UI_GUILDVAULT = 0x1C,		//Guild Vault
	UI_UNKNOWN29 = 0x1D,
	UI_UNKNOWN30 = 0x1E,
	UI_BELTROWS = 0x1F,			//Belt Rows Popup
	UI_UNKNOWN32 = 0x20,
	UI_HELPSCREEN = 0x21,		//Help Screen
	UI_HELPBUTTON = 0x22,		//Help Button
	UI_HIREICONS = 0x23,		//Party Icons
	UI_MERCINV = 0x24,			//Mercenary Inventory
	UI_RECIPESCROLL = 0x25		//Unused Recipe Scroll
};

enum D2C_UiStates
{
	UI_TURNON = 0,
	UI_TURNOFF = 1,
	UI_TOGGLE = 2,
};

enum D2C_GlobalUiStates
{
	UISTATE_NONE,
	UISTATE_RIGHT,
	UISTATE_LEFT,
	UISTATE_BOTH,
};

enum D2C_DrawModes
{
	DRAWMODE_TRANS25,
	DRAWMODE_TRANS50,
	DRAWMODE_TRANS75,
	DRAWMODE_MODULATE,
	DRAWMODE_BURN,
	DRAWMODE_NORMAL,
	DRAWMODE_TRANSHIGHLIGHT,
	DRAWMODE_HIGHLIGHT
};

enum D2C_AutomapCells
{
	MAPIMGCELL_REDCROSS = 221,				//Red Cross
	MAPIMGCELL_HAMMER = 302,				//Hammer
	MAPIMGCELL_CAINCAGE = 303,				//Cain Tristram Cage
	MAPIMGCELL_MEPHORB = 305,				//Travincal Compelling Orb
	MAPIMGCELL_DIABSEAL = 306,				//Chaos Sanctuary Seals
	MAPIMGCELL_WAYPOINT = 307,				//Waypoint
	MAPIMGCELL_WELL = 309,					//Well
	MAPIMGCELL_SHRINE = 310,				//Shrine
	MAPIMGCELL_FALLCAMPFLAG = 312,			//Fallen Camps Skull Flag
	MAPIMGCELL_INITREE = 313,				//Tree of Inifuss
	MAPIMGCELL_CAINROCK = 314,				//Cairn Stone
	MAPIMGCELL_GIDBINN = 315,				//Gidbinn
	MAPIMGCELL_QHAMMER = 316,				//Horadric Hammer
	MAPIMGCELL_BLUECROSS = 317,				//Blue Cross
	MAPIMGCELL_QCHEST = 318,				//Quest Sparky Chest
	MAPIMGCELL_STASH = 319,					//Your Stash
	MAPIMGCELL_ARCANEPORTAL = 339,			//Arcane Blue Portal
	MAPIMGCELL_ROGUEFIRE = 405,				//Rogue Camp Fire
	MAPIMGCELL_BOOK = 427,					//Book (stony field and Horazon?)
	MAPIMGCELL_PLACEHOLDER = 1176,			//Unknown Placeholder Reveal Code
	MAPIMGCELL_BARRITOWER = 1258			//Barricaded Towers Act 5
};

enum D2C_Fonts
{
	D2FONT_FONT8,					//Font8
	D2FONT_FONT16,					//Font16
	D2FONT_FONT30,					//Font30
	D2FONT_FONT42,					//Font42
	D2FONT_FONTFORMAL10,			//FontFormal10
	D2FONT_FONTFORMAL12,			//FontFormal12
	D2FONT_FONT6,					//Font6
	D2FONT_FONT24,					//Font24
	D2FONT_FONTFORMAL11,			//FontFormal11
	D2FONT_FONTEXOCET10,			//FontExocet10
	D2FONT_FONTRIDICULOUS,			//FontRidiculous
	D2FONT_FONTEXOCET8,				//FontExocet8
	D2FONT_REALLYTHELASTSUCKER,		//ReallyTheLastSucker
	D2FONT_FONTINGAMECHAT			//FontInGameChat
};

enum D2C_OverlayTypes
{
	OVERLAYTYPE_MODECHNG,		//overlay is deleted when unit mode changes
	OVERLAYTYPE_COUNTER,		//param 1 = counter. deletes overlay when counter ends
	OVERLAYTYPE_ONCE,			//overlay is deleted once animation reaches it's end
	OVERLAYTYPE_LOOP,			//loops, durrrrr
	OVERLAYTYPE_LOOPEX,			//dual overlay (param1 + param2), loops
	OVERLAYTYPE_STOP,			//freezes ate last frame. bugged
	OVERLAYTYPE_DELAYED,		//delayed loop, random frame delay
	OVERLAYTYPE_BONEARMOR,		//bone armor hardcode
	OVERLAYTYPE_AURA,			//doesn't replace overlays of this type. param1 = aura state. overlay is deleted when state is unset
	OVERLAYTYPE_AURAEX			//param1 = front overlay, param2 = back overlay, param3 = aura state, set overlay is state is set
};

enum D2C_StringColorCodes
{
	STRCOLOR_WHITE,
	STRCOLOR_RED,
	STRCOLOR_LIGHTGREEN,
	STRCOLOR_BLUE,
	STRCOLOR_DARK_GOLD,
	STRCOLOR_GREY,
	STRCOLOR_BLACK,
	STRCOLOR_TAN,
	STRCOLOR_ORANGE,
	STRCOLOR_YELLOW,
	STRCOLOR_DARKGREEN,
	STRCOLOR_PURPLE,
	STRCOLOR_DARKGREEN2
};

enum D2C_UiButtonModes
{
	BTNMODE_ENABLED,
	BTNMODE_PRESSED,
	BTNMODE_DISABLED,
};

enum D2C_ButtonActions
{
	TRADEBTN_CANCEL = 2, 
	TRADEBTN_PERFORM = 3, 
	TRADEBTN_ACCEPT = 4, 
	TRADEBTN_GREENCHECK = 7, 
	TRADEBTN_SENDGOLD = 8, 
	TRADEBTN_CLOSESTASH = 18, 
	TRADEBTN_STASHWITHDRAW = 19, 
	TRADEBTN_STASHDEPOSIT = 20, 
	TRADEBTN_CLOSECUBE = 23, 
	TRADEBTN_TRANSMUTE = 24
};

enum D2C_D2WinMenuEntryTypes
{
	MENUENTRY_EDITBOX = 0x01,
	MENUENTRY_IMAGE = 0x02,
	MENUENTRY_ANIMATION = 0x03,
	MENUENTRY_TEXT = 0x04,
	MENUENTRY_SCROLLBAR = 0x05,
	MENUENTRY_BUTTON = 0x06,
	MENUENTRY_LIST = 0x07,
	MENUENTRY_TIMER = 0x08,
	MENUENTRY_SMACKER = 0x09,
	MENUENTRY_PROGRESSBAR = 0x0A,
	MENUENTRY_POPUP = 0x0B,
	MENUENTRY_ACCOUNTLIST = 0x0C,
};

enum D2C_MenuImageLoadType
{
	MENUIMGTYPE_DC6,
	MENUIMGTYPE_DCC,
};

enum D2C_VideoRenderModes
{
	VIDEOMODE_NONE,
	VIDEOMODE_GDI,
	VIDEOMODE_RAVE,
	VIDEOMODE_DDRAW,
	VIDEOMODE_GLIDE,
	VIDEOMODE_OPENGL,
	VIDEOMODE_D3D,
};

enum D2C_NpcMenuIdx
{
	NPCMENUIDX_AKARA,
	NPCMENUIDX_ATMA,
	NPCMENUIDX_CAIN1,
	NPCMENUIDX_CHARSI,
	NPCMENUIDX_DROGNAN,
	NPCMENUIDX_ELZIX,
	NPCMENUIDX_GEGLASH,
	NPCMENUIDX_GHEED,
	NPCMENUIDX_GREIZ,
	NPCMENUIDX_JERHYN,
	NPCMENUIDX_LYSANDER,
	NPCMENUIDX_KASHYA,
	NPCMENUIDX_FARA,
	NPCMENUIDX_WARRIV1,
	NPCMENUIDX_WARRIV2,
	NPCMENUIDX_MESHIF1,
	NPCMENUIDX_CAIN2,
	NPCMENUIDX_CAIN5,
	NPCMENUIDX_CAIN3,
	NPCMENUIDX_CAIN4,
	NPCMENUIDX_TYRAEL1,
	NPCMENUIDX_TYRAEL2,
	NPCMENUIDX_HALBU,
	NPCMENUIDX_JAMELLA,
	NPCMENUIDX_ASHEARA,
	NPCMENUIDX_HRATLI,
	NPCMENUIDX_ALKOR,
	NPCMENUIDX_ORMUS,
	NPCMENUIDX_IZUALGHOST,
	NPCMENUIDX_HALBU2,
	NPCMENUIDX_MESHIF2,
	NPCMENUIDX_NATALYA,
	NPCMENUIDX_FLAVIE,
	NPCMENUIDX_KAELAN,
	NPCMENUIDX_HADRIEL,
	NPCMENUIDX_GUARD1,
	NPCMENUIDX_GUARD2,
	NPCMENUIDX_TYRAEL3,
	NPCMENUIDX_CAIN6,
	NPCMENUIDX_LARZUK,
	NPCMENUIDX_MALAH,
	NPCMENUIDX_ANYA,
	NPCMENUIDX_NIHLATHAK,
	NPCMENUIDX_QUALKEHK,
	NPCMENUIDX_FROZENANYA,
	NPCMENUIDX_ANCIENTSTATUE1,
	NPCMENUIDX_ANCIENTSTATUE2,
	NPCMENUIDX_ANCIENTSTATUE3,
};

enum D2C_VendorInventoryModes
{
	VENDORMODE_NONE = 0,
	VENDORMODE_TRADE = 1,
	VENDORMODE_BUY = 2,
	VENDORMODE_SELL = 3,
	VENDORMODE_REPAIR = 4,
	VENDORMODE_VERIFY = 5,
	VENDORMODE_HEAL = 6,
	VENDORMODE_DISPLAYING_RESULTS = 7,
	VENDORMODE_LASTVENDOR = 8,
	VENDORMODE_UNKNOWN = 9,
	VENDORMODE_PLRTRADE_OLD = 10,
	VENDORMODE_PLRTRADE = 11,
	VENDORMODE_STASH = 12,
	VENDORMODE_DEPOSIT = 13,
	VENDORMODE_CUBE = 14,
	VENDORMODE_IMBUE = 19,
};
#endif // CONSTANTS_UI

#ifndef CONSTANTS_STRINGS //Pseudo-Macro to group all constants
enum D2C_LangId
{
	D2LANG_ENG = 0x00,
	D2LANG_ESP = 0x01,
	D2LANG_GER = 0x02,
	D2LANG_FRA = 0x03,
	D2LANG_POR = 0x04,
	D2LANG_ITA = 0x05,
	D2LANG_JPN = 0x06,
	D2LANG_KOR = 0x07,
	D2LANG_POL = 0x0A,
};

enum D2C_StringIndexes
{
	STRING_HIGHQUALITYFORMAT = 1711, 
	STRING_LOWQUALITYFORMAT = 1712, 
	STRING_MAGICFORMAT = 1714, 
	STRING_GEMMEDNORMALNAME = 1715, 
	STRING_BODYPARTSFORMAT = 1716, 
	STRING_RAREFORMAT = 1718, 
	STRING_HIGHQUALITY = 1727, 
	STRING_GEMMED = 1728, 
	STRING_TOWNPORTALTOME = 2199, 
	STRING_TOWNPORTALSCROLL = 2200, 
	STRING_IDENTIFYTOME = 2201, 
	STRING_IDENTIFYSCROLL = 2202, 
	STRING_RIGHTCLICKTOUSE = 2203, 
	STRING_RIGHTCLICKTOOPEN = 2204, 
	STRING_RIGHTCLICKTOREAD = 2205, 
	STRING_INSERTSCROLLS = 2206, 
	STRING_STASH = 3315, 
	STRING_COST = 3329, 
	STRING_REPAIRCOST = 3330, 
	STRING_SELLVALUE = 3331, 
	STRING_IDENTIFYCOST = 3332, 
	STRING_PRICELESS = 3333, 
	STRING_SOCKETED = 3453, 
	STRING_UNID = 3455, 
	STRING_CHARGES = 3456, 
	STRING_DURABILITY = 3457, 
	STRING_REQSTR = 3458, 
	STRING_REQDEX = 3459, 
	STRING_DAMAGE = 3460, 
	STRING_DEFENSE = 3461, 
	STRING_QUANTITY = 3462, 
	STRING_OF = 3463, 
	STRING_TO = 3464, 
	STRING_ONEHANDDAMAGE = 3465, 
	STRING_TWOHANDDAMAGE = 3466, 
	STRING_THROWDAMAGE = 3467, 
	STRING_SMITEDAMAGE = 3468, 
	STRING_REQLVL = 3469, 
	STRING_POINTS = 3470, 
	STRING_TOSTRENGTH = 3473, 
	STRING_TODEXTERITY = 3474, 
	STRING_TOVITALITY = 3475, 
	STRING_TOENERGY = 3476, 
	STRING_TOMANA = 3477, 
	STRING_TOMAXDAMAGE = 3478, 
	STRING_TOMINDAMAGE = 3479, 
	STRING_TOATTACKRATE = 3480, 
	STRING_DEFENSE2 = 3481, 
	STRING_FIRERESIST = 3482, 
	STRING_COLDRESIST = 3483, 
	STRING_LIGHTNINGRESIST = 3484, 
	STRING_MAGICRESIST = 3485, 
	STRING_POISONRESIST = 3486, 
	STRING_MAXFIREDAM = 3487, 
	STRING_MINFIREDAM = 3488, 
	STRING_MAXLTNGDAM = 3489, 
	STRING_MINLTNGDAM = 3490, 
	STRING_MAXCOLDDAM = 3491, 
	STRING_MINCOLDDAM = 3492, 
	STRING_TOLIFE = 3493, 
	STRING_ATTACKERTAKESDAMAGE = 3494, 
	STRING_EXTRAGOLD = 3495, 
	STRING_MAGICFIND = 3496, 
	STRING_KNOCKBACK = 3497, 
	STRING_INCREASEDMAXLIFE = 3505, 
	STRING_INCREASEDMAXMANA = 3506, 
	STRING_MAXDURA = 3507, 
	STRING_ENHANCEDMAXDAMAGE = 3508, 
	STRING_ENHANCEDMINDAMAGE = 3509, 
	STRING_REPLENISHLIFE = 3510, 
	STRING_MAGICDAMAGEREDUCED = 3518, 
	STRING_DAMAGEREDUCED = 3519, 
	STRING_ENHANCEDDEF = 3520, 
	STRING_DRAINLIFE = 3521, 
	STRING_MANASTEAL = 3523, 
	STRING_LIFESTEAL = 3524, 
	STRING_LIGHTRADIUS = 3530, 
	STRING_INCREASEDBLOCKCHANCE = 3531, 
	STRING_REQUIREMENTS = 3532, 
	STRING_TOFIRESKILLS = 3533, 
	STRING_ATTACKERTAKESLTNGDAM = 3534, 
	STRING_ALLSKILLS = 3535, 
	STRING_FREEZESTARGET = 3536, 
	STRING_OPENWOUNDS = 3537, 
	STRING_POISONLENGTHREDUCED = 3542, 
	STRING_HEALSTAMINA = 3544, 
	STRING_DAMAGETOMANA = 3545, 
	STRING_IGNORETARGETSDEFENSE = 3547, 
	STRING_PREVENTMONSTERHEAL = 3549, 
	STRING_HALFFREEZEDURATION = 3550, 
	STRING_DAMAGETARGETAC = 3552, 
	STRING_DAMAGETODEMONS = 3553, 
	STRING_DAMAGETOUNDEAD = 3554, 
	STRING_MANAREGEN = 3555, 
	STRING_MAXPOISDAM = 3556, 
	STRING_MINPOISDAM = 3557, 
	STRING_AR_VS_DEMONS = 3558, 
	STRING_AR_VS_UNDEAD = 3559, 
	STRING_INCREASEDATTACKSPEED = 3561, 
	STRING_FASTERHITRECOVERY = 3564, 
	STRING_FASTERRUNWALK = 3567, 
	STRING_FASTERCASTRATE = 3570, 
	STRING_FASTERBLOCKRATE = 3573, 
	STRING_THROWABLE = 3575, 
	STRING_NORMALDAMAGE = 3576, 
	STRING_CRUSHINGBLOW = 3577, 
	STRING_MAXSTAMINA = 3578, 
	STRING_KICK_DAMAGE = 3579, 
	STRING_MANAAFTERKILL = 3580, 
	STRING_FIREABSORB = 3581, 
	STRING_FIREABSORB2 = 3582, 
	STRING_LTNGABSORB = 3583, 
	STRING_LTNGABSORB2 = 3584, 
	STRING_MAGICABSORB = 3585, 
	STRING_MAGICABSORB2 = 3586, 
	STRING_COLDABSORB = 3587, 
	STRING_COLDABSORB2 = 3588, 
	STRING_TARGETAC = 3589, 
	STRING_DEADLYSTRIKE = 3591, 
	STRING_MAXFIRERES = 3595, 
	STRING_MAXCOLDRES = 3596, 
	STRING_MAXLTNGRES = 3597, 
	STRING_MAXMAGICRES = 3598, 
	STRING_MAXPOISRES = 3599, 
	STRING_CANNOTBEFROZEN = 3600, 
	STRING_DEFVSMISSILES = 3601, 
	STRING_DEFVSMELEE = 3602, 
	STRING_LIFEPERDEMONKILL = 3603, 
	STRING_PIERCE = 3607, 
	STRING_MAGICARROWS = 3608, 
	STRING_EXPLOSIVEARROWS = 3609, 
	STRING_TOALLRESISTANCES = 3610, 
	STRING_TOALLSKILLS = 3611, 
	STRING_ADDFIREDAMAGE = 3612, 
	STRING_ADDFIREDAMAGERANGE = 3613, 
	STRING_ADDCOLDDAMAGE = 3614, 
	STRING_ADDCOLDDAMAGERANGE = 3615, 
	STRING_ADDLIGHTNINGDAMAGE = 3616, 
	STRING_ADDLIGHTNINGDAMAGERANGE = 3617, 
	STRING_ADDMAGICDAMAGE = 3618, 
	STRING_ADDMAGICDAMAGERANGE = 3619, 
	STRING_ADDPOISONDAMAGE = 3620, 
	STRING_ADDPOISONDAMAGERANGE = 3621, 
	STRING_ADDPCTDAMAGE = 3622, 
	STRING_ADDPCTDAMAGERANGE = 3623, 
	STRING_ENHANCEDDAMAGE = 3624,
	STRING_QSTSXXX = 3724,
	STRING_QSTSNULL = 3725,
	STRING_QSTSCOMPLETE = 3726,
	STRING_QSTSOTHER = 3727,
	STRING_QSTSPREVIOUS = 3728,
	STRING_QSTSTHANKYOUCOMEAGAIN = 3729,
	STRING_QSTSTHANKYOUCOMEAGAINMULTI = 3730,
	STRING_KEY_NONE = 3762, 
	STRING_KEY_LBUTTON = 3763, 
	STRING_KEY_RBUTTON = 3764, 
	STRING_KEY_CANCEL = 3765, 
	STRING_KEY_MBUTTON = 3766, 
	STRING_KEY_4BUTTON = 3767, 
	STRING_KEY_5BUTTON = 3768, 
	STRING_KEY_WHEELUP = 3769, 
	STRING_KEY_WHEELDOWN = 3770, 
	STRING_KEY_KANA = 3771, 
	STRING_KEY_JUNJA = 3772, 
	STRING_KEY_FINAL = 3773, 
	STRING_KEY_KANJI = 3774, 
	STRING_KEY_ESCAPE = 3775, 
	STRING_KEY_CONVERT = 3776, 
	STRING_KEY_NONCONVERT = 3777, 
	STRING_KEY_ACCEPT = 3778, 
	STRING_KEY_MODECHANGE = 3779, 
	STRING_KEY_LEFT = 3780, 
	STRING_KEY_UP = 3781, 
	STRING_KEY_RIGHT = 3782, 
	STRING_KEY_DOWN = 3783, 
	STRING_KEY_SELECT = 3784, 
	STRING_KEY_EXECUTE = 3785, 
	STRING_KEY_LWIN = 3786, 
	STRING_KEY_RWIN = 3787, 
	STRING_KEY_APPS = 3788, 
	STRING_KEY_NUMLOCK = 3789, 
	STRING_KEY_BACK = 3790, 
	STRING_KEY_TAB = 3791, 
	STRING_KEY_CLEAR = 3792, 
	STRING_KEY_RETURN = 3793, 
	STRING_KEY_SHIFT = 3794, 
	STRING_KEY_CONTROL = 3795, 
	STRING_KEY_MENU = 3796, 
	STRING_KEY_PAUSE = 3797, 
	STRING_KEY_CAPITAL = 3798, 
	STRING_KEY_SPACE = 3799, 
	STRING_KEY_PRIOR = 3800, 
	STRING_KEY_NEXT = 3801, 
	STRING_KEY_END = 3802, 
	STRING_KEY_HOME = 3803, 
	STRING_KEY_PRINT = 3804, 
	STRING_KEY_SNAPSHOT = 3805, 
	STRING_KEY_INSERT = 3806, 
	STRING_KEY_DELETE = 3807, 
	STRING_KEY_HELP = 3808, 
	STRING_KEY_NUMPAD0 = 3809, 
	STRING_KEY_NUMPAD1 = 3810, 
	STRING_KEY_NUMPAD2 = 3811, 
	STRING_KEY_NUMPAD3 = 3812, 
	STRING_KEY_NUMPAD4 = 3813, 
	STRING_KEY_NUMPAD5 = 3814, 
	STRING_KEY_NUMPAD6 = 3815, 
	STRING_KEY_NUMPAD7 = 3816, 
	STRING_KEY_NUMPAD8 = 3817, 
	STRING_KEY_NUMPAD9 = 3818, 
	STRING_KEY_MULTIPLY = 3819, 
	STRING_KEY_ADD = 3820, 
	STRING_KEY_SEPARATOR = 3821, 
	STRING_KEY_SUBTRACT = 3822, 
	STRING_KEY_DECIMAL = 3823, 
	STRING_KEY_DIVIDE = 3824, 
	STRING_KEY_F1 = 3825, 
	STRING_KEY_F2 = 3826, 
	STRING_KEY_F3 = 3827, 
	STRING_KEY_F4 = 3828, 
	STRING_KEY_F5 = 3829, 
	STRING_KEY_F6 = 3830, 
	STRING_KEY_F7 = 3831, 
	STRING_KEY_F8 = 3832, 
	STRING_KEY_F9 = 3833, 
	STRING_KEY_F10 = 3834, 
	STRING_KEY_F11 = 3835, 
	STRING_KEY_F12 = 3836, 
	STRING_KEY_F13 = 3837, 
	STRING_KEY_F14 = 3838, 
	STRING_KEY_F15 = 3839, 
	STRING_KEY_F16 = 3840, 
	STRING_KEY_F17 = 3841, 
	STRING_KEY_F18 = 3842, 
	STRING_KEY_F19 = 3843, 
	STRING_KEY_F20 = 3844, 
	STRING_KEY_F21 = 3845, 
	STRING_KEY_F22 = 3846, 
	STRING_KEY_F23 = 3847, 
	STRING_KEY_F24 = 3848, 
	STRING_KEY_SCROLL = 3849, 
	STRING_KEY_SEMICOLON = 3850, 
	STRING_KEY_EQUAL = 3851, 
	STRING_KEY_COMMA = 3852, 
	STRING_KEY_MINUS = 3853, 
	STRING_KEY_PERIOD = 3854, 
	STRING_KEY_SLASH = 3855, 
	STRING_KEY_TILDE = 3856, 
	STRING_KEY_LBRACKET = 3857, 
	STRING_KEY_BACKSLASH = 3858, 
	STRING_KEY_RBRACKET = 3859, 
	STRING_KEY_APOSTROPHE = 3860, 
	STRING_SHORTHANDKEY_MBUTTON = 3861, 
	STRING_SHORTHANDKEY_4BUTTON = 3862, 
	STRING_SHORTHANDKEY_5BUTTON = 3863, 
	STRING_SHORTHANDKEY_WHEELUP = 3864, 
	STRING_SHORTHANDKEY_WHEELDOWN = 3865, 
	STRING_SHORTHANDKEY_KANA = 3866, 
	STRING_SHORTHANDKEY_JUNJA = 3867, 
	STRING_SHORTHANDKEY_FINAL = 3868, 
	STRING_SHORTHANDKEY_KANJI = 3869, 
	STRING_SHORTHANDKEY_ESCAPE = 3870, 
	STRING_SHORTHANDKEY_CONVERT = 3871, 
	STRING_SHORTHANDKEY_NONCONVERT = 3872, 
	STRING_SHORTHANDKEY_ACCEPT = 3873, 
	STRING_SHORTHANDKEY_MODECHANGE = 3874, 
	STRING_SHORTHANDKEY_LEFT = 3875, 
	STRING_SHORTHANDKEY_RIGHT = 3876, 
	STRING_SHORTHANDKEY_DOWN = 3877, 
	STRING_SHORTHANDKEY_SELECT = 3878, 
	STRING_SHORTHANDKEY_EXECUTE = 3879, 
	STRING_SHORTHANDKEY_LEFTWINDOWS = 3880, 
	STRING_SHORTHANDKEY_RIGHTWINDOWS = 3881, 
	STRING_SHORTHANDKEY_APPS = 3882, 
	STRING_SHORTHANDKEY_NUMLOCK = 3883, 
	STRING_SHORTHANDKEY_BACKSPACE = 3884, 
	STRING_SHORTHANDKEY_CLEAR = 3885, 
	STRING_SHORTHANDKEY_ENTER = 3886, 
	STRING_SHORTHANDKEY_SHIFT = 3887, 
	STRING_SHORTHANDKEY_CONTROL = 3888, 
	STRING_SHORTHANDKEY_PAUSE = 3889, 
	STRING_SHORTHANDKEY_CAPSLOCK = 3890, 
	STRING_SHORTHANDKEY_SPACE = 3891, 
	STRING_SHORTHANDKEY_PAGEUP = 3892, 
	STRING_SHORTHANDKEY_PAGEDOWN = 3893, 
	STRING_SHORTHANDKEY_HOME = 3894, 
	STRING_SHORTHANDKEY_PRINTSCREEN = 3895, 
	STRING_SHORTHANDKEY_INSERT = 3896, 
	STRING_SHORTHANDKEY_DELETE = 3897, 
	STRING_SHORTHANDKEY_HELP = 3898, 
	STRING_SHORTHANDKEY_NUMPAD0 = 3899, 
	STRING_SHORTHANDKEY_NUMPAD1 = 3900, 
	STRING_SHORTHANDKEY_NUMPAD2 = 3901, 
	STRING_SHORTHANDKEY_NUMPAD3 = 3902, 
	STRING_SHORTHANDKEY_NUMPAD4 = 3903, 
	STRING_SHORTHANDKEY_NUMPAD5 = 3904, 
	STRING_SHORTHANDKEY_NUMPAD6 = 3905, 
	STRING_SHORTHANDKEY_NUMPAD7 = 3906, 
	STRING_SHORTHANDKEY_NUMPAD8 = 3907, 
	STRING_SHORTHANDKEY_NUMPAD9 = 3908, 
	STRING_SHORTHANDKEY_NUMPADMULTIPLY = 3909, 
	STRING_SHORTHANDKEY_NUMPADPLUS = 3910, 
	STRING_SHORTHANDKEY_NUMPADMINUS = 3911, 
	STRING_SHORTHANDKEY_NUMPADDOT = 3912, 
	STRING_SHORTHANDKEY_NUMPADDIVIDE = 3913, 
	STRING_SHORTHANDKEY_SCROLL = 3914, 
	STRING_NEWSTATS = 3986, 
	STRING_NEWSKILLS = 3987, 
	STRING_COLORCODE = 3994, 
	STRING_SPACE = 3995, 
	STRING_DASH = 3996, 
	STRING_COLON = 3997, 
	STRING_NEWLINE = 3998, 
	STRING_PIPE = 3999, 
	STRING_SLASH = 4000, 
	STRING_PERCENT = 4001, 
	STRING_PLUS = 4002, 
	STRING_TO2 = 4003, 
	STRING_BARBARIAN = 4007, 
	STRING_PALADIN = 4008, 
	STRING_NECROMANCER = 4009, 
	STRING_SORCERESS = 4010, 
	STRING_AMAZON = 4011, 
	STRING_CANNOTREPAIRUNID = 4022, 
	STRING_WEAPONDESC_MACE = 4077, 
	STRING_WEAPONDESC_AXE = 4078, 
	STRING_WEAPONDESC_SWORD = 4079, 
	STRING_WEAPONDESC_DAGGER = 4080, 
	STRING_WEAPONDESC_THROWNPOTION = 4081, 
	STRING_WEAPONDESC_JAVELIN = 4082, 
	STRING_WEAPONDESC_SPEAR = 4083, 
	STRING_WEAPONDESC_BOW = 4084, 
	STRING_WEAPONDESC_STAFF = 4085, 
	STRING_WEAPONDESC_POLEARM = 4086, 
	STRING_WEAPONDESC_CROSSBOW = 4087, 
	STRING_WEAPONATTACKFASTEST = 4088, 
	STRING_WEAPONATTACKVERYFAST = 4089, 
	STRING_WEAPONATTACKFAST = 4090, 
	STRING_WEAPONATTACKNORMAL = 4091, 
	STRING_WEAPONATTACKSLOW = 4092, 
	STRING_WEAPONATTACKVERYSLOW = 4093, 
	STRING_WEAPONATTACKSLOWEST = 4094, 
	STRING_GOLD = 4099, 
	STRING_WITHDRAW = 4124, 
	STRING_GOLDDROP = 4125, 
	STRING_GOLDDEPOSIT = 4126, 
	STRING_GOLDTRADE = 4129, 
	STRING_LEVEL2 = 4141, 
	STRING_CLOSE = 4144, 
	STRING_DIFFICULTY = 4183, 
	STRING_CAVELEVEL1 = 5047, 
	STRING_DENOFEVIL = 5048, 
	STRING_HARDCORE = 5126, 
	STRING_HELL = 5154, 
	STRING_NIGHTMARE = 5155, 
	STRING_ANEVILFORCE = 5382, 
	STRING_CONVERTSTO = 5387, 
	STRING_NOLEVELNAME = 5389, 
	STRING_MAXSTAMINA2 = 10001, 
	STRING_SLOWERSTAMINADRAIN = 10020, 
	STRING_ENHANCEDDAMAGE2 = 10023, 
	STRING_ABSORBLTNGDAM = 10046, 
	STRING_SETITEMFORMAT = 10089, 
	STRING_DRUID = 10097, 
	STRING_ASSASSIN = 10098, 
	STRING_AMAONLY = 10917, 
	STRING_SORONLY = 10918, 
	STRING_NECONLY = 10919, 
	STRING_PALONLY = 10920, 
	STRING_BARONLY = 10921, 
	STRING_DRUONLY = 10922, 
	STRING_ASSONLY = 10923, 
	STRING_CHANCETOBLOCK = 11018, 
	STRING_MAGICFIND2 = 11032, 
	STRING_EXTRAGOLD2 = 11033, 
	STRING_MONSTERFLEE = 11034, 
	STRING_BONUSAR = 11035, 
	STRING_SLOWTARGET = 11036, 
	STRING_CHANCETOREANIMATE = 11037, 
	STRING_BLINDTARGET = 11038, 
	STRING_GEMXP1_HELMS = 11073, 
	STRING_GEMXP2_SHIELDS = 11074, 
	STRING_GEMXP3_WEAPONS = 11075, 
	STRING_GEMXP4_ARMOR = 11076, 
	STRING_INSERTINSOCKET = 11080, 
	STRING_BASEDONCHARLVL = 11091, 
	STRING_CHARMDESC = 20438, 
	STRING_RUNEQUOTE = 20506, 
	STRING_INCREASEDSTACK = 21239, 
	STRING_INDESTRUCTIBLE = 21240, 
	STRING_REPAIRDURAPERSEC = 21241, 
	STRING_REPAIRDURAINXSECS = 21242, 
	STRING_REPLENISHQUANTITY = 21243, 
	STRING_CASTLEVELXSKILL = 21244, 
	STRING_WHENYOUSWING = 21245, 
	STRING_WHENYOUGETHIT = 21246, 
	STRING_WHENYOUHITANENEMY = 21247, 
	STRING_CHARGES2 = 21248, 
	STRING_LEVEL = 21249, 
	STRING_PERLEVEL = 21250, 
	STRING_X_XCHARGES = 21251, 
	STRING_BRACKET1 = 21252, 
	STRING_BRACKET2 = 21253, 
	STRING_STEALTH = 21254, 
	STRING_IMMUNITYTOPOISON = 21255, 
	STRING_CURSED = 21256, 
	STRING_PERPLAYERINPARTY = 21257, 
	STRING_WEAPONDESC_H2H = 21258, 
	STRING_WEAPONDESC_ORB = 21259, 
	STRING_ELEMENTALDAMAGE = 21260, 
	STRING_KICKDAMAGE = 21782, 
	STRING_PCTCHANCETOCAST = 21783, 
	STRING_SWAPWEAPONS = 22726, 
	STRING_EXPANSION = 22730, 
	STRING_ETHCANNOTREPAIR = 22745, 
	STRING_ITEMCANNOTBEREPAIRED = 22746, 
};

enum D2C_StringTablesHcidx
{
	STRTABLE_STRING,
	STRTABLE_PATCHSTRING,
	STRTABLE_EXPSTRING,
};
#endif // CONSTANTS_STRINGS

#ifndef CONSTANTS_ARENA //Pseudo-Macro to group all constants
enum D2C_PvpFlags
{
	PVPFLAG_INVITEYOU = 0x01,		// Player Invites you
	PVPFLAG_YOUINVITE = 0x02,		// You invited this player
	PVPFLAG_HOSTILEYOU = 0x04,		// This player has declared hostility towards you
	PVPFLAG_YOUHOSTILE = 0x08,		// You declared hostility towards this player
	PVPFLAG_ISALLIED = 0x10,		// Player is allied but not with you
	PVPFLAG_ALLIEDWITHYOU = 0x20	// You are allied with this player
};

enum D2C_ArenaFlags
{
	ARENAFLAG_ARENAMODE = 0x00000002,
	ARENAFLAG_UPDATECLIENTS = 0x00000004,
	ARENAFLAG_TEMPLATE = 0x00000020,
	ARENAFLAG_UPDATE = 0x00000400,
	ARENAFLAG_HARDCORE = 0x00000800,
	ARENAFLAG_ACTIVE = 0x00010000,
	ARENAFLAG_ALLOWPARTY = 0x00100000
};

enum D2C_ArenaScoreTypes
{
	ARENASCORE_SUICIDE,
	ARENASCORE_PLAYERKILL,
	ARENASCORE_PLAYERKILLPERCENT,
	ARENASCORE_MONSTERKILL,
	ARENASCORE_PLAYERDEATH,
	ARENASCORE_PLAYERDEATHPERCENT,
	ARENASCORE_MONSTERDEATH,
};

enum D2C_ArenaMatchTypes
{
	D2ARENAMATCH_DEATHMATCH,
	D2ARENAMATCH_TEAMDEATHMATCH,
	D2ARENAMATCH_CAPTURETHEFLAG,
	D2ARENAMATCH_KINGOFTHEHILL,
};

enum D2Killtypes
{
	KILLTYPE_SUICIDE = 0, 
	KILLTYPE_PVP_KILL, 
	KILLTYPE_PVP2, 
	KILLTYPE_PVM_KILL, 
	KILLTYPE_NVM, 
	KILLTYPE_MVP_KILL, 
	KILLTYPE, 
};
#endif // CONSTANTS_ARENA

#ifndef CONSTANTS_COMBAT //Pseudo-Macro to group all constants
enum D2C_DamageReductionTypes
{
	DMGREDUCTYPE_NONE,
	DMGREDUCTYPE_PHYSICAL,
	DMGREDUCTYPE_MAGICAL,
};

enum D2C_DamageApplyTypes
{
	DMGAPPLYTYPE_DURATION,
	DMGAPPLYTYPE_DIRECTDMG,
};

enum D2C_ElemTypes
{
	ELEMTYPE_NONE,
	ELEMTYPE_FIRE,
	ELEMTYPE_LTNG,
	ELEMTYPE_MAGIC,
	ELEMTYPE_COLD,
	ELEMTYPE_POIS,
	ELEMTYPE_LIFE,
	ELEMTYPE_MANA,
	ELEMTYPE_STAMINA,
	ELEMTYPE_STUN,
	ELEMTYPE_RAND,
	ELEMTYPE_BURN,
	ELEMTYPE_FREEZE,
};
#endif // CONSTANTS_COMBAT

#ifndef CONSTANTS_PACKETS //Pseudo-Macro to group all constants
enum D2C_SRV2CLT5A_TYPES
{
	EVENTTYPE_DROPTIMEOUT,
	EVENTTYPE_DROPERROR,
	EVENTTYPE_PLAYERJOIN,
	EVENTTYPE_PLAYERLEFT,
	EVENTTYPE_NOTINGAME,
	EVENTTYPE_NOTLOGGEDIN,
	EVENTTYPE_SLAIN,
	EVENTTYPE_PVPSTATUS,
	EVENTTYPE_PLAYERISBUSY,
	EVENTTYPE_PLEASEWAIT,
	EVENTTYPE_HASITEMSINBOX,
	EVENTTYPE_UNUSED1,
	EVENTTYPE_UNUSED2,
	EVENTTYPE_NOTLISTENINGTOYOU,
	EVENTTYPE_UNUSED3,
	EVENTTYPE_REALMGOINGDOWN,
	EVENTTYPE_PLEASEWAITHOSTILE,
	EVENTTYPE_JORDANSTONES,
	EVENTTYPE_DIABLOCLONE,
//Custom Types
	EVENTTYPE_GOLDPICKED,
	EVENTTYPE_UPDATESKILLDELAY,
	EVENTTYPE_UPDATESKILLDELAYGROUP,
};

enum D2C_SRV2CLT77_PARAMS
{
	UPDATEUI_ASKTOTRADE = 0,
	UPDATEUI_ASKEDTOTRADE = 1,
	UPDATEUI_ACCEPTTRADE = 5,
	UPDATEUI_OPENTRADE = 6,
	UPDATEUI_SELLERNOROOM = 9,
	UPDATEUI_BUYERNOROOM = 10,
	UPDATEUI_CLOSETRADE = 12,
	UPDATEUI_TRADEDONE = 13,
	UPDATEUI_CHECKBOX = 14,
	UPDATEUI_NORMCHECKBOX = 15,
	UPDATEUI_OPENSTASH = 16,
	UPDATEUI_OPENCUBE = 21
};

enum D2C_SRV2CLT9C_9D_PARAMS
{
	ITEMACTION_ADDTOGROUND = 0,
	ITEMACTION_GROUNDTOCURSOR,
	ITEMACTION_DROPTOGROUND,
	ITEMACTION_ONGROUND,
	ITEMACTION_PUTINCONTAINER,
	ITEMACTION_REMOVEFROMCONTAINER,
	ITEMACTION_EQUIP,
	ITEMACTION_INDIRECTLYSWAPBODYITEM,
	ITEMACTION_UNEQUIP,
	ITEMACTION_SWAPBODYITEM,
	ITEMACTION_ADDQUANTITY,
	ITEMACTION_ADDTOSHOP,
	ITEMACTION_REMOVEFROMSHOP,
	ITEMACTION_SWAPINCONTAINER,
	ITEMACTION_PUTINBELT,
	ITEMACTION_REMOVEFROMBELT,
	ITEMACTION_SWAPINBELT,
	ITEMACTION_AUTOUNEQUIP,
	ITEMACTION_TOCURSOR,
	ITEMACTION_ITEMINSOCKET,
	ITEMACTION_UNKNOWN0x14,
	ITEMACTION_UPDATESTATS,
	ITEMACTION_UNKNOWN0x16,
	ITEMACTION_WEAPONSWITCH
};

enum D2C_ChatMessageTypes
{
	CHAT_NONE,
	CHAT_PLAYERMESSAGE,
	CHAT_RECEIVEDWHISPER,
	CHAT_SERVERMESSAGE,
	CHAT_NONAME,
	CHAT_EMOTE,
	CHAT_SENTWHISPER,
	CHAT_CLUESCROLL,
};
#endif // CONSTANTS_PACKETS

#ifndef CONSTANTS_QUESTS //Pseudo-Macro to group all constants
enum D2C_OriginalQuestFlags
{
	QFLAG_REWARDGRANTED,
	QFLAG_REWARDPENDING,
	QFLAG_STARTED,
	QFLAG_LEAVETOWN,
	QFLAG_ENTERAREA,
	QFLAG_CUSTOM1,
	QFLAG_CUSTOM2,
	QFLAG_CUSTOM3,
	QFLAG_CUSTOM4,
	QFLAG_CUSTOM5,
	QFLAG_CUSTOM6,
	QFLAG_CUSTOM7,
	QFLAG_UPDATEQUESTLOG,
	QFLAG_PRIMARYGOALDONE,
	QFLAG_COMPLETEDNOW,
	QFLAG_COMPLETEDBEFORE,
};

//enum D2C_QuestStates
//{
//	QSTATE_QUESTCOMPLETED,
//	QSTATE_QUESTDONE,
//	QSTATE_QUESTNOTSTARTED,
//	QSTATE_QUESTSTARTEDNOTCOMPLETED,
//};

enum D2QuestStateFlagIds
{
	QUESTSTATEFLAG_A1Q0 = 0,
	QUESTSTATEFLAG_A1Q1 = 1,
	QUESTSTATEFLAG_A1Q2 = 2,
	QUESTSTATEFLAG_A1Q3 = 3,
	QUESTSTATEFLAG_A1Q4 = 4,
	QUESTSTATEFLAG_A1Q5 = 5,
	QUESTSTATEFLAG_A1Q6 = 6,

	QUESTSTATEFLAG_A1COMPLETED = 7,

	QUESTSTATEFLAG_A2Q0 = 8,
	QUESTSTATEFLAG_A2Q1 = 9,
	QUESTSTATEFLAG_A2Q2 = 10,
	QUESTSTATEFLAG_A2Q3 = 11,
	QUESTSTATEFLAG_A2Q4 = 12,
	QUESTSTATEFLAG_A2Q5 = 13,
	QUESTSTATEFLAG_A2Q6 = 14,

	QUESTSTATEFLAG_A2COMPLETED = 15,

	QUESTSTATEFLAG_A3Q0 = 16,
	QUESTSTATEFLAG_A3Q1 = 17,
	QUESTSTATEFLAG_A3Q2 = 18,
	QUESTSTATEFLAG_A3Q3 = 19,
	QUESTSTATEFLAG_A3Q4 = 20,
	QUESTSTATEFLAG_A3Q5 = 21,
	QUESTSTATEFLAG_A3Q6 = 22,

	QUESTSTATEFLAG_A3COMPLETED = 23,

	QUESTSTATEFLAG_A4Q0 = 24,
	QUESTSTATEFLAG_A4Q1 = 25,
	QUESTSTATEFLAG_A4Q2 = 26,
	QUESTSTATEFLAG_A4Q3 = 27,

	QUESTSTATEFLAG_A4COMPLETED = 28,

	QUESTSTATEFLAG_A1Q7 = 29,

	QUESTSTATEFLAG_A2Q7 = 30,
	QUESTSTATEFLAG_A2Q8 = 31,

	QUESTSTATEFLAG_A3Q7 = 32,

	QUESTSTATEFLAG_A4Q4 = 33,

	//Unused: 34

	QUESTSTATEFLAG_A5Q1 = 35,
	QUESTSTATEFLAG_A5Q2 = 36,
	QUESTSTATEFLAG_A5Q3 = 37,
	QUESTSTATEFLAG_A5Q4 = 38,
	QUESTSTATEFLAG_A5Q5 = 39,
	QUESTSTATEFLAG_A5Q6 = 40,

	QUESTSTATEFLAG_A1INTRO = 41,
	QUESTSTATEFLAG_A2INTRO = 41,
	QUESTSTATEFLAG_A3INTRO = 41,
	QUESTSTATEFLAG_A5INTRO = 41,
};

enum D2Quests
{
	QUEST_A1Q0_WARRIVGOSSIP = 0,
	QUEST_A1Q1_DENOFEVIL = 1,
	QUEST_A1Q2_BLOODRAVEN = 2,
	QUEST_A1Q3_MALUS = 3,
	QUEST_A1Q4_CAIN = 4,
	QUEST_A1Q5_COUNTESS = 5,
	QUEST_A1Q6_ANDARIEL = 6,

	QUEST_A2Q0_JERHYNGOSSIP = 7,
	QUEST_A2Q1_RADAMENT = 8,
	QUEST_A2Q2_HORADRICSTAFF = 9,
	QUEST_A2Q3_TAINTEDSUN = 10,
	QUEST_A2Q4_HORAZONTOME = 11,
	QUEST_A2Q5_SUMMONER = 12,
	QUEST_A2Q6_DURIEL = 13,

	QUEST_A3Q0_HRATLIGOSSIP = 14,
	QUEST_A3Q1_LAMESENTOME = 15,
	QUEST_A3Q2_KHALIMFLAIL = 16,
	QUEST_A3Q3_GIDBINN = 17,
	QUEST_A3Q4_GOLDENBIRD = 18,
	QUEST_A3Q5_TRAVINCAL = 19,
	QUEST_A3Q6_MEPHISTO = 20,

	QUEST_A4Q0_TYRAELGOSSIP = 21,
	QUEST_A4Q1_IZUAL = 22,
	QUEST_A4Q2_DIABLO = 23,
	QUEST_A4Q3_HELLFORGE = 24,

	QUEST_A1Q1EX_NAVI = 25,

	QUEST_A2Q7_UNUSED_GUARDGOSSIP = 26,
	QUEST_A2Q8_UNUSED_GUARDGOSSIP = 27,

	QUEST_A3Q7_DARKWANDERER = 28,

	QUEST_A4Q4_MALACHAI = 29,

	//TODO: 30 unused?

	QUEST_A5Q1_SHENK = 31,
	QUEST_A5Q2_RESCUESOLDIERS = 32,
	QUEST_A5Q3_PRISONOFICE = 33,
	QUEST_A5Q4_NIHLATHAK = 34,
	QUEST_A5Q5_ANCIENTS = 35,
	QUEST_A5Q6_BAAL = 36
};

//enum D2QuestFilterEvents
//{
//	QUESTEVENT_STATUSUPDATE = 0,
//	QUESTEVENT_NPCINIT = 1,
//	QUESTEVENT_QUESTINIT = 2
//};

enum D2ScrollMenus
{
	SCROLLMENU_MESSAGE = 0,
	SCROLLMENU_MENU = 1,
	SCROLLMENU_NONE = 2
};

enum D2QuestEvents
{
	QUESTEVENT_NPCACTIVATE = 0,
	QUESTEVENT_NPCDEACTIVATE = 2,
	QUESTEVENT_CHANGEDLEVEL = 3,
	QUESTEVENT_ITEMPICKEDUP = 4,
	QUESTEVENT_ITEMDROPPED = 5,
	QUESTEVENT_MONSTERKILLED = 8,
	QUESTEVENT_PLAYERDROPPEDWITHQUESTITEM = 9,
	QUESTEVENT_PLAYERLEAVESGAME = 10,
	QUESTEVENT_SCROLLMESSAGE = 11,
	QUESTEVENT_PLAYERSTARTEDGAME = 13,
	QUESTEVENT_PLAYERJOINEDGAME = 14
};

enum D2QuestAlert
{
	QALERT_DEFAULT = 0x00,
	QALERT_MESSAGE = 0x01,
	QALERT_SOUND = 0x02,
	QALERT_SOUNDEX = 0x10,
	QALERT_BLOCKED = 0x20
};
#endif // CONSTANTS_QUESTS

#ifndef CONSTANTS_TXTFLAGS //Pseudo-Macro to group all constants
enum D2C_MonStatsTxtFlagIndices
{
	MONSTATSFLAGINDEX_ISSPAWN = 0,
	MONSTATSFLAGINDEX_ISMELEE,
	MONSTATSFLAGINDEX_NORATIO,
	MONSTATSFLAGINDEX_OPENDOORS,
	MONSTATSFLAGINDEX_SETBOSS,
	MONSTATSFLAGINDEX_BOSSXFER,
	MONSTATSFLAGINDEX_BOSS,
	MONSTATSFLAGINDEX_PRIMEEVIL,
	MONSTATSFLAGINDEX_NPC,
	MONSTATSFLAGINDEX_INTERACT,
	MONSTATSFLAGINDEX_INTOWN,
	MONSTATSFLAGINDEX_LUNDEAD,
	MONSTATSFLAGINDEX_HUNDEAD,
	MONSTATSFLAGINDEX_DEMON,
	MONSTATSFLAGINDEX_FLYING,
	MONSTATSFLAGINDEX_KILLABLE,
	MONSTATSFLAGINDEX_SWITCHAI,
	MONSTATSFLAGINDEX_NOMULTISHOT,
	MONSTATSFLAGINDEX_NEVERCOUNT,
	MONSTATSFLAGINDEX_PETIGNORE,
	MONSTATSFLAGINDEX_DEATHDMG,
	MONSTATSFLAGINDEX_GENERICSPAWN,
	MONSTATSFLAGINDEX_ZOO,
	MONSTATSFLAGINDEX_PLACESPAWN,
	MONSTATSFLAGINDEX_INVENTORY,
	MONSTATSFLAGINDEX_ENABLED,
	MONSTATSFLAGINDEX_NOSHLDBLOCK,
	MONSTATSFLAGINDEX_NOAURA,
	MONSTATSFLAGINDEX_RANGEDTYPE,
};

enum D2C_MonStatsTxtFlags
{
	MONSTATSFLAG_ISSPAWN = (1 << MONSTATSFLAGINDEX_ISSPAWN),
	MONSTATSFLAG_ISMELEE = (1 << MONSTATSFLAGINDEX_ISMELEE),
	MONSTATSFLAG_NORATIO = (1 << MONSTATSFLAGINDEX_NORATIO),
	MONSTATSFLAG_OPENDOORS = (1 << MONSTATSFLAGINDEX_OPENDOORS),
	MONSTATSFLAG_SETBOSS = (1 << MONSTATSFLAGINDEX_SETBOSS),
	MONSTATSFLAG_BOSSXFER = (1 << MONSTATSFLAGINDEX_BOSSXFER),
	MONSTATSFLAG_BOSS = (1 << MONSTATSFLAGINDEX_BOSS),
	MONSTATSFLAG_PRIMEEVIL = (1 << MONSTATSFLAGINDEX_PRIMEEVIL),
	MONSTATSFLAG_NPC = (1 << MONSTATSFLAGINDEX_NPC),
	MONSTATSFLAG_INTERACT = (1 << MONSTATSFLAGINDEX_INTERACT),
	MONSTATSFLAG_INTOWN = (1 << MONSTATSFLAGINDEX_INTOWN),
	MONSTATSFLAG_LUNDEAD = (1 << MONSTATSFLAGINDEX_LUNDEAD),
	MONSTATSFLAG_HUNDEAD = (1 << MONSTATSFLAGINDEX_HUNDEAD),
	MONSTATSFLAG_DEMON = (1 << MONSTATSFLAGINDEX_DEMON),
	MONSTATSFLAG_FLYING = (1 << MONSTATSFLAGINDEX_FLYING),
	MONSTATSFLAG_KILLABLE = (1 << MONSTATSFLAGINDEX_KILLABLE),
	MONSTATSFLAG_SWITCHAI = (1 << MONSTATSFLAGINDEX_SWITCHAI),
	MONSTATSFLAG_NOMULTISHOT = (1 << MONSTATSFLAGINDEX_NOMULTISHOT),
	MONSTATSFLAG_NEVERCOUNT = (1 << MONSTATSFLAGINDEX_NEVERCOUNT),
	MONSTATSFLAG_PETIGNORE = (1 << MONSTATSFLAGINDEX_PETIGNORE),
	MONSTATSFLAG_DEATHDMG = (1 << MONSTATSFLAGINDEX_DEATHDMG),
	MONSTATSFLAG_GENERICSPAWN = (1 << MONSTATSFLAGINDEX_GENERICSPAWN),
	MONSTATSFLAG_ZOO = (1 << MONSTATSFLAGINDEX_ZOO),
	MONSTATSFLAG_PLACESPAWN = (1 << MONSTATSFLAGINDEX_PLACESPAWN),
	MONSTATSFLAG_INVENTORY = (1 << MONSTATSFLAGINDEX_INVENTORY),
	MONSTATSFLAG_ENABLED = (1 << MONSTATSFLAGINDEX_ENABLED),
	MONSTATSFLAG_NOSHLDBLOCK = (1 << MONSTATSFLAGINDEX_NOSHLDBLOCK),
	MONSTATSFLAG_NOAURA = (1 << MONSTATSFLAGINDEX_NOAURA),
	MONSTATSFLAG_RANGEDTYPE = (1 << MONSTATSFLAGINDEX_RANGEDTYPE),
};

enum D2C_MonStats2TxtFlagIndices
{
	MONSTATS2FLAGINDEX_NOGFXHITTEST = 0,
	MONSTATS2FLAGINDEX_NOMAP,
	MONSTATS2FLAGINDEX_NOOVLY,
	MONSTATS2FLAGINDEX_ISSEL,
	MONSTATS2FLAGINDEX_ALSEL,
	MONSTATS2FLAGINDEX_NOSEL,
	MONSTATS2FLAGINDEX_SHIFTSEL,
	MONSTATS2FLAGINDEX_CORPSESEL,
	MONSTATS2FLAGINDEX_REVIVE,
	MONSTATS2FLAGINDEX_ISATT,
	MONSTATS2FLAGINDEX_SMALL,
	MONSTATS2FLAGINDEX_LARGE,
	MONSTATS2FLAGINDEX_SOFT,
	MONSTATS2FLAGINDEX_CRITTER,
	MONSTATS2FLAGINDEX_SHADOW,
	MONSTATS2FLAGINDEX_NOUNIQUESHIFT,
	MONSTATS2FLAGINDEX_COMPOSITEDEATH,
	MONSTATS2FLAGINDEX_INERT,
	MONSTATS2FLAGINDEX_OBJCOL,
	MONSTATS2FLAGINDEX_DEADCOL,
	MONSTATS2FLAGINDEX_UNFLATDEAD,
};

enum D2C_MonStats2TxtFlags
{
	MONSTATS2FLAG_NOGFXHITTEST = (1 << MONSTATS2FLAGINDEX_NOGFXHITTEST),
	MONSTATS2FLAG_NOMAP = (1 << MONSTATS2FLAGINDEX_NOMAP),
	MONSTATS2FLAG_NOOVLY = (1 << MONSTATS2FLAGINDEX_NOOVLY),
	MONSTATS2FLAG_ISSEL = (1 << MONSTATS2FLAGINDEX_ISSEL),
	MONSTATS2FLAG_ALSEL = (1 << MONSTATS2FLAGINDEX_ALSEL),
	MONSTATS2FLAG_NOSEL = (1 << MONSTATS2FLAGINDEX_NOSEL),
	MONSTATS2FLAG_SHIFTSEL = (1 << MONSTATS2FLAGINDEX_SHIFTSEL),
	MONSTATS2FLAG_CORPSESEL = (1 << MONSTATS2FLAGINDEX_CORPSESEL),
	MONSTATS2FLAG_REVIVE = (1 << MONSTATS2FLAGINDEX_REVIVE),
	MONSTATS2FLAG_ISATT = (1 << MONSTATS2FLAGINDEX_ISATT),
	MONSTATS2FLAG_SMALL = (1 << MONSTATS2FLAGINDEX_SMALL),
	MONSTATS2FLAG_LARGE = (1 << MONSTATS2FLAGINDEX_LARGE),
	MONSTATS2FLAG_SOFT = (1 << MONSTATS2FLAGINDEX_SOFT),
	MONSTATS2FLAG_CRITTER = (1 << MONSTATS2FLAGINDEX_CRITTER),
	MONSTATS2FLAG_SHADOW = (1 << MONSTATS2FLAGINDEX_SHADOW),
	MONSTATS2FLAG_NOUNIQUESHIFT = (1 << MONSTATS2FLAGINDEX_NOUNIQUESHIFT),
	MONSTATS2FLAG_COMPOSITEDEATH = (1 << MONSTATS2FLAGINDEX_COMPOSITEDEATH),
	MONSTATS2FLAG_INERT = (1 << MONSTATS2FLAGINDEX_INERT),
	MONSTATS2FLAG_OBJCOL = (1 << MONSTATS2FLAGINDEX_OBJCOL),
	MONSTATS2FLAG_DEADCOL = (1 << MONSTATS2FLAGINDEX_DEADCOL),
	MONSTATS2FLAG_UNFLATDEAD = (1 << MONSTATS2FLAGINDEX_UNFLATDEAD),
};

enum D2C_MonStats2TxtComponentFlagIndices
{
	MONSTATS2COMPONENTFLAGINDEX_HD = 0,
	MONSTATS2COMPONENTFLAGINDEX_TR,
	MONSTATS2COMPONENTFLAGINDEX_LG,
	MONSTATS2COMPONENTFLAGINDEX_RA,
	MONSTATS2COMPONENTFLAGINDEX_LA,
	MONSTATS2COMPONENTFLAGINDEX_RH,
	MONSTATS2COMPONENTFLAGINDEX_LH,
	MONSTATS2COMPONENTFLAGINDEX_SH,
	MONSTATS2COMPONENTFLAGINDEX_S1,
	MONSTATS2COMPONENTFLAGINDEX_S2,
	MONSTATS2COMPONENTFLAGINDEX_S3,
	MONSTATS2COMPONENTFLAGINDEX_S4,
	MONSTATS2COMPONENTFLAGINDEX_S5,
	MONSTATS2COMPONENTFLAGINDEX_S6,
	MONSTATS2COMPONENTFLAGINDEX_S7,
	MONSTATS2COMPONENTFLAGINDEX_S8,
};

enum D2C_MonStats2TxtComponentFlags
{
	MONSTATS2COMPONENTFLAG_HD = (1 << MONSTATS2COMPONENTFLAGINDEX_HD),
	MONSTATS2COMPONENTFLAG_TR = (1 << MONSTATS2COMPONENTFLAGINDEX_TR),
	MONSTATS2COMPONENTFLAG_LG = (1 << MONSTATS2COMPONENTFLAGINDEX_LG),
	MONSTATS2COMPONENTFLAG_RA = (1 << MONSTATS2COMPONENTFLAGINDEX_RA),
	MONSTATS2COMPONENTFLAG_LA = (1 << MONSTATS2COMPONENTFLAGINDEX_LA),
	MONSTATS2COMPONENTFLAG_RH = (1 << MONSTATS2COMPONENTFLAGINDEX_RH),
	MONSTATS2COMPONENTFLAG_LH = (1 << MONSTATS2COMPONENTFLAGINDEX_LH),
	MONSTATS2COMPONENTFLAG_SH = (1 << MONSTATS2COMPONENTFLAGINDEX_SH),
	MONSTATS2COMPONENTFLAG_S1 = (1 << MONSTATS2COMPONENTFLAGINDEX_S1),
	MONSTATS2COMPONENTFLAG_S2 = (1 << MONSTATS2COMPONENTFLAGINDEX_S2),
	MONSTATS2COMPONENTFLAG_S3 = (1 << MONSTATS2COMPONENTFLAGINDEX_S3),
	MONSTATS2COMPONENTFLAG_S4 = (1 << MONSTATS2COMPONENTFLAGINDEX_S4),
	MONSTATS2COMPONENTFLAG_S5 = (1 << MONSTATS2COMPONENTFLAGINDEX_S5),
	MONSTATS2COMPONENTFLAG_S6 = (1 << MONSTATS2COMPONENTFLAGINDEX_S6),
	MONSTATS2COMPONENTFLAG_S7 = (1 << MONSTATS2COMPONENTFLAGINDEX_S7),
	MONSTATS2COMPONENTFLAG_S8 = (1 << MONSTATS2COMPONENTFLAGINDEX_S8),
};

enum D2C_MonStats2TxtModeFlagIndices
{
	MONSTATS2MODEFLAGINDEX_DT = 0,
	MONSTATS2MODEFLAGINDEX_NU,
	MONSTATS2MODEFLAGINDEX_WL,
	MONSTATS2MODEFLAGINDEX_GH,
	MONSTATS2MODEFLAGINDEX_A1,
	MONSTATS2MODEFLAGINDEX_A2,
	MONSTATS2MODEFLAGINDEX_BL,
	MONSTATS2MODEFLAGINDEX_SC,
	MONSTATS2MODEFLAGINDEX_S1,
	MONSTATS2MODEFLAGINDEX_S2,
	MONSTATS2MODEFLAGINDEX_S3,
	MONSTATS2MODEFLAGINDEX_S4,
	MONSTATS2MODEFLAGINDEX_DD,
	MONSTATS2MODEFLAGINDEX_KB,
	MONSTATS2MODEFLAGINDEX_SQ,
	MONSTATS2MODEFLAGINDEX_RN,
};

enum D2C_MonStats2TxtModeFlags
{
	MONSTATS2MODEFLAG_DT = (1 << MONSTATS2MODEFLAGINDEX_DT),
	MONSTATS2MODEFLAG_NU = (1 << MONSTATS2MODEFLAGINDEX_NU),
	MONSTATS2MODEFLAG_WL = (1 << MONSTATS2MODEFLAGINDEX_WL),
	MONSTATS2MODEFLAG_GH = (1 << MONSTATS2MODEFLAGINDEX_GH),
	MONSTATS2MODEFLAG_A1 = (1 << MONSTATS2MODEFLAGINDEX_A1),
	MONSTATS2MODEFLAG_A2 = (1 << MONSTATS2MODEFLAGINDEX_A2),
	MONSTATS2MODEFLAG_BL = (1 << MONSTATS2MODEFLAGINDEX_BL),
	MONSTATS2MODEFLAG_SC = (1 << MONSTATS2MODEFLAGINDEX_SC),
	MONSTATS2MODEFLAG_S1 = (1 << MONSTATS2MODEFLAGINDEX_S1),
	MONSTATS2MODEFLAG_S2 = (1 << MONSTATS2MODEFLAGINDEX_S2),
	MONSTATS2MODEFLAG_S3 = (1 << MONSTATS2MODEFLAGINDEX_S3),
	MONSTATS2MODEFLAG_S4 = (1 << MONSTATS2MODEFLAGINDEX_S4),
	MONSTATS2MODEFLAG_DD = (1 << MONSTATS2MODEFLAGINDEX_DD),
	MONSTATS2MODEFLAG_KB = (1 << MONSTATS2MODEFLAGINDEX_KB),
	MONSTATS2MODEFLAG_SQ = (1 << MONSTATS2MODEFLAGINDEX_SQ),
	MONSTATS2MODEFLAG_RN = (1 << MONSTATS2MODEFLAGINDEX_RN),
};

enum D2C_PetTypeTxtFlagIndices
{
	PETTYPEFLAGINDEX_WARP = 0,
	PETTYPEFLAGINDEX_RANGE,
	PETTYPEFLAGINDEX_PARTYSEND,
	PETTYPEFLAGINDEX_UNSUMMON,
	PETTYPEFLAGINDEX_AUTOMAP,
	PETTYPEFLAGINDEX_DRAWHP,
};

enum D2C_PetTypeTxtFlags
{
	PETTYPEFLAG_WARP = (1 << PETTYPEFLAGINDEX_WARP),
	PETTYPEFLAG_RANGE = (1 << PETTYPEFLAGINDEX_RANGE),
	PETTYPEFLAG_PARTYSEND = (1 << PETTYPEFLAGINDEX_PARTYSEND),
	PETTYPEFLAG_UNSUMMON = (1 << PETTYPEFLAGINDEX_UNSUMMON),
	PETTYPEFLAG_AUTOMAP = (1 << PETTYPEFLAGINDEX_AUTOMAP),
	PETTYPEFLAG_DRAWHP = (1 << PETTYPEFLAGINDEX_DRAWHP),
};

enum D2C_ItemStatCostTxtFlagIndices
{
	ITEMSTATCOSTFLAGINDEX_SEND_OTHER = 0,
	ITEMSTATCOSTFLAGINDEX_SIGNED,
	ITEMSTATCOSTFLAGINDEX_DAMAGERELATED,
	ITEMSTATCOSTFLAGINDEX_ITEMSPECIFIC,
	ITEMSTATCOSTFLAGINDEX_DIRECT,

	ITEMSTATCOSTFLAGINDEX_HP_MANA_STAMINA = 5,
	ITEMSTATCOSTFLAGINDEX_HP,
	ITEMSTATCOSTFLAGINDEX_MANA,
	ITEMSTATCOSTFLAGINDEX_STAMINA,

	ITEMSTATCOSTFLAGINDEX_UPDATEANIMRATE = 9,
	ITEMSTATCOSTFLAGINDEX_FMIN,
	ITEMSTATCOSTFLAGINDEX_FCALLBACK,
	ITEMSTATCOSTFLAGINDEX_SAVED,
	ITEMSTATCOSTFLAGINDEX_CSVSIGNED,
};

enum D2C_ItemStatCostTxtFlags
{
	ITEMSTATCOSTFLAG_SEND_OTHER = (1 << ITEMSTATCOSTFLAGINDEX_SEND_OTHER),
	ITEMSTATCOSTFLAG_SIGNED = (1 << ITEMSTATCOSTFLAGINDEX_SIGNED),
	ITEMSTATCOSTFLAG_DAMAGERELATED = (1 << ITEMSTATCOSTFLAGINDEX_DAMAGERELATED),
	ITEMSTATCOSTFLAG_ITEMSPECIFIC = (1 << ITEMSTATCOSTFLAGINDEX_ITEMSPECIFIC),
	ITEMSTATCOSTFLAG_DIRECT = (1 << ITEMSTATCOSTFLAGINDEX_DIRECT),

	ITEMSTATCOSTFLAG_HP_MANA_STAMINA = (1 << ITEMSTATCOSTFLAGINDEX_HP_MANA_STAMINA),
	ITEMSTATCOSTFLAG_HP = (1 << ITEMSTATCOSTFLAGINDEX_HP),
	ITEMSTATCOSTFLAG_MANA = (1 << ITEMSTATCOSTFLAGINDEX_MANA),
	ITEMSTATCOSTFLAG_STAMINA = (1 << ITEMSTATCOSTFLAGINDEX_STAMINA),

	ITEMSTATCOSTFLAG_UPDATEANIMRATE = (1 << ITEMSTATCOSTFLAGINDEX_UPDATEANIMRATE),
	ITEMSTATCOSTFLAG_FMIN = (1 << ITEMSTATCOSTFLAGINDEX_FMIN),
	ITEMSTATCOSTFLAG_FCALLBACK = (1 << ITEMSTATCOSTFLAGINDEX_FCALLBACK),
	ITEMSTATCOSTFLAG_SAVED = (1 << ITEMSTATCOSTFLAGINDEX_SAVED),
	ITEMSTATCOSTFLAG_CSVSIGNED = (1 << ITEMSTATCOSTFLAGINDEX_CSVSIGNED),
};

enum D2C_UniqueItemsTxtFlagIndices
{
	UNIQUEITEMSFLAGINDEX_ENABLED = 0,
	UNIQUEITEMSFLAGINDEX_NOLIMIT,
	UNIQUEITEMSFLAGINDEX_CARRY1,
	UNIQUEITEMSFLAGINDEX_LADDER,
};

enum D2C_UniqueItemsTxtFlags
{
	UNIQUEITEMSFLAG_ENABLED = (1 << UNIQUEITEMSFLAGINDEX_ENABLED),
	UNIQUEITEMSFLAG_NOLIMIT = (1 << UNIQUEITEMSFLAGINDEX_NOLIMIT),
	UNIQUEITEMSFLAG_CARRY1 = (1 << UNIQUEITEMSFLAGINDEX_CARRY1),
	UNIQUEITEMSFLAG_LADDER = (1 << UNIQUEITEMSFLAGINDEX_LADDER),
};

enum D2C_MissilesTxtFlagIndices
{
	MISSILESFLAGINDEX_LASTCOLLIDE = 0,
	MISSILESFLAGINDEX_EXPLOSION,
	MISSILESFLAGINDEX_PIERCE,
	MISSILESFLAGINDEX_CANSLOW,
	MISSILESFLAGINDEX_CANDESTROY,
	MISSILESFLAGINDEX_CLIENTSEND,
	MISSILESFLAGINDEX_GETHIT,
	MISSILESFLAGINDEX_SOFTHIT,
	MISSILESFLAGINDEX_APPLYMASTERY,
	MISSILESFLAGINDEX_RETURNFIRE,
	MISSILESFLAGINDEX_TOWN,
	MISSILESFLAGINDEX_SRCTOWN,
	MISSILESFLAGINDEX_NOMULTISHOT,
	MISSILESFLAGINDEX_NOUNIQUEMOD,
	MISSILESFLAGINDEX_HALF2HSRC,
	MISSILESFLAGINDEX_MISSILESKILL,
};

enum D2C_MissilesTxtFlags
{
	MISSILESFLAG_LASTCOLLIDE = (1 << MISSILESFLAGINDEX_LASTCOLLIDE),
	MISSILESFLAG_EXPLOSION = (1 << MISSILESFLAGINDEX_EXPLOSION),
	MISSILESFLAG_PIERCE = (1 << MISSILESFLAGINDEX_PIERCE),
	MISSILESFLAG_CANSLOW = (1 << MISSILESFLAGINDEX_CANSLOW),
	MISSILESFLAG_CANDESTROY = (1 << MISSILESFLAGINDEX_CANDESTROY),
	MISSILESFLAG_CLIENTSEND = (1 << MISSILESFLAGINDEX_CLIENTSEND),
	MISSILESFLAG_GETHIT = (1 << MISSILESFLAGINDEX_GETHIT),
	MISSILESFLAG_SOFTHIT = (1 << MISSILESFLAGINDEX_SOFTHIT),
	MISSILESFLAG_APPLYMASTERY = (1 << MISSILESFLAGINDEX_APPLYMASTERY),
	MISSILESFLAG_RETURNFIRE = (1 << MISSILESFLAGINDEX_RETURNFIRE),
	MISSILESFLAG_TOWN = (1 << MISSILESFLAGINDEX_TOWN),
	MISSILESFLAG_SRCTOWN = (1 << MISSILESFLAGINDEX_SRCTOWN),
	MISSILESFLAG_NOMULTISHOT = (1 << MISSILESFLAGINDEX_NOMULTISHOT),
	MISSILESFLAG_NOUNIQUEMOD = (1 << MISSILESFLAGINDEX_NOUNIQUEMOD),
	MISSILESFLAG_HALF2HSRC = (1 << MISSILESFLAGINDEX_HALF2HSRC),
	MISSILESFLAG_MISSILESKILL = (1 << MISSILESFLAGINDEX_MISSILESKILL),
};

enum D2C_SkillsTxtFlagIndices
{
	SKILLSFLAGINDEX_DECQUANT = 0,
	SKILLSFLAGINDEX_LOB,
	SKILLSFLAGINDEX_PROGRESSIVE,
	SKILLSFLAGINDEX_FINISHING,
	SKILLSFLAGINDEX_PASSIVE,
	SKILLSFLAGINDEX_AURA,
	SKILLSFLAGINDEX_PERIODIC,
	SKILLSFLAGINDEX_PRGSTACK,
	SKILLSFLAGINDEX_INTOWN,
	SKILLSFLAGINDEX_KICK,
	SKILLSFLAGINDEX_INGAME,
	SKILLSFLAGINDEX_REPEAT,
	SKILLSFLAGINDEX_STSUCCESSONLY,
	SKILLSFLAGINDEX_STSOUNDDELAY,
	SKILLSFLAGINDEX_WEAPONSND,
	SKILLSFLAGINDEX_IMMEDIATE,
	SKILLSFLAGINDEX_NOAMMO,
	SKILLSFLAGINDEX_ENHANCEABLE,
	SKILLSFLAGINDEX_DURABILITY,
	SKILLSFLAGINDEX_USEATTACKRATE,
	SKILLSFLAGINDEX_TARGETABLEONLY,
	SKILLSFLAGINDEX_SEARCHENEMYXY,
	SKILLSFLAGINDEX_SEARCHENEMYNEAR,
	SKILLSFLAGINDEX_SEARCHOPENXY,
	SKILLSFLAGINDEX_TARGETCORPSE,
	SKILLSFLAGINDEX_TARGETPET,
	SKILLSFLAGINDEX_TARGETALLY,
	SKILLSFLAGINDEX_TARGETITEM,
	SKILLSFLAGINDEX_ATTACKNOMANA,
	SKILLSFLAGINDEX_ITEMTGTDO,
	SKILLSFLAGINDEX_LEFTSKILL,
	SKILLSFLAGINDEX_INTERRUPT,

	//Bits above 31 need to restart at 0
	SKILLSFLAGINDEX2_TGTPLACECHECK = 0,
	SKILLSFLAGINDEX2_ITEMCHECKSTART,
	SKILLSFLAGINDEX2_ITEMCLTCHECKSTART,
	SKILLSFLAGINDEX2_GENERAL,
	SKILLSFLAGINDEX2_SCROLL,
	SKILLSFLAGINDEX2_USEMANAONDO,
	SKILLSFLAGINDEX2_WARP,
};

enum D2C_SkillsTxtFlags
{
	SKILLSFLAG_DECQUANT = (1 << SKILLSFLAGINDEX_DECQUANT),
	SKILLSFLAG_LOB = (1 << SKILLSFLAGINDEX_LOB),
	SKILLSFLAG_PROGRESSIVE = (1 << SKILLSFLAGINDEX_PROGRESSIVE),
	SKILLSFLAG_FINISHING = (1 << SKILLSFLAGINDEX_FINISHING),
	SKILLSFLAG_PASSIVE = (1 << SKILLSFLAGINDEX_PASSIVE),
	SKILLSFLAG_AURA = (1 << SKILLSFLAGINDEX_AURA),
	SKILLSFLAG_PERIODIC = (1 << SKILLSFLAGINDEX_PERIODIC),
	SKILLSFLAG_PRGSTACK = (1 << SKILLSFLAGINDEX_PRGSTACK),
	SKILLSFLAG_INTOWN = (1 << SKILLSFLAGINDEX_INTOWN),
	SKILLSFLAG_KICK = (1 << SKILLSFLAGINDEX_KICK),
	SKILLSFLAG_INGAME = (1 << SKILLSFLAGINDEX_INGAME),
	SKILLSFLAG_REPEAT = (1 << SKILLSFLAGINDEX_REPEAT),
	SKILLSFLAG_STSUCCESSONLY = (1 << SKILLSFLAGINDEX_STSUCCESSONLY),
	SKILLSFLAG_STSOUNDDELAY = (1 << SKILLSFLAGINDEX_STSOUNDDELAY),
	SKILLSFLAG_WEAPONSND = (1 << SKILLSFLAGINDEX_WEAPONSND),
	SKILLSFLAG_IMMEDIATE = (1 << SKILLSFLAGINDEX_IMMEDIATE),
	SKILLSFLAG_NOAMMO = (1 << SKILLSFLAGINDEX_NOAMMO),
	SKILLSFLAG_ENHANCEABLE = (1 << SKILLSFLAGINDEX_ENHANCEABLE),
	SKILLSFLAG_DURABILITY = (1 << SKILLSFLAGINDEX_DURABILITY),
	SKILLSFLAG_USEATTACKRATE = (1 << SKILLSFLAGINDEX_USEATTACKRATE),
	SKILLSFLAG_TARGETABLEONLY = (1 << SKILLSFLAGINDEX_TARGETABLEONLY),
	SKILLSFLAG_SEARCHENEMYXY = (1 << SKILLSFLAGINDEX_SEARCHENEMYXY),
	SKILLSFLAG_SEARCHENEMYNEAR = (1 << SKILLSFLAGINDEX_SEARCHENEMYNEAR),
	SKILLSFLAG_SEARCHOPENXY = (1 << SKILLSFLAGINDEX_SEARCHOPENXY),
	SKILLSFLAG_TARGETCORPSE = (1 << SKILLSFLAGINDEX_TARGETCORPSE),
	SKILLSFLAG_TARGETPET = (1 << SKILLSFLAGINDEX_TARGETPET),
	SKILLSFLAG_TARGETALLY = (1 << SKILLSFLAGINDEX_TARGETALLY),
	SKILLSFLAG_TARGETITEM = (1 << SKILLSFLAGINDEX_TARGETITEM),
	SKILLSFLAG_ATTACKNOMANA = (1 << SKILLSFLAGINDEX_ATTACKNOMANA),
	SKILLSFLAG_ITEMTGTDO = (1 << SKILLSFLAGINDEX_ITEMTGTDO),
	SKILLSFLAG_LEFTSKILL = (1 << SKILLSFLAGINDEX_LEFTSKILL),
	SKILLSFLAG_INTERRUPT = (1 << SKILLSFLAGINDEX_INTERRUPT),

	//Bits above 31 need to restart at 0
	SKILLSFLAG2_TGTPLACECHECK = (1 << SKILLSFLAGINDEX2_TGTPLACECHECK),
	SKILLSFLAG2_ITEMCHECKSTART = (1 << SKILLSFLAGINDEX2_ITEMCHECKSTART),
	SKILLSFLAG2_ITEMCLTCHECKSTART = (1 << SKILLSFLAGINDEX2_ITEMCLTCHECKSTART),
	SKILLSFLAG2_GENERAL = (1 << SKILLSFLAGINDEX2_GENERAL),
	SKILLSFLAG2_SCROLL = (1 << SKILLSFLAGINDEX2_SCROLL),
	SKILLSFLAG2_USEMANAONDO = (1 << SKILLSFLAGINDEX2_USEMANAONDO),
	SKILLSFLAG2_WARP = (1 << SKILLSFLAGINDEX2_WARP),
};

enum D2C_StateMasks
{
	STATEMASK_NOSEND,
	STATEMASK_AURA,
	STATEMASK_HIDE,
	STATEMASK_TRANSFORM,
	STATEMASK_PGSV,
	STATEMASK_ACTIVE,
	STATEMASK_REMHIT,
	STATEMASK_DAMBLUE,
	STATEMASK_DAMRED,
	STATEMASK_ATTBLUE,
	STATEMASK_ATTRED,
	STATEMASK_CURSE,
	STATEMASK_CURABLE,
	STATEMASK_PLRSTAYDEATH,
	STATEMASK_MONSTAYDEATH,
	STATEMASK_BOSSSTAYDEATH,
	STATEMASK_DISGUISE,
	STATEMASK_RESTRICT,
	STATEMASK_BLUE,
	STATEMASK_ARMBLUE,
	STATEMASK_RFBLUE,
	STATEMASK_RCBLUE,
	STATEMASK_RLBLUE,
	STATEMASK_RPBLUE,
	STATEMASK_STAMBARBLUE,
	STATEMASK_ARMRED,
	STATEMASK_RFRED,
	STATEMASK_RCRED,
	STATEMASK_RLRED,
	STATEMASK_RPRED,
	STATEMASK_EXP,
	STATEMASK_SHATTER,
	STATEMASK_LIFE,
	STATEMASK_UDEAD,
	STATEMASK_GREEN,
	STATEMASK_NOOVERLAYS,
	STATEMASK_NOCLEAR,
	STATEMASK_BOSSINV,
	STATEMASK_MELEEONLY,
	STATEMASK_NOTONDEAD,
};
#endif // CONSTANTS_TXTFLAGS
